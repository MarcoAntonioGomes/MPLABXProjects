

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Jun 09 13:23:39 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 1.41
    64                           ; Generated 25/01/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4550 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataCOMRAM
    99  001A9A                     __pidataCOMRAM:
   100                           	opt stack 0
   101                           
   102                           ;initializer for _virouDia
   103  001A9A  01                 	db	1
   104                           
   105                           	psect	idataBANK0
   106  001A40                     __pidataBANK0:
   107                           	opt stack 0
   108                           
   109                           ;initializer for _dias_mes
   110  001A40  1F                 	db	31
   111  001A41  1C                 	db	28
   112  001A42  1F                 	db	31
   113  001A43  1E                 	db	30
   114  001A44  1F                 	db	31
   115  001A45  1E                 	db	30
   116  001A46  1F                 	db	31
   117  001A47  1F                 	db	31
   118  001A48  1E                 	db	30
   119  001A49  1F                 	db	31
   120  001A4A  1E                 	db	30
   121  001A4B  1F                 	db	31
   122                           
   123                           ;initializer for _versao
   124  001A4C  30                 	db	48
   125  001A4D  31                 	db	49
   126  001A4E  2E                 	db	46
   127  001A4F  30                 	db	48
   128  001A50  30                 	db	48
   129  001A51  00                 	db	0
   130                           
   131                           	psect	smallconst
   132  000800                     __psmallconst:
   133                           	opt stack 0
   134  000800  00                 	db	0
   135  000801                     _dpowers:
   136                           	opt stack 0
   137  000801  0001               	dw	1
   138  000803  000A               	dw	10
   139  000805  0064               	dw	100
   140  000807  03E8               	dw	1000
   141  000809  2710               	dw	10000
   142  00080B                     __end_of_dpowers:
   143                           	opt stack 0
   144  0000                     _TMR0	set	4054
   145  0000                     _TRISBbits	set	3987
   146  0000                     _PORTB	set	3969
   147  0000                     _LATBbits	set	3978
   148  0000                     _T0CONbits	set	4053
   149  0000                     _TRISCbits	set	3988
   150  0000                     _TXSTA	set	4012
   151  0000                     _RCSTA	set	4011
   152  0000                     _SPBRG	set	4015
   153  0000                     _TRISD	set	3989
   154  0000                     _TRISB	set	3987
   155  0000                     _ADCON1	set	4033
   156  0000                     _PORTCbits	set	3970
   157  0000                     _PORTDbits	set	3971
   158  0000                     _RCREG	set	4014
   159  0000                     _PIR1bits	set	3998
   160  0000                     _INTCONbits	set	4082
   161  0000                     _TXREG	set	4013
   162  0000                     _PEIE	set	32662
   163  0000                     _RCIE	set	31981
   164  0000                     _RCIP	set	31997
   165  0000                     _RCIF	set	31989
   166  0000                     _TMR0IF	set	32658
   167  0000                     _TXIF	set	31988
   168  00080B                     STR_6:
   169  00080B  20                 	db	32
   170  00080C  20                 	db	32
   171  00080D  20                 	db	32
   172  00080E  20                 	db	32
   173  00080F  20                 	db	32
   174  000810  41                 	db	65	;'A'
   175  000811  4C                 	db	76	;'L'
   176  000812  41                 	db	65	;'A'
   177  000813  52                 	db	82	;'R'
   178  000814  4D                 	db	77	;'M'
   179  000815  45                 	db	69	;'E'
   180  000816  20                 	db	32
   181  000817  20                 	db	32
   182  000818  20                 	db	32
   183  000819  20                 	db	32
   184  00081A  20                 	db	32
   185  00081B  00                 	db	0
   186  00081C                     STR_2:
   187  00081C  44                 	db	68	;'D'
   188  00081D  65                 	db	101	;'e'
   189  00081E  73                 	db	115	;'s'
   190  00081F  70                 	db	112	;'p'
   191  000820  65                 	db	101	;'e'
   192  000821  72                 	db	114	;'r'
   193  000822  74                 	db	116	;'t'
   194  000823  61                 	db	97	;'a'
   195  000824  64                 	db	100	;'d'
   196  000825  6F                 	db	111	;'o'
   197  000826  72                 	db	114	;'r'
   198  000827  20                 	db	32
   199  000828  20                 	db	32
   200  000829  20                 	db	32
   201  00082A  20                 	db	32
   202  00082B  20                 	db	32
   203  00082C  00                 	db	0
   204  00082D                     STR_3:
   205  00082D  56                 	db	86	;'V'
   206  00082E  65                 	db	101	;'e'
   207  00082F  72                 	db	114	;'r'
   208  000830  73                 	db	115	;'s'
   209  000831  61                 	db	97	;'a'
   210  000832  6F                 	db	111	;'o'
   211  000833  3A                 	db	58	;':'
   212  000834  20                 	db	32
   213  000835  00                 	db	0
   214  000836                     STR_8:
   215  000836  20                 	db	32
   216  000837  20                 	db	32
   217  000838  20                 	db	32
   218  000839  20                 	db	32
   219  00083A  20                 	db	32
   220  00083B  20                 	db	32
   221  00083C  00                 	db	0
   222  00083D                     STR_4:
   223  00083D  48                 	db	72	;'H'
   224  00083E  6F                 	db	111	;'o'
   225  00083F  72                 	db	114	;'r'
   226  000840  61                 	db	97	;'a'
   227  000841  3A                 	db	58	;':'
   228  000842  20                 	db	32
   229  000843  00                 	db	0
   230  000844                     STR_5:
   231  000844  44                 	db	68	;'D'
   232  000845  61                 	db	97	;'a'
   233  000846  74                 	db	116	;'t'
   234  000847  61                 	db	97	;'a'
   235  000848  3A                 	db	58	;':'
   236  000849  20                 	db	32
   237  00084A  00                 	db	0
   238  00084B                     STR_1:
   239  00084B  25                 	db	37
   240  00084C  69                 	db	105	;'i'
   241  00084D  00                 	db	0
   242  0000                     
   243                           ; #config settings
   244  00084E  00                 	db	0	; dummy byte at the end
   245  0000                     
   246                           	psect	cinit
   247  001554                     __pcinit:
   248                           	opt stack 0
   249  001554                     start_initialization:
   250                           	opt stack 0
   251  001554                     __initialization:
   252                           	opt stack 0
   253                           
   254                           ; Initialize objects allocated to BANK0 (18 bytes)
   255                           ; load TBLPTR registers with __pidataBANK0
   256  001554  0E40               	movlw	low __pidataBANK0
   257  001556  6EF6               	movwf	tblptrl,c
   258  001558  0E1A               	movlw	high __pidataBANK0
   259  00155A  6EF7               	movwf	tblptrh,c
   260  00155C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   261  00155E  6EF8               	movwf	tblptru,c
   262  001560  EE00  F087         	lfsr	0,__pdataBANK0
   263  001564  EE10 F012          	lfsr	1,18
   264  001568                     copy_data0:
   265  001568  0009               	tblrd		*+
   266  00156A  CFF5 FFEE          	movff	tablat,postinc0
   267  00156E  50E5               	movf	postdec1,w,c
   268  001570  50E1               	movf	fsr1l,w,c
   269  001572  E1FA               	bnz	copy_data0
   270                           
   271                           ; Initialize objects allocated to COMRAM (1 bytes)
   272                           ; load TBLPTR registers with __pidataCOMRAM
   273  001574  0E9A               	movlw	low __pidataCOMRAM
   274  001576  6EF6               	movwf	tblptrl,c
   275  001578  0E1A               	movlw	high __pidataCOMRAM
   276  00157A  6EF7               	movwf	tblptrh,c
   277  00157C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   278  00157E  6EF8               	movwf	tblptru,c
   279  001580  0009               	tblrd		*+	;fetch initializer
   280  001582  CFF5 F048          	movff	tablat,__pdataCOMRAM
   281                           
   282                           ; Clear objects allocated to BANK0 (20 bytes)
   283  001586  EE00  F060         	lfsr	0,__pbssBANK0
   284  00158A  0E14               	movlw	20
   285  00158C                     clear_0:
   286  00158C  6AEE               	clrf	postinc0,c
   287  00158E  06E8               	decf	wreg,f,c
   288  001590  E1FD               	bnz	clear_0
   289                           
   290                           ; Clear objects allocated to COMRAM (32 bytes)
   291  001592  EE00  F028         	lfsr	0,__pbssCOMRAM
   292  001596  0E20               	movlw	32
   293  001598                     clear_1:
   294  001598  6AEE               	clrf	postinc0,c
   295  00159A  06E8               	decf	wreg,f,c
   296  00159C  E1FD               	bnz	clear_1
   297  00159E                     end_of_initialization:
   298                           	opt stack 0
   299  00159E                     __end_of__initialization:
   300                           	opt stack 0
   301  00159E  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   302  0015A0  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   303  0015A2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   304  0015A4  6EF8               	movwf	tblptru,c
   305  0015A6  0100               	movlb	0
   306  0015A8  EF35  F006         	goto	_main	;jump to C main() function
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	bssCOMRAM
   317  000028                     __pbssCOMRAM:
   318                           	opt stack 0
   319  000028                     _tela_atual:
   320                           	opt stack 0
   321  000028                     	ds	1
   322  000029                     _tempoDespertador:
   323                           	opt stack 0
   324  000029                     	ds	1
   325  00002A                     _botaoMin:
   326                           	opt stack 0
   327  00002A                     	ds	1
   328  00002B                     _botaoHora:
   329                           	opt stack 0
   330  00002B                     	ds	1
   331  00002C                     _flagDespertadorLigado:
   332                           	opt stack 0
   333  00002C                     	ds	1
   334  00002D                     _cont:
   335                           	opt stack 0
   336  00002D                     	ds	1
   337  00002E                     _flagSegundo:
   338                           	opt stack 0
   339  00002E                     	ds	1
   340  00002F                     _i:
   341                           	opt stack 0
   342  00002F                     	ds	1
   343  000030                     _estado:
   344                           	opt stack 0
   345  000030                     	ds	1
   346  000031                     _BUFFRESP:
   347                           	opt stack 0
   348  000031                     	ds	7
   349  000038                     _BUFFCOM:
   350                           	opt stack 0
   351  000038                     	ds	7
   352  00003F                     _horarioDespertador:
   353                           	opt stack 0
   354  00003F                     	ds	6
   355  000045                     _pegaHoraData:
   356                           	opt stack 0
   357  000045                     	ds	3
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	dataCOMRAM
   368  000048                     __pdataCOMRAM:
   369                           	opt stack 0
   370  000048                     _virouDia:
   371                           	opt stack 0
   372  000048                     	ds	1
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           postinc0	equ	0xFEE
   378                           wreg	equ	0xFE8
   379                           postdec1	equ	0xFE5
   380                           fsr1l	equ	0xFE1
   381                           
   382                           	psect	bssBANK0
   383  000060                     __pbssBANK0:
   384                           	opt stack 0
   385  000060                     _data_horario:
   386                           	opt stack 0
   387  000060                     	ds	20
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           postdec1	equ	0xFE5
   395                           fsr1l	equ	0xFE1
   396                           
   397                           	psect	dataBANK0
   398  000087                     __pdataBANK0:
   399                           	opt stack 0
   400  000087                     _dias_mes:
   401                           	opt stack 0
   402  000087                     	ds	12
   403  000093                     _versao:
   404                           	opt stack 0
   405  000093                     	ds	6
   406                           tblptru	equ	0xFF8
   407                           tblptrh	equ	0xFF7
   408                           tblptrl	equ	0xFF6
   409                           tablat	equ	0xFF5
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           postdec1	equ	0xFE5
   413                           fsr1l	equ	0xFE1
   414                           
   415                           	psect	cstackBANK0
   416  000074                     __pcstackBANK0:
   417                           	opt stack 0
   418  000074                     ?_sprintf:
   419                           	opt stack 0
   420  000074                     verificaCRCBUFFCOM@crc1:
   421                           	opt stack 0
   422  000074                     sprintf@sp:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x0
   426  000074                     	ds	2
   427  000076                     verificaCRCBUFFCOM@crc2:
   428                           	opt stack 0
   429  000076                     sprintf@f:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x2
   433  000076                     	ds	2
   434  000078                     verificaCRCBUFFCOM@CRC_OK:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x4
   438  000078                     	ds	1
   439  000079                     verificaCRCBUFFCOM@crc:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x5
   443  000079                     	ds	1
   444  00007A                     sprintf@ap:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x6
   448  00007A                     	ds	2
   449  00007C                     sprintf@flag:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x8
   453  00007C                     	ds	1
   454  00007D                     sprintf@prec:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x9
   458  00007D                     	ds	1
   459  00007E                     sprintf@val:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0xA
   463  00007E                     	ds	2
   464  000080                     sprintf@c:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0xC
   468  000080                     	ds	1
   469  000081                     converteAnoString@anoStr:
   470                           	opt stack 0
   471                           
   472                           ; 4 bytes @ 0xD
   473  000081                     	ds	4
   474  000085                     atualiza_Tela@troca_ou_nao:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x11
   478  000085                     	ds	1
   479  000086                     main@botao:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x12
   483  000086                     	ds	1
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           postdec1	equ	0xFE5
   491                           fsr1l	equ	0xFE1
   492                           
   493                           	psect	cstackCOMRAM
   494  000001                     __pcstackCOMRAM:
   495                           	opt stack 0
   496  000001                     i1Delay10TCYx@unit:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x0
   500  000001                     	ds	1
   501  000002                     ??i1_SetDDRamAddr:
   502  000002                     i1WriteDataXLCD@data:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1
   506  000002                     	ds	1
   507  000003                     i1putrsXLCD@buffer:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x2
   511  000003                     	ds	2
   512  000005                     i1SetDDRamAddr@DDaddr:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x4
   516  000005                     	ds	1
   517  000006                     ??_pic_isr:
   518                           
   519                           ; 1 bytes @ 0x5
   520  000006                     	ds	17
   521  000017                     ??_Delay10KTCYx:
   522  000017                     ??_isdigit:
   523  000017                     ?_strlen:
   524                           	opt stack 0
   525  000017                     ?_crc16:
   526                           	opt stack 0
   527  000017                     ?___wmul:
   528                           	opt stack 0
   529  000017                     ?___awdiv:
   530                           	opt stack 0
   531  000017                     ?___awmod:
   532                           	opt stack 0
   533  000017                     ?___lwdiv:
   534                           	opt stack 0
   535  000017                     enviaByte@BYTE:
   536                           	opt stack 0
   537  000017                     Delay10TCYx@unit:
   538                           	opt stack 0
   539  000017                     Delay1KTCYx@unit:
   540                           	opt stack 0
   541  000017                     crc16@data_p:
   542                           	opt stack 0
   543  000017                     tx_data@cont:
   544                           	opt stack 0
   545  000017                     ___wmul@multiplier:
   546                           	opt stack 0
   547  000017                     ___awdiv@dividend:
   548                           	opt stack 0
   549  000017                     ___awmod@dividend:
   550                           	opt stack 0
   551  000017                     ___lwdiv@dividend:
   552                           	opt stack 0
   553  000017                     strlen@s:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x16
   557  000017                     	ds	1
   558  000018                     ??_SetDDRamAddr:
   559  000018                     WriteCmdXLCD@cmd:
   560                           	opt stack 0
   561  000018                     WriteDataXLCD@data:
   562                           	opt stack 0
   563  000018                     Delay10KTCYx@unit:
   564                           	opt stack 0
   565  000018                     _isdigit$1098:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x17
   569  000018                     	ds	1
   570  000019                     ??_strlen:
   571  000019                     isdigit@c:
   572                           	opt stack 0
   573  000019                     crc16@length:
   574                           	opt stack 0
   575  000019                     ___wmul@multiplicand:
   576                           	opt stack 0
   577  000019                     ___awdiv@divisor:
   578                           	opt stack 0
   579  000019                     ___awmod@divisor:
   580                           	opt stack 0
   581  000019                     ___lwdiv@divisor:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x18
   585  000019                     	ds	2
   586  00001B                     ??_crc16:
   587  00001B                     SetDDRamAddr@DDaddr:
   588                           	opt stack 0
   589  00001B                     ___awdiv@counter:
   590                           	opt stack 0
   591  00001B                     ___awmod@counter:
   592                           	opt stack 0
   593  00001B                     ___lwdiv@counter:
   594                           	opt stack 0
   595  00001B                     ___wmul@product:
   596                           	opt stack 0
   597  00001B                     strlen@cp:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x1A
   601  00001B                     	ds	1
   602  00001C                     OpenXLCD@lcdtype:
   603                           	opt stack 0
   604  00001C                     ___awdiv@sign:
   605                           	opt stack 0
   606  00001C                     ___awmod@sign:
   607                           	opt stack 0
   608  00001C                     ___lwdiv@quotient:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x1B
   612  00001C                     	ds	1
   613  00001D                     ?_atoi:
   614                           	opt stack 0
   615  00001D                     verificaAnoBissexto@ano:
   616                           	opt stack 0
   617  00001D                     atoi@s:
   618                           	opt stack 0
   619  00001D                     ___awdiv@quotient:
   620                           	opt stack 0
   621  00001D                     memcpy@d1:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x1C
   625  00001D                     	ds	1
   626  00001E                     ?___lwmod:
   627                           	opt stack 0
   628  00001E                     ___lwmod@dividend:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x1D
   632  00001E                     	ds	1
   633  00001F                     ??_atoi:
   634  00001F                     ??_verificaAnoBissexto:
   635  00001F                     crc16@i:
   636                           	opt stack 0
   637  00001F                     memcpy@s1:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x1E
   641  00001F                     	ds	1
   642  000020                     crc16@data:
   643                           	opt stack 0
   644  000020                     ___lwmod@divisor:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x1F
   648  000020                     	ds	1
   649  000021                     ??_trata_relogio_data:
   650  000021                     atoi@sign:
   651                           	opt stack 0
   652  000021                     memcpy@n:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x20
   656  000021                     	ds	1
   657  000022                     ___lwmod@counter:
   658                           	opt stack 0
   659  000022                     crc16@crc:
   660                           	opt stack 0
   661  000022                     atoi@a:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x21
   665  000022                     	ds	1
   666  000023                     ??_sprintf:
   667  000023                     memcpy@d:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x22
   671  000023                     	ds	1
   672  000024                     ??_verificaCRCBUFFCOM:
   673  000024                     ?_converteAnoString:
   674                           	opt stack 0
   675  000024                     converteAnoString@ano:
   676                           	opt stack 0
   677  000024                     calculaCRCBUFFRESP@crc:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x23
   681  000024                     	ds	1
   682  000025                     memcpy@s:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x24
   686  000025                     	ds	1
   687  000026                     putrsXLCD@buffer:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x25
   691  000026                     	ds	2
   692  000028                     tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           postinc0	equ	0xFEE
   697                           wreg	equ	0xFE8
   698                           postdec1	equ	0xFE5
   699                           fsr1l	equ	0xFE1
   700                           
   701                           ; 1 bytes @ 0x27
   702 ;;
   703 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   704 ;;
   705 ;; *************** function _main *****************
   706 ;; Defined at:
   707 ;;		line 600 in file "main.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  botao           1   18[BANK0 ] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   721 ;;      Params:         0       0       0       0       0       0       0       0       0
   722 ;;      Locals:         0       1       0       0       0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0
   724 ;;      Totals:         0       1       0       0       0       0       0       0       0
   725 ;;Total ram usage:        1 bytes
   726 ;; Hardware stack levels required when called:   13
   727 ;; This function calls:
   728 ;;		_Delay10KTCYx
   729 ;;		_atualiza_Tela
   730 ;;		_init_XLCD
   731 ;;		_maquinaEstado
   732 ;;		_setaDespertador
   733 ;;		_trata_relogio_data
   734 ;; This function is called by:
   735 ;;		Startup code after reset
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text0
   740  000C6A                     __ptext0:
   741                           	opt stack 0
   742  000C6A                     _main:
   743                           	opt stack 18
   744                           
   745                           ;main.c: 601: ADCON1 = 0x0F;
   746                           
   747                           ;incstack = 0
   748  000C6A  0E0F               	movlw	15
   749  000C6C  6EC1               	movwf	4033,c	;volatile
   750                           
   751                           ;main.c: 602: TRISB = 0x00;
   752  000C6E  0E00               	movlw	0
   753  000C70  6E93               	movwf	3987,c	;volatile
   754                           
   755                           ;main.c: 603: TRISD = 0x00;
   756  000C72  0E00               	movlw	0
   757  000C74  6E95               	movwf	3989,c	;volatile
   758                           
   759                           ;main.c: 605: SPBRG=(((12000000/64)/9600)-1);
   760  000C76  0E12               	movlw	18
   761  000C78  6EAF               	movwf	4015,c	;volatile
   762                           
   763                           ;main.c: 611: RCSTA = 0b10010000;
   764  000C7A  0E90               	movlw	144
   765  000C7C  6EAB               	movwf	4011,c	;volatile
   766                           
   767                           ;main.c: 612: TXSTA = 0b00100000;
   768  000C7E  0E20               	movlw	32
   769  000C80  6EAC               	movwf	4012,c	;volatile
   770                           
   771                           ;main.c: 614: TRISCbits.RC0 = 1;
   772  000C82  8094               	bsf	3988,0,c	;volatile
   773                           
   774                           ;main.c: 615: TRISCbits.RC1 = 1;
   775  000C84  8294               	bsf	3988,1,c	;volatile
   776                           
   777                           ;main.c: 616: TRISCbits.RC2 = 1;
   778  000C86  8494               	bsf	3988,2,c	;volatile
   779                           
   780                           ;main.c: 618: TRISCbits.RC6 = 0;
   781  000C88  9C94               	bcf	3988,6,c	;volatile
   782                           
   783                           ;main.c: 619: TRISCbits.RC7 = 1;
   784  000C8A  8E94               	bsf	3988,7,c	;volatile
   785                           
   786                           ;main.c: 622: RCIF = 0;
   787  000C8C  9A9E               	bcf	3998,5,c	;volatile
   788                           
   789                           ;main.c: 623: RCIP = 0;
   790  000C8E  9A9F               	bcf	3999,5,c	;volatile
   791                           
   792                           ;main.c: 624: RCIE = 1;
   793  000C90  8A9D               	bsf	3997,5,c	;volatile
   794                           
   795                           ;main.c: 625: PEIE = 1;
   796  000C92  8CF2               	bsf	intcon,6,c	;volatile
   797                           
   798                           ;main.c: 626: char botao;
   799                           ;main.c: 630: data_horario.horario[0] = '2';
   800  000C94  0E32               	movlw	50
   801  000C96  0100               	movlb	0	; () banked
   802  000C98  6F60               	movwf	_data_horario& (0+255),b
   803                           
   804                           ;main.c: 631: data_horario.horario[1] = '3';
   805  000C9A  0E33               	movlw	51
   806  000C9C  0100               	movlb	0	; () banked
   807  000C9E  6F61               	movwf	(_data_horario+1)& (0+255),b
   808                           
   809                           ;main.c: 632: data_horario.horario[2] = ':';
   810  000CA0  0E3A               	movlw	58
   811  000CA2  0100               	movlb	0	; () banked
   812  000CA4  6F62               	movwf	(_data_horario+2)& (0+255),b
   813                           
   814                           ;main.c: 633: data_horario.horario[3] = '5';
   815  000CA6  0E35               	movlw	53
   816  000CA8  0100               	movlb	0	; () banked
   817  000CAA  6F63               	movwf	(_data_horario+3)& (0+255),b
   818                           
   819                           ;main.c: 634: data_horario.horario[4] = '9';
   820  000CAC  0E39               	movlw	57
   821  000CAE  0100               	movlb	0	; () banked
   822  000CB0  6F64               	movwf	(_data_horario+4)& (0+255),b
   823                           
   824                           ;main.c: 635: data_horario.horario[5] = ':';
   825  000CB2  0E3A               	movlw	58
   826  000CB4  0100               	movlb	0	; () banked
   827  000CB6  6F65               	movwf	(_data_horario+5)& (0+255),b
   828                           
   829                           ;main.c: 636: data_horario.horario[6] = '5';
   830  000CB8  0E35               	movlw	53
   831  000CBA  0100               	movlb	0	; () banked
   832  000CBC  6F66               	movwf	(_data_horario+6)& (0+255),b
   833                           
   834                           ;main.c: 637: data_horario.horario[7] = '0';
   835  000CBE  0E30               	movlw	48
   836  000CC0  0100               	movlb	0	; () banked
   837  000CC2  6F67               	movwf	(_data_horario+7)& (0+255),b
   838                           
   839                           ;main.c: 638: data_horario.horario[8] = '\0';
   840  000CC4  0E00               	movlw	0
   841  000CC6  0100               	movlb	0	; () banked
   842  000CC8  6F68               	movwf	(_data_horario+8)& (0+255),b
   843                           
   844                           ;main.c: 640: data_horario.data[0] = '3';
   845  000CCA  0E33               	movlw	51
   846  000CCC  0100               	movlb	0	; () banked
   847  000CCE  6F69               	movwf	(_data_horario+9)& (0+255),b
   848                           
   849                           ;main.c: 641: data_horario.data[1] = '1';
   850  000CD0  0E31               	movlw	49
   851  000CD2  0100               	movlb	0	; () banked
   852  000CD4  6F6A               	movwf	(_data_horario+10)& (0+255),b
   853                           
   854                           ;main.c: 642: data_horario.data[2] = '/';
   855  000CD6  0E2F               	movlw	47
   856  000CD8  0100               	movlb	0	; () banked
   857  000CDA  6F6B               	movwf	(_data_horario+11)& (0+255),b
   858                           
   859                           ;main.c: 643: data_horario.data[3] = '1';
   860  000CDC  0E31               	movlw	49
   861  000CDE  0100               	movlb	0	; () banked
   862  000CE0  6F6C               	movwf	(_data_horario+12)& (0+255),b
   863                           
   864                           ;main.c: 644: data_horario.data[4] = '2';
   865  000CE2  0E32               	movlw	50
   866  000CE4  0100               	movlb	0	; () banked
   867  000CE6  6F6D               	movwf	(_data_horario+13)& (0+255),b
   868                           
   869                           ;main.c: 645: data_horario.data[5] = '/';
   870  000CE8  0E2F               	movlw	47
   871  000CEA  0100               	movlb	0	; () banked
   872  000CEC  6F6E               	movwf	(_data_horario+14)& (0+255),b
   873                           
   874                           ;main.c: 646: data_horario.data[6] = '\0';
   875  000CEE  0E00               	movlw	0
   876  000CF0  0100               	movlb	0	; () banked
   877  000CF2  6F6F               	movwf	(_data_horario+15)& (0+255),b
   878                           
   879                           ;main.c: 647: data_horario.ano = 2018;
   880  000CF4  0E07               	movlw	7
   881  000CF6  0100               	movlb	0	; () banked
   882  000CF8  6F73               	movwf	(_data_horario+19)& (0+255),b
   883  000CFA  0EE2               	movlw	226
   884  000CFC  6F72               	movwf	(_data_horario+18)& (0+255),b
   885                           
   886                           ;main.c: 648: data_horario.dias = 31;
   887  000CFE  0E1F               	movlw	31
   888  000D00  0100               	movlb	0	; () banked
   889  000D02  6F70               	movwf	(_data_horario+16)& (0+255),b
   890                           
   891                           ;main.c: 649: data_horario.mes_atual = 11;
   892  000D04  0E0B               	movlw	11
   893  000D06  0100               	movlb	0	; () banked
   894  000D08  6F71               	movwf	(_data_horario+17)& (0+255),b
   895                           
   896                           ;main.c: 651: horarioDespertador[0] = '0';
   897  000D0A  0E30               	movlw	48
   898  000D0C  6E3F               	movwf	_horarioDespertador,c
   899                           
   900                           ;main.c: 652: horarioDespertador[1] = '0';
   901  000D0E  0E30               	movlw	48
   902  000D10  6E40               	movwf	_horarioDespertador+1,c
   903                           
   904                           ;main.c: 653: horarioDespertador[2] = ':';
   905  000D12  0E3A               	movlw	58
   906  000D14  6E41               	movwf	_horarioDespertador+2,c
   907                           
   908                           ;main.c: 654: horarioDespertador[3] = '0';
   909  000D16  0E30               	movlw	48
   910  000D18  6E42               	movwf	_horarioDespertador+3,c
   911                           
   912                           ;main.c: 655: horarioDespertador[4] = '1';
   913  000D1A  0E31               	movlw	49
   914  000D1C  6E43               	movwf	_horarioDespertador+4,c
   915                           
   916                           ;main.c: 656: horarioDespertador[5] = '\0';
   917  000D1E  0E00               	movlw	0
   918  000D20  6E44               	movwf	_horarioDespertador+5,c
   919                           
   920                           ; BSR set to: 0
   921                           ;main.c: 658: T0CONbits.TMR0ON = 0;
   922  000D22  9ED5               	bcf	4053,7,c	;volatile
   923                           
   924                           ; BSR set to: 0
   925                           ;main.c: 659: INTCONbits.TMR0IE = 1;
   926  000D24  8AF2               	bsf	intcon,5,c	;volatile
   927                           
   928                           ; BSR set to: 0
   929                           ;main.c: 660: INTCONbits.TMR0IF = 0;
   930  000D26  94F2               	bcf	intcon,2,c	;volatile
   931                           
   932                           ; BSR set to: 0
   933                           ;main.c: 661: T0CONbits.T08BIT = 0;
   934  000D28  9CD5               	bcf	4053,6,c	;volatile
   935                           
   936                           ; BSR set to: 0
   937                           ;main.c: 662: T0CONbits.PSA = 0;
   938  000D2A  96D5               	bcf	4053,3,c	;volatile
   939                           
   940                           ; BSR set to: 0
   941                           ;main.c: 663: T0CONbits.T0PS0 = 1;
   942  000D2C  80D5               	bsf	4053,0,c	;volatile
   943                           
   944                           ; BSR set to: 0
   945                           ;main.c: 664: T0CONbits.T0PS1 = 0;
   946  000D2E  92D5               	bcf	4053,1,c	;volatile
   947                           
   948                           ; BSR set to: 0
   949                           ;main.c: 665: T0CONbits.T0PS2 = 1;
   950  000D30  84D5               	bsf	4053,2,c	;volatile
   951                           
   952                           ; BSR set to: 0
   953                           ;main.c: 666: T0CONbits.T0CS = 0;
   954  000D32  9AD5               	bcf	4053,5,c	;volatile
   955                           
   956                           ;main.c: 667: TMR0 = 26474;
   957  000D34  0E67               	movlw	103
   958  000D36  6ED7               	movwf	4055,c	;volatile
   959  000D38  0E6A               	movlw	106
   960  000D3A  6ED6               	movwf	4054,c	;volatile
   961                           
   962                           ; BSR set to: 0
   963                           ;main.c: 668: T0CONbits.TMR0ON = 1;
   964  000D3C  8ED5               	bsf	4053,7,c	;volatile
   965                           
   966                           ; BSR set to: 0
   967                           ;main.c: 669: INTCONbits.GIEH = 1;
   968  000D3E  8EF2               	bsf	intcon,7,c	;volatile
   969                           
   970                           ; BSR set to: 0
   971                           ;main.c: 670: INTCONbits.GIEL = 1;
   972  000D40  8CF2               	bsf	intcon,6,c	;volatile
   973                           
   974                           ; BSR set to: 0
   975                           ;main.c: 673: init_XLCD();
   976  000D42  ECFC  F00C         	call	_init_XLCD	;wreg free
   977  000D46                     l4134:
   978                           
   979                           ;main.c: 677: maquinaEstado();
   980  000D46  EC51  F00B         	call	_maquinaEstado	;wreg free
   981                           
   982                           ;main.c: 678: botao = PORTCbits.RC0;
   983  000D4A  0E00               	movlw	0
   984  000D4C  B082               	btfsc	3970,0,c	;volatile
   985  000D4E  0E01               	movlw	1
   986  000D50  0100               	movlb	0	; () banked
   987  000D52  6F86               	movwf	main@botao& (0+255),b
   988                           
   989                           ; BSR set to: 0
   990                           ;main.c: 679: if(botao){
   991  000D54  0100               	movlb	0	; () banked
   992  000D56  5186               	movf	main@botao& (0+255),w,b
   993  000D58  0100               	movlb	0	; () banked
   994  000D5A  B4D8               	btfsc	status,2,c
   995  000D5C  D011               	goto	l4148
   996                           
   997                           ; BSR set to: 0
   998                           ;main.c: 680: Delay10KTCYx(180);
   999  000D5E  0EB4               	movlw	180
  1000  000D60  EC0B  F00D         	call	_Delay10KTCYx
  1001                           
  1002                           ;main.c: 682: atualiza_Tela(1);
  1003  000D64  0E01               	movlw	1
  1004  000D66  EC69  F007         	call	_atualiza_Tela
  1005                           
  1006                           ;main.c: 684: while(botao){
  1007  000D6A  D005               	goto	l4146
  1008  000D6C                     l4144:
  1009                           
  1010                           ;main.c: 685: botao = PORTCbits.RC0;
  1011  000D6C  0E00               	movlw	0
  1012  000D6E  B082               	btfsc	3970,0,c	;volatile
  1013  000D70  0E01               	movlw	1
  1014  000D72  0100               	movlb	0	; () banked
  1015  000D74  6F86               	movwf	main@botao& (0+255),b
  1016  000D76                     l4146:
  1017  000D76  0100               	movlb	0	; () banked
  1018  000D78  5186               	movf	main@botao& (0+255),w,b
  1019  000D7A  0100               	movlb	0	; () banked
  1020  000D7C  A4D8               	btfss	status,2,c
  1021  000D7E  D7F6               	goto	l4144
  1022  000D80                     l4148:
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;main.c: 686: }
  1026                           ;main.c: 687: }
  1027                           ;main.c: 689: if(flagSegundo){
  1028  000D80  502E               	movf	_flagSegundo,w,c
  1029  000D82  B4D8               	btfsc	status,2,c
  1030  000D84  D007               	goto	l4156
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;main.c: 691: atualiza_Tela(0);
  1034  000D86  0E00               	movlw	0
  1035  000D88  EC69  F007         	call	_atualiza_Tela
  1036                           
  1037                           ;main.c: 692: trata_relogio_data();
  1038  000D8C  ECD1  F006         	call	_trata_relogio_data	;wreg free
  1039                           
  1040                           ;main.c: 693: flagSegundo=0;
  1041  000D90  0E00               	movlw	0
  1042  000D92  6E2E               	movwf	_flagSegundo,c
  1043  000D94                     l4156:
  1044                           
  1045                           ;main.c: 695: }
  1046                           ;main.c: 696: if(tela_atual == 2){
  1047  000D94  0E02               	movlw	2
  1048  000D96  1828               	xorwf	_tela_atual,w,c
  1049  000D98  A4D8               	btfss	status,2,c
  1050  000D9A  D7D5               	goto	l4134
  1051                           
  1052                           ;main.c: 697: setaDespertador();
  1053  000D9C  EC17  F009         	call	_setaDespertador	;wreg free
  1054  000DA0  D7D2               	goto	l4134
  1055  000DA2                     __end_of_main:
  1056                           	opt stack 0
  1057                           tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           intcon	equ	0xFF2
  1062                           postinc0	equ	0xFEE
  1063                           wreg	equ	0xFE8
  1064                           postdec1	equ	0xFE5
  1065                           fsr1l	equ	0xFE1
  1066                           status	equ	0xFD8
  1067                           
  1068 ;; *************** function _trata_relogio_data *****************
  1069 ;; Defined at:
  1070 ;;		line 175 in file "main.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1084 ;;      Params:         0       0       0       0       0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1086 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1087 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1088 ;;Total ram usage:        5 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    8
  1091 ;; This function calls:
  1092 ;;		_verificaAnoBissexto
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text1
  1099  000DA2                     __ptext1:
  1100                           	opt stack 0
  1101  000DA2                     _trata_relogio_data:
  1102                           	opt stack 22
  1103                           
  1104                           ;main.c: 176: data_horario.horario[7]++;
  1105                           
  1106                           ;incstack = 0
  1107  000DA2  0100               	movlb	0	; () banked
  1108  000DA4  2B67               	incf	(_data_horario+7)& (0+255),f,b
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;main.c: 177: if(data_horario.horario[7]>'9'){
  1112  000DA6  0E39               	movlw	57
  1113  000DA8  0100               	movlb	0	; () banked
  1114  000DAA  6567               	cpfsgt	(_data_horario+7)& (0+255),b
  1115  000DAC  0012               	return	
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;main.c: 178: data_horario.horario[7]='0';
  1119  000DAE  0E30               	movlw	48
  1120  000DB0  0100               	movlb	0	; () banked
  1121  000DB2  6F67               	movwf	(_data_horario+7)& (0+255),b
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;main.c: 179: data_horario.horario[6]++;
  1125  000DB4  0100               	movlb	0	; () banked
  1126  000DB6  2B66               	incf	(_data_horario+6)& (0+255),f,b
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;main.c: 180: if(data_horario.horario[6]>'5'){
  1130  000DB8  0E35               	movlw	53
  1131  000DBA  0100               	movlb	0	; () banked
  1132  000DBC  6566               	cpfsgt	(_data_horario+6)& (0+255),b
  1133  000DBE  0012               	return	
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;main.c: 181: data_horario.horario[6] ='0';
  1137  000DC0  0E30               	movlw	48
  1138  000DC2  0100               	movlb	0	; () banked
  1139  000DC4  6F66               	movwf	(_data_horario+6)& (0+255),b
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;main.c: 182: data_horario.horario[4]++;
  1143  000DC6  0100               	movlb	0	; () banked
  1144  000DC8  2B64               	incf	(_data_horario+4)& (0+255),f,b
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;main.c: 183: virouDia = 1;
  1148  000DCA  0E01               	movlw	1
  1149  000DCC  6E48               	movwf	_virouDia,c
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;main.c: 184: if(data_horario.horario[4]>'9'){
  1153  000DCE  0E39               	movlw	57
  1154  000DD0  0100               	movlb	0	; () banked
  1155  000DD2  6564               	cpfsgt	(_data_horario+4)& (0+255),b
  1156  000DD4  0012               	return	
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;main.c: 185: data_horario.horario[4] ='0';
  1160  000DD6  0E30               	movlw	48
  1161  000DD8  0100               	movlb	0	; () banked
  1162  000DDA  6F64               	movwf	(_data_horario+4)& (0+255),b
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;main.c: 186: data_horario.horario[3]++;
  1166  000DDC  0100               	movlb	0	; () banked
  1167  000DDE  2B63               	incf	(_data_horario+3)& (0+255),f,b
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;main.c: 187: if( data_horario.horario[3]>'5'){
  1171  000DE0  0E35               	movlw	53
  1172  000DE2  0100               	movlb	0	; () banked
  1173  000DE4  6563               	cpfsgt	(_data_horario+3)& (0+255),b
  1174  000DE6  0012               	return	
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;main.c: 188: data_horario.horario[3] ='0';
  1178  000DE8  0E30               	movlw	48
  1179  000DEA  0100               	movlb	0	; () banked
  1180  000DEC  6F63               	movwf	(_data_horario+3)& (0+255),b
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;main.c: 189: data_horario.horario[1]++;
  1184  000DEE  0100               	movlb	0	; () banked
  1185  000DF0  2B61               	incf	(_data_horario+1)& (0+255),f,b
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;main.c: 190: if( data_horario.horario[1]> '9'){
  1189  000DF2  0E39               	movlw	57
  1190  000DF4  0100               	movlb	0	; () banked
  1191  000DF6  6561               	cpfsgt	(_data_horario+1)& (0+255),b
  1192  000DF8  D005               	goto	l3942
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;main.c: 191: data_horario.horario[1]= '0';
  1196  000DFA  0E30               	movlw	48
  1197  000DFC  0100               	movlb	0	; () banked
  1198  000DFE  6F61               	movwf	(_data_horario+1)& (0+255),b
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;main.c: 192: data_horario.horario[0]++;
  1202  000E00  0100               	movlb	0	; () banked
  1203  000E02  2B60               	incf	_data_horario& (0+255),f,b
  1204  000E04                     l3942:
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;main.c: 193: }
  1208                           ;main.c: 194: if( data_horario.horario[0] == '2' && data_horario.horario[1] > '3'){
  1209  000E04  0E32               	movlw	50
  1210  000E06  0100               	movlb	0	; () banked
  1211  000E08  1960               	xorwf	_data_horario& (0+255),w,b
  1212  000E0A  A4D8               	btfss	status,2,c
  1213  000E0C  0012               	return	
  1214                           
  1215                           ; BSR set to: 0
  1216  000E0E  0E33               	movlw	51
  1217  000E10  0100               	movlb	0	; () banked
  1218  000E12  6561               	cpfsgt	(_data_horario+1)& (0+255),b
  1219  000E14  0012               	return	
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;main.c: 195: data_horario.horario[0] = '0';
  1223  000E16  0E30               	movlw	48
  1224  000E18  0100               	movlb	0	; () banked
  1225  000E1A  6F60               	movwf	_data_horario& (0+255),b
  1226                           
  1227                           ;main.c: 196: data_horario.horario[1] = '0';
  1228  000E1C  0E30               	movlw	48
  1229  000E1E  0100               	movlb	0	; () banked
  1230  000E20  6F61               	movwf	(_data_horario+1)& (0+255),b
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;main.c: 197: data_horario.data[1]++;
  1234  000E22  0100               	movlb	0	; () banked
  1235  000E24  2B6A               	incf	(_data_horario+10)& (0+255),f,b
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;main.c: 198: data_horario.dias++;
  1239  000E26  0100               	movlb	0	; () banked
  1240  000E28  2B70               	incf	(_data_horario+16)& (0+255),f,b
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;main.c: 199: if(data_horario.data[1]>'9'){
  1244  000E2A  0E39               	movlw	57
  1245  000E2C  0100               	movlb	0	; () banked
  1246  000E2E  656A               	cpfsgt	(_data_horario+10)& (0+255),b
  1247  000E30  D005               	goto	l3958
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;main.c: 200: data_horario.data[1]=0;
  1251  000E32  0E00               	movlw	0
  1252  000E34  0100               	movlb	0	; () banked
  1253  000E36  6F6A               	movwf	(_data_horario+10)& (0+255),b
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;main.c: 201: data_horario.data[0]++;
  1257  000E38  0100               	movlb	0	; () banked
  1258  000E3A  2B69               	incf	(_data_horario+9)& (0+255),f,b
  1259  000E3C                     l3958:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;main.c: 202: }
  1263                           ;main.c: 203: if(data_horario.dias > dias_mes[data_horario.mes_atual-1]){
  1264  000E3C  0EFF               	movlw	255
  1265  000E3E  6E21               	movwf	??_trata_relogio_data& (0+255),c
  1266  000E40  0EFF               	movlw	255
  1267  000E42  6E22               	movwf	(??_trata_relogio_data+1)& (0+255),c
  1268  000E44  0100               	movlb	0	; () banked
  1269  000E46  5171               	movf	(_data_horario+17)& (0+255),w,b
  1270  000E48  6E23               	movwf	(??_trata_relogio_data+2)& (0+255),c
  1271  000E4A  6A24               	clrf	(??_trata_relogio_data+3)& (0+255),c
  1272  000E4C  5021               	movf	??_trata_relogio_data,w,c
  1273  000E4E  2623               	addwf	??_trata_relogio_data+2,f,c
  1274  000E50  5022               	movf	??_trata_relogio_data+1,w,c
  1275  000E52  2224               	addwfc	??_trata_relogio_data+3,f,c
  1276  000E54  0E87               	movlw	low _dias_mes
  1277  000E56  2423               	addwf	??_trata_relogio_data+2,w,c
  1278  000E58  6ED9               	movwf	fsr2l,c
  1279  000E5A  0E00               	movlw	high _dias_mes
  1280  000E5C  2024               	addwfc	??_trata_relogio_data+3,w,c
  1281  000E5E  6EDA               	movwf	fsr2h,c
  1282  000E60  0100               	movlb	0	; () banked
  1283  000E62  5170               	movf	(_data_horario+16)& (0+255),w,b
  1284  000E64  5CDE               	subwf	postinc2,w,c
  1285  000E66  B0D8               	btfsc	status,0,c
  1286  000E68  0012               	return	
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;main.c: 204: data_horario.data[1]= '1';
  1290  000E6A  0E31               	movlw	49
  1291  000E6C  0100               	movlb	0	; () banked
  1292  000E6E  6F6A               	movwf	(_data_horario+10)& (0+255),b
  1293                           
  1294                           ;main.c: 205: data_horario.data[0]='0';
  1295  000E70  0E30               	movlw	48
  1296  000E72  0100               	movlb	0	; () banked
  1297  000E74  6F69               	movwf	(_data_horario+9)& (0+255),b
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;main.c: 206: data_horario.mes_atual++;
  1301  000E76  0100               	movlb	0	; () banked
  1302  000E78  2B71               	incf	(_data_horario+17)& (0+255),f,b
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;main.c: 207: data_horario.data[4]++;
  1306  000E7A  0100               	movlb	0	; () banked
  1307  000E7C  2B6D               	incf	(_data_horario+13)& (0+255),f,b
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;main.c: 208: if( data_horario.data[4] >'9'){
  1311  000E7E  0E39               	movlw	57
  1312  000E80  0100               	movlb	0	; () banked
  1313  000E82  656D               	cpfsgt	(_data_horario+13)& (0+255),b
  1314  000E84  D005               	goto	l3972
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;main.c: 209: data_horario.data[4] ='0';
  1318  000E86  0E30               	movlw	48
  1319  000E88  0100               	movlb	0	; () banked
  1320  000E8A  6F6D               	movwf	(_data_horario+13)& (0+255),b
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;main.c: 210: data_horario.data[3]++;
  1324  000E8C  0100               	movlb	0	; () banked
  1325  000E8E  2B6C               	incf	(_data_horario+12)& (0+255),f,b
  1326  000E90                     l3972:
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;main.c: 211: }
  1330                           ;main.c: 212: if(data_horario.mes_atual >11){
  1331  000E90  0E0B               	movlw	11
  1332  000E92  0100               	movlb	0	; () banked
  1333  000E94  6571               	cpfsgt	(_data_horario+17)& (0+255),b
  1334  000E96  0012               	return	
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;main.c: 213: data_horario.data[4] ='1';
  1338  000E98  0E31               	movlw	49
  1339  000E9A  0100               	movlb	0	; () banked
  1340  000E9C  6F6D               	movwf	(_data_horario+13)& (0+255),b
  1341                           
  1342                           ;main.c: 214: data_horario.data[3]='0';
  1343  000E9E  0E30               	movlw	48
  1344  000EA0  0100               	movlb	0	; () banked
  1345  000EA2  6F6C               	movwf	(_data_horario+12)& (0+255),b
  1346                           
  1347                           ;main.c: 215: data_horario.mes_atual =1;
  1348  000EA4  0E01               	movlw	1
  1349  000EA6  0100               	movlb	0	; () banked
  1350  000EA8  6F71               	movwf	(_data_horario+17)& (0+255),b
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;main.c: 216: data_horario.ano++;
  1354  000EAA  0100               	movlb	0	; () banked
  1355  000EAC  4B72               	infsnz	(_data_horario+18)& (0+255),f,b
  1356  000EAE  2B73               	incf	(_data_horario+19)& (0+255),f,b
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;main.c: 217: if(verificaAnoBissexto(data_horario.ano)){
  1360  000EB0  C072  F01D         	movff	_data_horario+18,verificaAnoBissexto@ano
  1361  000EB4  C073  F01E         	movff	_data_horario+19,verificaAnoBissexto@ano+1
  1362  000EB8  EC20  F00A         	call	_verificaAnoBissexto	;wreg free
  1363  000EBC  0900               	iorlw	0
  1364  000EBE  B4D8               	btfsc	status,2,c
  1365  000EC0  D004               	goto	l3982
  1366                           
  1367                           ;main.c: 218: dias_mes[1] = 29;
  1368  000EC2  0E1D               	movlw	29
  1369  000EC4  0100               	movlb	0	; () banked
  1370  000EC6  6F88               	movwf	(_dias_mes+1)& (0+255),b
  1371                           
  1372                           ;main.c: 219: }
  1373  000EC8  0012               	return	
  1374  000ECA                     l3982:
  1375                           
  1376                           ;main.c: 220: else
  1377                           ;main.c: 221: {
  1378                           ;main.c: 222: dias_mes[1] = 28;
  1379  000ECA  0E1C               	movlw	28
  1380  000ECC  0100               	movlb	0	; () banked
  1381  000ECE  6F88               	movwf	(_dias_mes+1)& (0+255),b
  1382                           
  1383                           ; BSR set to: 0
  1384                           
  1385                           ; BSR set to: 0
  1386                           
  1387                           ; BSR set to: 0
  1388                           
  1389                           ; BSR set to: 0
  1390                           
  1391                           ; BSR set to: 0
  1392                           
  1393                           ; BSR set to: 0
  1394                           
  1395                           ; BSR set to: 0
  1396  000ED0  0012               	return	
  1397  000ED2                     __end_of_trata_relogio_data:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           intcon	equ	0xFF2
  1404                           postinc0	equ	0xFEE
  1405                           wreg	equ	0xFE8
  1406                           postdec1	equ	0xFE5
  1407                           fsr1l	equ	0xFE1
  1408                           postinc2	equ	0xFDE
  1409                           fsr2h	equ	0xFDA
  1410                           fsr2l	equ	0xFD9
  1411                           status	equ	0xFD8
  1412                           
  1413 ;; *************** function _verificaAnoBissexto *****************
  1414 ;; Defined at:
  1415 ;;		line 147 in file "main.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  ano             2   28[COMRAM] int 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      unsigned char 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1429 ;;      Params:         2       0       0       0       0       0       0       0       0
  1430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1431 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1432 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1433 ;;Total ram usage:        4 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    7
  1436 ;; This function calls:
  1437 ;;		___awmod
  1438 ;; This function is called by:
  1439 ;;		_trata_relogio_data
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text2
  1444  001440                     __ptext2:
  1445                           	opt stack 0
  1446  001440                     _verificaAnoBissexto:
  1447                           	opt stack 22
  1448                           
  1449                           ;main.c: 148: if(ano % 4 == 0 ){
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;incstack = 0
  1453  001440  0E03               	movlw	3
  1454  001442  141D               	andwf	verificaAnoBissexto@ano,w,c
  1455  001444  6E1F               	movwf	??_verificaAnoBissexto& (0+255),c
  1456  001446  0E00               	movlw	0
  1457  001448  141E               	andwf	verificaAnoBissexto@ano+1,w,c
  1458  00144A  6E20               	movwf	(??_verificaAnoBissexto+1)& (0+255),c
  1459  00144C  501F               	movf	??_verificaAnoBissexto,w,c
  1460  00144E  1020               	iorwf	??_verificaAnoBissexto+1,w,c
  1461  001450  A4D8               	btfss	status,2,c
  1462  001452  D022               	goto	l3712
  1463                           
  1464                           ;main.c: 149: if( ano % 100 != 0){
  1465  001454  C01D  F017         	movff	verificaAnoBissexto@ano,___awmod@dividend
  1466  001458  C01E  F018         	movff	verificaAnoBissexto@ano+1,___awmod@dividend+1
  1467  00145C  0E00               	movlw	0
  1468  00145E  6E1A               	movwf	___awmod@divisor+1,c
  1469  001460  0E64               	movlw	100
  1470  001462  6E19               	movwf	___awmod@divisor,c
  1471  001464  ECE8  F009         	call	___awmod	;wreg free
  1472  001468  5017               	movf	?___awmod,w,c
  1473  00146A  1018               	iorwf	?___awmod+1,w,c
  1474  00146C  B4D8               	btfsc	status,2,c
  1475  00146E  D002               	goto	l3700
  1476                           
  1477                           ;main.c: 150: return 1;
  1478  001470  0E01               	movlw	1
  1479                           
  1480                           ;main.c: 151: }
  1481  001472  0012               	return	
  1482  001474                     l3700:
  1483                           
  1484                           ;main.c: 152: else
  1485                           ;main.c: 153: {
  1486                           ;main.c: 154: if( ano % 400 != 0){
  1487  001474  C01D  F017         	movff	verificaAnoBissexto@ano,___awmod@dividend
  1488  001478  C01E  F018         	movff	verificaAnoBissexto@ano+1,___awmod@dividend+1
  1489  00147C  0E01               	movlw	1
  1490  00147E  6E1A               	movwf	___awmod@divisor+1,c
  1491  001480  0E90               	movlw	144
  1492  001482  6E19               	movwf	___awmod@divisor,c
  1493  001484  ECE8  F009         	call	___awmod	;wreg free
  1494  001488  5017               	movf	?___awmod,w,c
  1495  00148A  1018               	iorwf	?___awmod+1,w,c
  1496  00148C  B4D8               	btfsc	status,2,c
  1497  00148E  D002               	goto	l3708
  1498                           
  1499                           ;main.c: 155: return 0;
  1500  001490  0E00               	movlw	0
  1501                           
  1502                           ;main.c: 156: }
  1503  001492  0012               	return	
  1504  001494                     l3708:
  1505                           
  1506                           ;main.c: 157: else{
  1507                           ;main.c: 158: return 1;
  1508  001494  0E01               	movlw	1
  1509                           
  1510                           ;main.c: 159: }
  1511                           ;main.c: 160: }
  1512                           ;main.c: 161: }
  1513  001496  0012               	return	
  1514  001498                     l3712:
  1515                           
  1516                           ;main.c: 162: else{
  1517                           ;main.c: 163: return 0;
  1518  001498  0E00               	movlw	0
  1519  00149A  0012               	return	
  1520  00149C                     __end_of_verificaAnoBissexto:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           tblptrh	equ	0xFF7
  1524                           tblptrl	equ	0xFF6
  1525                           tablat	equ	0xFF5
  1526                           intcon	equ	0xFF2
  1527                           postinc0	equ	0xFEE
  1528                           wreg	equ	0xFE8
  1529                           postdec1	equ	0xFE5
  1530                           fsr1l	equ	0xFE1
  1531                           postinc2	equ	0xFDE
  1532                           fsr2h	equ	0xFDA
  1533                           fsr2l	equ	0xFD9
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _setaDespertador *****************
  1537 ;; Defined at:
  1538 ;;		line 302 in file "main.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1555 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:   11
  1559 ;; This function calls:
  1560 ;;		_Delay10KTCYx
  1561 ;;		_atualiza_Tela
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text3
  1568  00122E                     __ptext3:
  1569                           	opt stack 0
  1570  00122E                     _setaDespertador:
  1571                           	opt stack 19
  1572                           
  1573                           ;main.c: 303: botaoHora = PORTCbits.RC1;
  1574                           
  1575                           ;incstack = 0
  1576  00122E  0E00               	movlw	0
  1577  001230  B282               	btfsc	3970,1,c	;volatile
  1578  001232  0E01               	movlw	1
  1579  001234  6E2B               	movwf	_botaoHora,c
  1580                           
  1581                           ;main.c: 304: botaoMin = PORTCbits.RC2;
  1582  001236  0E00               	movlw	0
  1583  001238  B482               	btfsc	3970,2,c	;volatile
  1584  00123A  0E01               	movlw	1
  1585  00123C  6E2A               	movwf	_botaoMin,c
  1586                           
  1587                           ;main.c: 305: if(botaoHora){
  1588  00123E  502B               	movf	_botaoHora,w,c
  1589  001240  B4D8               	btfsc	status,2,c
  1590  001242  D020               	goto	l4016
  1591                           
  1592                           ;main.c: 306: Delay10KTCYx(180);
  1593  001244  0EB4               	movlw	180
  1594  001246  EC0B  F00D         	call	_Delay10KTCYx
  1595                           
  1596                           ;main.c: 308: horarioDespertador[1]++;
  1597  00124A  2A40               	incf	_horarioDespertador+1,f,c
  1598                           
  1599                           ;main.c: 309: if(horarioDespertador[1]>'9'){
  1600  00124C  0E39               	movlw	57
  1601  00124E  6440               	cpfsgt	_horarioDespertador+1,c
  1602  001250  D003               	goto	l4004
  1603                           
  1604                           ;main.c: 310: horarioDespertador[1] ='0';
  1605  001252  0E30               	movlw	48
  1606  001254  6E40               	movwf	_horarioDespertador+1,c
  1607                           
  1608                           ;main.c: 311: horarioDespertador[0]++;
  1609  001256  2A3F               	incf	_horarioDespertador,f,c
  1610  001258                     l4004:
  1611                           
  1612                           ;main.c: 312: }
  1613                           ;main.c: 313: if(horarioDespertador[0] == '2' && horarioDespertador[1] >'3'){
  1614  001258  0E32               	movlw	50
  1615  00125A  183F               	xorwf	_horarioDespertador,w,c
  1616  00125C  A4D8               	btfss	status,2,c
  1617  00125E  D007               	goto	l4010
  1618  001260  0E33               	movlw	51
  1619  001262  6440               	cpfsgt	_horarioDespertador+1,c
  1620  001264  D004               	goto	l4010
  1621                           
  1622                           ;main.c: 314: horarioDespertador[1] ='0';
  1623  001266  0E30               	movlw	48
  1624  001268  6E40               	movwf	_horarioDespertador+1,c
  1625                           
  1626                           ;main.c: 315: horarioDespertador[0] ='0';
  1627  00126A  0E30               	movlw	48
  1628  00126C  6E3F               	movwf	_horarioDespertador,c
  1629  00126E                     l4010:
  1630                           
  1631                           ;main.c: 316: }
  1632                           ;main.c: 318: atualiza_Tela(0);
  1633  00126E  0E00               	movlw	0
  1634  001270  EC69  F007         	call	_atualiza_Tela
  1635                           
  1636                           ;main.c: 319: while(botaoHora){
  1637  001274  D004               	goto	l4014
  1638  001276                     l4012:
  1639                           
  1640                           ;main.c: 320: botaoHora = PORTCbits.RC1;
  1641  001276  0E00               	movlw	0
  1642  001278  B282               	btfsc	3970,1,c	;volatile
  1643  00127A  0E01               	movlw	1
  1644  00127C  6E2B               	movwf	_botaoHora,c
  1645  00127E                     l4014:
  1646  00127E  502B               	movf	_botaoHora,w,c
  1647  001280  A4D8               	btfss	status,2,c
  1648  001282  D7F9               	goto	l4012
  1649  001284                     l4016:
  1650                           
  1651                           ;main.c: 321: }
  1652                           ;main.c: 322: }
  1653                           ;main.c: 324: if(botaoMin){
  1654  001284  502A               	movf	_botaoMin,w,c
  1655  001286  B4D8               	btfsc	status,2,c
  1656  001288  0012               	return	
  1657                           
  1658                           ;main.c: 325: Delay10KTCYx(180);
  1659  00128A  0EB4               	movlw	180
  1660  00128C  EC0B  F00D         	call	_Delay10KTCYx
  1661                           
  1662                           ;main.c: 327: horarioDespertador[4]++;
  1663  001290  2A43               	incf	_horarioDespertador+4,f,c
  1664                           
  1665                           ;main.c: 328: if(horarioDespertador[4]>'9'){
  1666  001292  0E39               	movlw	57
  1667  001294  6443               	cpfsgt	_horarioDespertador+4,c
  1668  001296  D003               	goto	l4028
  1669                           
  1670                           ;main.c: 329: horarioDespertador[4]='0';
  1671  001298  0E30               	movlw	48
  1672  00129A  6E43               	movwf	_horarioDespertador+4,c
  1673                           
  1674                           ;main.c: 330: horarioDespertador[3]++;
  1675  00129C  2A42               	incf	_horarioDespertador+3,f,c
  1676  00129E                     l4028:
  1677                           
  1678                           ;main.c: 332: }
  1679                           ;main.c: 333: if(horarioDespertador[3] == '5' && horarioDespertador[4] > '9'){
  1680  00129E  0E35               	movlw	53
  1681  0012A0  1842               	xorwf	_horarioDespertador+3,w,c
  1682  0012A2  A4D8               	btfss	status,2,c
  1683  0012A4  D007               	goto	l4034
  1684  0012A6  0E39               	movlw	57
  1685  0012A8  6443               	cpfsgt	_horarioDespertador+4,c
  1686  0012AA  D004               	goto	l4034
  1687                           
  1688                           ;main.c: 334: horarioDespertador[4] ='0';
  1689  0012AC  0E30               	movlw	48
  1690  0012AE  6E43               	movwf	_horarioDespertador+4,c
  1691                           
  1692                           ;main.c: 335: horarioDespertador[3] ='0';
  1693  0012B0  0E30               	movlw	48
  1694  0012B2  6E42               	movwf	_horarioDespertador+3,c
  1695  0012B4                     l4034:
  1696                           
  1697                           ;main.c: 336: }
  1698                           ;main.c: 337: atualiza_Tela(0);
  1699  0012B4  0E00               	movlw	0
  1700  0012B6  EC69  F007         	call	_atualiza_Tela
  1701                           
  1702                           ;main.c: 338: while(botaoMin){
  1703  0012BA  D004               	goto	l4038
  1704  0012BC                     l4036:
  1705                           
  1706                           ;main.c: 339: botaoMin = PORTCbits.RC2;
  1707  0012BC  0E00               	movlw	0
  1708  0012BE  B482               	btfsc	3970,2,c	;volatile
  1709  0012C0  0E01               	movlw	1
  1710  0012C2  6E2A               	movwf	_botaoMin,c
  1711  0012C4                     l4038:
  1712  0012C4  502A               	movf	_botaoMin,w,c
  1713  0012C6  B4D8               	btfsc	status,2,c
  1714  0012C8  0012               	return	
  1715  0012CA  D7F8               	goto	l4036
  1716  0012CC                     __end_of_setaDespertador:
  1717                           	opt stack 0
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           intcon	equ	0xFF2
  1723                           postinc0	equ	0xFEE
  1724                           wreg	equ	0xFE8
  1725                           postdec1	equ	0xFE5
  1726                           fsr1l	equ	0xFE1
  1727                           postinc2	equ	0xFDE
  1728                           fsr2h	equ	0xFDA
  1729                           fsr2l	equ	0xFD9
  1730                           status	equ	0xFD8
  1731                           
  1732 ;; *************** function _maquinaEstado *****************
  1733 ;; Defined at:
  1734 ;;		line 562 in file "main.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1748 ;;      Params:         0       0       0       0       0       0       0       0       0
  1749 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1751 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1752 ;;Total ram usage:        0 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:   12
  1755 ;; This function calls:
  1756 ;;		_enviaByte
  1757 ;;		_trataComando
  1758 ;;		_tx_data
  1759 ;;		_verificaCRCBUFFCOM
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text4
  1766  0016A2                     __ptext4:
  1767                           	opt stack 0
  1768  0016A2                     _maquinaEstado:
  1769                           	opt stack 18
  1770                           
  1771                           ;main.c: 564: switch(estado){
  1772                           
  1773                           ;incstack = 0
  1774  0016A2  D011               	goto	l4054
  1775  0016A4                     l4042:
  1776                           
  1777                           ;main.c: 567: verificaCRCBUFFCOM();
  1778  0016A4  ECA8  F009         	call	_verificaCRCBUFFCOM	;wreg free
  1779                           
  1780                           ;main.c: 569: break;
  1781  0016A8  0012               	return	
  1782  0016AA                     l4044:
  1783                           
  1784                           ;main.c: 573: trataComando();
  1785  0016AA  EC28  F004         	call	_trataComando	;wreg free
  1786                           
  1787                           ;main.c: 575: break;
  1788  0016AE  0012               	return	
  1789  0016B0                     l4046:
  1790                           
  1791                           ;main.c: 578: tx_data();
  1792  0016B0  EC69  F00C         	call	_tx_data	;wreg free
  1793                           
  1794                           ;main.c: 579: break;
  1795  0016B4  0012               	return	
  1796  0016B6                     l4048:
  1797                           
  1798                           ;main.c: 582: enviaByte(0x05);
  1799  0016B6  0E05               	movlw	5
  1800  0016B8  ECED  F00C         	call	_enviaByte
  1801                           
  1802                           ;main.c: 584: break;
  1803  0016BC  0012               	return	
  1804  0016BE                     l4050:
  1805                           
  1806                           ;main.c: 587: enviaByte(0x0F);
  1807  0016BE  0E0F               	movlw	15
  1808  0016C0  ECED  F00C         	call	_enviaByte
  1809                           
  1810                           ;main.c: 596: }
  1811                           
  1812                           ;main.c: 593: break;
  1813                           
  1814                           ;main.c: 591: default:
  1815                           
  1816                           ;main.c: 589: break;
  1817  0016C4  0012               	return	
  1818  0016C6                     l4054:
  1819  0016C6  5030               	movf	_estado,w,c
  1820                           
  1821                           ; Switch size 1, requested type "space"
  1822                           ; Number of cases is 5, Range of values is 1 to 5
  1823                           ; switch strategies available:
  1824                           ; Name         Instructions Cycles
  1825                           ; simple_byte           16     9 (average)
  1826                           ;	Chosen strategy is simple_byte
  1827  0016C8  0A01               	xorlw	1	; case 1
  1828  0016CA  B4D8               	btfsc	status,2,c
  1829  0016CC  D7EB               	goto	l4042
  1830  0016CE  0A03               	xorlw	3	; case 2
  1831  0016D0  B4D8               	btfsc	status,2,c
  1832  0016D2  D7EB               	goto	l4044
  1833  0016D4  0A01               	xorlw	1	; case 3
  1834  0016D6  B4D8               	btfsc	status,2,c
  1835  0016D8  D7EB               	goto	l4046
  1836  0016DA  0A07               	xorlw	7	; case 4
  1837  0016DC  B4D8               	btfsc	status,2,c
  1838  0016DE  D7EB               	goto	l4048
  1839  0016E0  0A01               	xorlw	1	; case 5
  1840  0016E2  A4D8               	btfss	status,2,c
  1841  0016E4  0012               	return	
  1842  0016E6  D7EB               	goto	l4050
  1843  0016E8                     __end_of_maquinaEstado:
  1844                           	opt stack 0
  1845                           tblptru	equ	0xFF8
  1846                           tblptrh	equ	0xFF7
  1847                           tblptrl	equ	0xFF6
  1848                           tablat	equ	0xFF5
  1849                           intcon	equ	0xFF2
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           postdec1	equ	0xFE5
  1853                           fsr1l	equ	0xFE1
  1854                           postinc2	equ	0xFDE
  1855                           fsr2h	equ	0xFDA
  1856                           fsr2l	equ	0xFD9
  1857                           status	equ	0xFD8
  1858                           
  1859 ;; *************** function _verificaCRCBUFFCOM *****************
  1860 ;; Defined at:
  1861 ;;		line 532 in file "main.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  crc             2    5[BANK0 ] unsigned short 
  1866 ;;  crc2            2    2[BANK0 ] unsigned short 
  1867 ;;  crc1            2    0[BANK0 ] unsigned short 
  1868 ;;  CRC_OK          1    4[BANK0 ] unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1878 ;;      Params:         0       0       0       0       0       0       0       0       0
  1879 ;;      Locals:         0       7       0       0       0       0       0       0       0
  1880 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1881 ;;      Totals:         2       7       0       0       0       0       0       0       0
  1882 ;;Total ram usage:        9 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; Hardware stack levels required when called:    7
  1885 ;; This function calls:
  1886 ;;		_crc16
  1887 ;; This function is called by:
  1888 ;;		_maquinaEstado
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text5
  1893  001350                     __ptext5:
  1894                           	opt stack 0
  1895  001350                     _verificaCRCBUFFCOM:
  1896                           	opt stack 22
  1897                           
  1898                           ;main.c: 535: char CRC_OK =0;
  1899                           
  1900                           ;incstack = 0
  1901  001350  0E00               	movlw	0
  1902  001352  0100               	movlb	0	; () banked
  1903  001354  6F78               	movwf	verificaCRCBUFFCOM@CRC_OK& (0+255),b
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;main.c: 536: unsigned short crc, crc1, crc2;
  1907                           ;main.c: 538: crc = crc16(BUFFCOM,5);
  1908  001356  0E38               	movlw	low _BUFFCOM
  1909  001358  6E17               	movwf	crc16@data_p,c
  1910  00135A  0E00               	movlw	high _BUFFCOM
  1911  00135C  6E18               	movwf	crc16@data_p+1,c
  1912  00135E  0E00               	movlw	0
  1913  001360  6E1A               	movwf	crc16@length+1,c
  1914  001362  0E05               	movlw	5
  1915  001364  6E19               	movwf	crc16@length,c
  1916  001366  ECF5  F007         	call	_crc16	;wreg free
  1917  00136A  C017  F079         	movff	?_crc16,verificaCRCBUFFCOM@crc
  1918  00136E  C018  F07A         	movff	?_crc16+1,verificaCRCBUFFCOM@crc+1
  1919                           
  1920                           ;main.c: 539: crc1 = crc >> 8;
  1921  001372  0100               	movlb	0	; () banked
  1922  001374  517A               	movf	(verificaCRCBUFFCOM@crc+1)& (0+255),w,b
  1923  001376  0100               	movlb	0	; () banked
  1924  001378  6F74               	movwf	verificaCRCBUFFCOM@crc1& (0+255),b
  1925  00137A  6B75               	clrf	(verificaCRCBUFFCOM@crc1+1)& (0+255),b
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;main.c: 540: crc2 = crc & 0xFF;
  1929  00137C  0100               	movlb	0	; () banked
  1930  00137E  5179               	movf	verificaCRCBUFFCOM@crc& (0+255),w,b
  1931  001380  0100               	movlb	0	; () banked
  1932  001382  6F76               	movwf	verificaCRCBUFFCOM@crc2& (0+255),b
  1933  001384  6B77               	clrf	(verificaCRCBUFFCOM@crc2+1)& (0+255),b
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;main.c: 542: if(BUFFCOM[5] == crc1 && BUFFCOM[6] == crc2){
  1937  001386  503D               	movf	_BUFFCOM+5,w,c
  1938  001388  6E24               	movwf	??_verificaCRCBUFFCOM& (0+255),c
  1939  00138A  6A25               	clrf	(??_verificaCRCBUFFCOM+1)& (0+255),c
  1940  00138C  0100               	movlb	0	; () banked
  1941  00138E  5174               	movf	verificaCRCBUFFCOM@crc1& (0+255),w,b
  1942  001390  1824               	xorwf	??_verificaCRCBUFFCOM,w,c
  1943  001392  E114               	bnz	l3864
  1944  001394  0100               	movlb	0	; () banked
  1945  001396  5175               	movf	(verificaCRCBUFFCOM@crc1+1)& (0+255),w,b
  1946  001398  1825               	xorwf	??_verificaCRCBUFFCOM+1,w,c
  1947  00139A  A4D8               	btfss	status,2,c
  1948  00139C  D00F               	goto	l3864
  1949                           
  1950                           ; BSR set to: 0
  1951  00139E  503E               	movf	_BUFFCOM+6,w,c
  1952  0013A0  6E24               	movwf	??_verificaCRCBUFFCOM& (0+255),c
  1953  0013A2  6A25               	clrf	(??_verificaCRCBUFFCOM+1)& (0+255),c
  1954  0013A4  0100               	movlb	0	; () banked
  1955  0013A6  5176               	movf	verificaCRCBUFFCOM@crc2& (0+255),w,b
  1956  0013A8  1824               	xorwf	??_verificaCRCBUFFCOM,w,c
  1957  0013AA  E108               	bnz	l3864
  1958  0013AC  0100               	movlb	0	; () banked
  1959  0013AE  5177               	movf	(verificaCRCBUFFCOM@crc2+1)& (0+255),w,b
  1960  0013B0  1825               	xorwf	??_verificaCRCBUFFCOM+1,w,c
  1961  0013B2  A4D8               	btfss	status,2,c
  1962  0013B4  D003               	goto	l3864
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;main.c: 543: CRC_OK = 1;
  1966  0013B6  0E01               	movlw	1
  1967  0013B8  0100               	movlb	0	; () banked
  1968  0013BA  6F78               	movwf	verificaCRCBUFFCOM@CRC_OK& (0+255),b
  1969  0013BC                     l3864:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;main.c: 544: }
  1973                           ;main.c: 549: if (CRC_OK == 1)
  1974  0013BC  0100               	movlb	0	; () banked
  1975  0013BE  0578               	decf	verificaCRCBUFFCOM@CRC_OK& (0+255),w,b
  1976  0013C0  A4D8               	btfss	status,2,c
  1977  0013C2  D003               	goto	l3868
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;main.c: 550: {
  1981                           ;main.c: 551: estado = 4;
  1982  0013C4  0E04               	movlw	4
  1983  0013C6  6E30               	movwf	_estado,c
  1984                           
  1985                           ;main.c: 552: }
  1986  0013C8  0012               	return	
  1987  0013CA                     l3868:
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;main.c: 553: else{
  1991                           ;main.c: 556: estado = 5;
  1992  0013CA  0E05               	movlw	5
  1993  0013CC  6E30               	movwf	_estado,c
  1994  0013CE  0012               	return	
  1995  0013D0                     __end_of_verificaCRCBUFFCOM:
  1996                           	opt stack 0
  1997                           tblptru	equ	0xFF8
  1998                           tblptrh	equ	0xFF7
  1999                           tblptrl	equ	0xFF6
  2000                           tablat	equ	0xFF5
  2001                           intcon	equ	0xFF2
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           postdec1	equ	0xFE5
  2005                           fsr1l	equ	0xFE1
  2006                           postinc2	equ	0xFDE
  2007                           fsr2h	equ	0xFDA
  2008                           fsr2l	equ	0xFD9
  2009                           status	equ	0xFD8
  2010                           
  2011 ;; *************** function _tx_data *****************
  2012 ;; Defined at:
  2013 ;;		line 376 in file "main.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  cont            2   22[COMRAM] int 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2027 ;;      Params:         0       0       0       0       0       0       0       0       0
  2028 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2030 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2031 ;;Total ram usage:        2 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:    6
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_maquinaEstado
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text6
  2042  0018D2                     __ptext6:
  2043                           	opt stack 0
  2044  0018D2                     _tx_data:
  2045                           	opt stack 23
  2046                           
  2047                           ;main.c: 378: int cont;
  2048                           ;main.c: 380: for(cont=0;cont<7;cont++)
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;incstack = 0
  2052  0018D2  0E00               	movlw	0
  2053  0018D4  6E18               	movwf	tx_data@cont+1,c
  2054  0018D6  0E00               	movlw	0
  2055  0018D8  6E17               	movwf	tx_data@cont,c
  2056  0018DA                     l3772:
  2057  0018DA  BE18               	btfsc	tx_data@cont+1,7,c
  2058  0018DC  D006               	goto	l208
  2059  0018DE  5018               	movf	tx_data@cont+1,w,c
  2060  0018E0  E111               	bnz	l3782
  2061  0018E2  0E07               	movlw	7
  2062  0018E4  5C17               	subwf	tx_data@cont,w,c
  2063  0018E6  B0D8               	btfsc	status,0,c
  2064  0018E8  D00D               	goto	l3782
  2065  0018EA                     l208:
  2066  0018EA  A89E               	btfss	3998,4,c	;volatile
  2067  0018EC  D7FE               	goto	l208
  2068                           
  2069                           ;main.c: 383: TXREG = BUFFRESP[cont];
  2070  0018EE  0E31               	movlw	low _BUFFRESP
  2071  0018F0  2417               	addwf	tx_data@cont,w,c
  2072  0018F2  6ED9               	movwf	fsr2l,c
  2073  0018F4  0E00               	movlw	high _BUFFRESP
  2074  0018F6  2018               	addwfc	tx_data@cont+1,w,c
  2075  0018F8  6EDA               	movwf	fsr2h,c
  2076  0018FA  50DF               	movf	indf2,w,c
  2077  0018FC  6EAD               	movwf	4013,c	;volatile
  2078  0018FE  4A17               	infsnz	tx_data@cont,f,c
  2079  001900  2A18               	incf	tx_data@cont+1,f,c
  2080  001902  D7EB               	goto	l3772
  2081  001904                     l3782:
  2082                           
  2083                           ;main.c: 384: }
  2084                           ;main.c: 386: estado = 0;
  2085  001904  0E00               	movlw	0
  2086  001906  6E30               	movwf	_estado,c
  2087  001908  0012               	return		;funcret
  2088  00190A                     __end_of_tx_data:
  2089                           	opt stack 0
  2090                           tblptru	equ	0xFF8
  2091                           tblptrh	equ	0xFF7
  2092                           tblptrl	equ	0xFF6
  2093                           tablat	equ	0xFF5
  2094                           intcon	equ	0xFF2
  2095                           postinc0	equ	0xFEE
  2096                           wreg	equ	0xFE8
  2097                           postdec1	equ	0xFE5
  2098                           fsr1l	equ	0xFE1
  2099                           indf2	equ	0xFDF
  2100                           postinc2	equ	0xFDE
  2101                           fsr2h	equ	0xFDA
  2102                           fsr2l	equ	0xFD9
  2103                           status	equ	0xFD8
  2104                           
  2105 ;; *************** function _trataComando *****************
  2106 ;; Defined at:
  2107 ;;		line 415 in file "main.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2121 ;;      Params:         0       0       0       0       0       0       0       0       0
  2122 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2124 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2125 ;;Total ram usage:        0 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:   11
  2128 ;; This function calls:
  2129 ;;		___awdiv
  2130 ;;		___awmod
  2131 ;;		_atoi
  2132 ;;		_atualiza_Tela
  2133 ;;		_calculaCRCBUFFRESP
  2134 ;;		_memcpy
  2135 ;;		_strlen
  2136 ;; This function is called by:
  2137 ;;		_maquinaEstado
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text7
  2142  000850                     __ptext7:
  2143                           	opt stack 0
  2144  000850                     _trataComando:
  2145                           	opt stack 18
  2146                           
  2147                           ;main.c: 418: switch(BUFFCOM[0])
  2148                           
  2149                           ;incstack = 0
  2150  000850  D145               	goto	l3846
  2151  000852                     l226:
  2152                           
  2153                           ;main.c: 422: BUFFRESP[0] = BUFFCOM[0];
  2154  000852  C038  F031         	movff	_BUFFCOM,_BUFFRESP
  2155                           
  2156                           ;main.c: 423: BUFFRESP[1] = BUFFCOM[1];
  2157  000856  C039  F032         	movff	_BUFFCOM+1,_BUFFRESP+1
  2158                           
  2159                           ;main.c: 426: switch(BUFFCOM[1])
  2160  00085A  D060               	goto	l3824
  2161  00085C                     l228:
  2162                           
  2163                           ;main.c: 431: BUFFRESP[2] = versao[1];
  2164  00085C  C094  F033         	movff	_versao+1,_BUFFRESP+2
  2165                           
  2166                           ;main.c: 432: BUFFRESP[3] = versao[4];
  2167  000860  C097  F034         	movff	_versao+4,_BUFFRESP+3
  2168  000864  D059               	goto	l3820
  2169  000866                     l230:
  2170                           
  2171                           ;main.c: 439: pegaHoraData[0] = data_horario.horario[0];
  2172  000866  C060  F045         	movff	_data_horario,_pegaHoraData
  2173                           
  2174                           ;main.c: 440: pegaHoraData[1] = data_horario.horario[1];
  2175  00086A  C061  F046         	movff	_data_horario+1,_pegaHoraData+1
  2176                           
  2177                           ;main.c: 441: BUFFRESP[2] = atoi(pegaHoraData);
  2178  00086E  0E45               	movlw	low _pegaHoraData
  2179  000870  6E1D               	movwf	atoi@s,c
  2180  000872  0E00               	movlw	high _pegaHoraData
  2181  000874  6E1E               	movwf	atoi@s+1,c
  2182  000876  EC5E  F008         	call	_atoi	;wreg free
  2183  00087A  501D               	movf	?_atoi,w,c
  2184  00087C  6E33               	movwf	_BUFFRESP+2,c
  2185                           
  2186                           ;main.c: 442: pegaHoraData[0] = data_horario.horario[3];
  2187  00087E  C063  F045         	movff	_data_horario+3,_pegaHoraData
  2188                           
  2189                           ;main.c: 443: pegaHoraData[1] = data_horario.horario[4];
  2190  000882  C064  F046         	movff	_data_horario+4,_pegaHoraData+1
  2191                           
  2192                           ;main.c: 444: BUFFRESP[3] = atoi(pegaHoraData);
  2193  000886  0E45               	movlw	low _pegaHoraData
  2194  000888  6E1D               	movwf	atoi@s,c
  2195  00088A  0E00               	movlw	high _pegaHoraData
  2196  00088C  6E1E               	movwf	atoi@s+1,c
  2197  00088E  EC5E  F008         	call	_atoi	;wreg free
  2198  000892  501D               	movf	?_atoi,w,c
  2199  000894  6E34               	movwf	_BUFFRESP+3,c
  2200                           
  2201                           ;main.c: 445: pegaHoraData[0] = data_horario.horario[6];
  2202  000896  C066  F045         	movff	_data_horario+6,_pegaHoraData
  2203                           
  2204                           ;main.c: 446: pegaHoraData[1] = data_horario.horario[7];
  2205  00089A  C067  F046         	movff	_data_horario+7,_pegaHoraData+1
  2206                           
  2207                           ;main.c: 447: BUFFRESP[4] = atoi(pegaHoraData);
  2208  00089E  0E45               	movlw	low _pegaHoraData
  2209  0008A0  6E1D               	movwf	atoi@s,c
  2210  0008A2  0E00               	movlw	high _pegaHoraData
  2211  0008A4  6E1E               	movwf	atoi@s+1,c
  2212  0008A6  EC5E  F008         	call	_atoi	;wreg free
  2213  0008AA  501D               	movf	?_atoi,w,c
  2214  0008AC  D01B               	goto	L1
  2215  0008AE                     l231:
  2216                           
  2217                           ;main.c: 451: pegaHoraData[0] = data_horario.data[0];
  2218  0008AE  C069  F045         	movff	_data_horario+9,_pegaHoraData
  2219                           
  2220                           ;main.c: 452: pegaHoraData[1] = data_horario.data[1];
  2221  0008B2  C06A  F046         	movff	_data_horario+10,_pegaHoraData+1
  2222                           
  2223                           ;main.c: 453: BUFFRESP[2] = atoi(pegaHoraData);
  2224  0008B6  0E45               	movlw	low _pegaHoraData
  2225  0008B8  6E1D               	movwf	atoi@s,c
  2226  0008BA  0E00               	movlw	high _pegaHoraData
  2227  0008BC  6E1E               	movwf	atoi@s+1,c
  2228  0008BE  EC5E  F008         	call	_atoi	;wreg free
  2229  0008C2  501D               	movf	?_atoi,w,c
  2230  0008C4  6E33               	movwf	_BUFFRESP+2,c
  2231                           
  2232                           ;main.c: 454: pegaHoraData[0] = data_horario.data[3];
  2233  0008C6  C06C  F045         	movff	_data_horario+12,_pegaHoraData
  2234                           
  2235                           ;main.c: 455: pegaHoraData[1] = data_horario.data[4];
  2236  0008CA  C06D  F046         	movff	_data_horario+13,_pegaHoraData+1
  2237                           
  2238                           ;main.c: 456: BUFFRESP[3] = atoi(pegaHoraData);
  2239  0008CE  0E45               	movlw	low _pegaHoraData
  2240  0008D0  6E1D               	movwf	atoi@s,c
  2241  0008D2  0E00               	movlw	high _pegaHoraData
  2242  0008D4  6E1E               	movwf	atoi@s+1,c
  2243  0008D6  EC5E  F008         	call	_atoi	;wreg free
  2244  0008DA  501D               	movf	?_atoi,w,c
  2245  0008DC  6E34               	movwf	_BUFFRESP+3,c
  2246                           
  2247                           ;main.c: 457: BUFFRESP[4] = data_horario.ano - 2000;
  2248  0008DE  0100               	movlb	0	; () banked
  2249  0008E0  5172               	movf	(_data_horario+18)& (0+255),w,b
  2250  0008E2  0F30               	addlw	48
  2251  0008E4                     L1:
  2252  0008E4  6E35               	movwf	_BUFFRESP+4,c
  2253                           
  2254                           ;main.c: 459: break;
  2255  0008E6  D101               	goto	l3848
  2256  0008E8                     l232:
  2257                           
  2258                           ;main.c: 461: pegaHoraData[0] = horarioDespertador[0];
  2259  0008E8  C03F  F045         	movff	_horarioDespertador,_pegaHoraData
  2260                           
  2261                           ;main.c: 462: pegaHoraData[1] = horarioDespertador[1];
  2262  0008EC  C040  F046         	movff	_horarioDespertador+1,_pegaHoraData+1
  2263                           
  2264                           ;main.c: 463: BUFFRESP[2] = atoi(pegaHoraData);
  2265  0008F0  0E45               	movlw	low _pegaHoraData
  2266  0008F2  6E1D               	movwf	atoi@s,c
  2267  0008F4  0E00               	movlw	high _pegaHoraData
  2268  0008F6  6E1E               	movwf	atoi@s+1,c
  2269  0008F8  EC5E  F008         	call	_atoi	;wreg free
  2270  0008FC  501D               	movf	?_atoi,w,c
  2271  0008FE  6E33               	movwf	_BUFFRESP+2,c
  2272                           
  2273                           ;main.c: 464: pegaHoraData[0] = horarioDespertador[3];
  2274  000900  C042  F045         	movff	_horarioDespertador+3,_pegaHoraData
  2275                           
  2276                           ;main.c: 465: pegaHoraData[1] = horarioDespertador[4];
  2277  000904  C043  F046         	movff	_horarioDespertador+4,_pegaHoraData+1
  2278                           
  2279                           ;main.c: 466: BUFFRESP[3] = atoi(pegaHoraData);
  2280  000908  0E45               	movlw	low _pegaHoraData
  2281  00090A  6E1D               	movwf	atoi@s,c
  2282  00090C  0E00               	movlw	high _pegaHoraData
  2283  00090E  6E1E               	movwf	atoi@s+1,c
  2284  000910  EC5E  F008         	call	_atoi	;wreg free
  2285  000914  501D               	movf	?_atoi,w,c
  2286  000916  6E34               	movwf	_BUFFRESP+3,c
  2287  000918                     l3820:
  2288                           
  2289                           ;main.c: 467: BUFFRESP[4] = 0xFF;
  2290  000918  6835               	setf	_BUFFRESP+4,c
  2291                           
  2292                           ;main.c: 473: }
  2293                           
  2294                           ;main.c: 471: break;
  2295                           
  2296                           ;main.c: 470: default:
  2297                           
  2298                           ;main.c: 468: break;
  2299  00091A  D0E7               	goto	l3848
  2300  00091C                     l3824:
  2301  00091C  5039               	movf	_BUFFCOM+1,w,c
  2302                           
  2303                           ; Switch size 1, requested type "space"
  2304                           ; Number of cases is 4, Range of values is 0 to 3
  2305                           ; switch strategies available:
  2306                           ; Name         Instructions Cycles
  2307                           ; simple_byte           13     7 (average)
  2308                           ;	Chosen strategy is simple_byte
  2309  00091E  0A00               	xorlw	0	; case 0
  2310  000920  B4D8               	btfsc	status,2,c
  2311  000922  D79C               	goto	l228
  2312  000924  0A01               	xorlw	1	; case 1
  2313  000926  B4D8               	btfsc	status,2,c
  2314  000928  D79E               	goto	l230
  2315  00092A  0A03               	xorlw	3	; case 2
  2316  00092C  B4D8               	btfsc	status,2,c
  2317  00092E  D7BF               	goto	l231
  2318  000930  0A01               	xorlw	1	; case 3
  2319  000932  B4D8               	btfsc	status,2,c
  2320  000934  D7D9               	goto	l232
  2321                           
  2322                           ;main.c: 475: break;
  2323  000936  D0D9               	goto	l3848
  2324  000938                     l3826:
  2325                           
  2326                           ;main.c: 482: memcpy(BUFFRESP,BUFFCOM,strlen(BUFFCOM));
  2327  000938  0E31               	movlw	low _BUFFRESP
  2328  00093A  6E1D               	movwf	memcpy@d1,c
  2329  00093C  0E00               	movlw	high _BUFFRESP
  2330  00093E  6E1E               	movwf	memcpy@d1+1,c
  2331  000940  0E38               	movlw	low _BUFFCOM
  2332  000942  6E1F               	movwf	memcpy@s1,c
  2333  000944  0E00               	movlw	high _BUFFCOM
  2334  000946  6E20               	movwf	memcpy@s1+1,c
  2335  000948  0E38               	movlw	low _BUFFCOM
  2336  00094A  6E17               	movwf	strlen@s,c
  2337  00094C  0E00               	movlw	high _BUFFCOM
  2338  00094E  6E18               	movwf	strlen@s+1,c
  2339  000950  EC12  F00C         	call	_strlen	;wreg free
  2340  000954  C017  F021         	movff	?_strlen,memcpy@n
  2341  000958  C018  F022         	movff	?_strlen+1,memcpy@n+1
  2342  00095C  EC95  F00B         	call	_memcpy	;wreg free
  2343                           
  2344                           ;main.c: 486: switch(BUFFCOM[1])
  2345  000960  D0AF               	goto	l3842
  2346  000962                     l3828:
  2347                           
  2348                           ;main.c: 491: versao[1] = BUFFCOM[2]+48;
  2349  000962  503A               	movf	_BUFFCOM+2,w,c
  2350  000964  0F30               	addlw	48
  2351  000966  0100               	movlb	0	; () banked
  2352  000968  6F94               	movwf	(_versao+1)& (0+255),b
  2353                           
  2354                           ;main.c: 492: versao[4] = BUFFCOM[3]+48;
  2355  00096A  503B               	movf	_BUFFCOM+3,w,c
  2356  00096C  0F30               	addlw	48
  2357  00096E  0100               	movlb	0	; () banked
  2358  000970  6F97               	movwf	(_versao+4)& (0+255),b
  2359                           
  2360                           ;main.c: 493: break;
  2361  000972  D0BB               	goto	l3848
  2362  000974                     l3830:
  2363                           
  2364                           ;main.c: 496: data_horario.data[0] = ((BUFFCOM[2]/10) + '0');
  2365  000974  C03A  F017         	movff	_BUFFCOM+2,___awdiv@dividend
  2366  000978  6A18               	clrf	___awdiv@dividend+1,c
  2367  00097A  0E00               	movlw	0
  2368  00097C  6E1A               	movwf	___awdiv@divisor+1,c
  2369  00097E  0E0A               	movlw	10
  2370  000980  6E19               	movwf	___awdiv@divisor,c
  2371  000982  EC66  F009         	call	___awdiv	;wreg free
  2372  000986  5017               	movf	?___awdiv,w,c
  2373  000988  0F30               	addlw	48
  2374  00098A  0100               	movlb	0	; () banked
  2375  00098C  6F69               	movwf	(_data_horario+9)& (0+255),b
  2376                           
  2377                           ;main.c: 497: data_horario.data[1] = ((BUFFCOM[2]%10) + '0');
  2378  00098E  C03A  F017         	movff	_BUFFCOM+2,___awmod@dividend
  2379  000992  6A18               	clrf	___awmod@dividend+1,c
  2380  000994  0E00               	movlw	0
  2381  000996  6E1A               	movwf	___awmod@divisor+1,c
  2382  000998  0E0A               	movlw	10
  2383  00099A  6E19               	movwf	___awmod@divisor,c
  2384  00099C  ECE8  F009         	call	___awmod	;wreg free
  2385  0009A0  5017               	movf	?___awmod,w,c
  2386  0009A2  0F30               	addlw	48
  2387  0009A4  0100               	movlb	0	; () banked
  2388  0009A6  6F6A               	movwf	(_data_horario+10)& (0+255),b
  2389                           
  2390                           ;main.c: 498: data_horario.data[3] = ((BUFFCOM[3]/10) + '0');
  2391  0009A8  C03B  F017         	movff	_BUFFCOM+3,___awdiv@dividend
  2392  0009AC  6A18               	clrf	___awdiv@dividend+1,c
  2393  0009AE  0E00               	movlw	0
  2394  0009B0  6E1A               	movwf	___awdiv@divisor+1,c
  2395  0009B2  0E0A               	movlw	10
  2396  0009B4  6E19               	movwf	___awdiv@divisor,c
  2397  0009B6  EC66  F009         	call	___awdiv	;wreg free
  2398  0009BA  5017               	movf	?___awdiv,w,c
  2399  0009BC  0F30               	addlw	48
  2400  0009BE  0100               	movlb	0	; () banked
  2401  0009C0  6F6C               	movwf	(_data_horario+12)& (0+255),b
  2402                           
  2403                           ;main.c: 499: data_horario.data[4] = ((BUFFCOM[3]%10) + '0');
  2404  0009C2  C03B  F017         	movff	_BUFFCOM+3,___awmod@dividend
  2405  0009C6  6A18               	clrf	___awmod@dividend+1,c
  2406  0009C8  0E00               	movlw	0
  2407  0009CA  6E1A               	movwf	___awmod@divisor+1,c
  2408  0009CC  0E0A               	movlw	10
  2409  0009CE  6E19               	movwf	___awmod@divisor,c
  2410  0009D0  ECE8  F009         	call	___awmod	;wreg free
  2411  0009D4  5017               	movf	?___awmod,w,c
  2412  0009D6  0F30               	addlw	48
  2413  0009D8  0100               	movlb	0	; () banked
  2414  0009DA  6F6D               	movwf	(_data_horario+13)& (0+255),b
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;main.c: 500: data_horario.ano = BUFFCOM[4] + 2000;
  2418  0009DC  0ED0               	movlw	208
  2419  0009DE  243C               	addwf	_BUFFCOM+4,w,c
  2420  0009E0  0100               	movlb	0	; () banked
  2421  0009E2  6F72               	movwf	(_data_horario+18)& (0+255),b
  2422  0009E4  0100               	movlb	0	; () banked
  2423  0009E6  6B73               	clrf	(_data_horario+19)& (0+255),b
  2424  0009E8  0E07               	movlw	7
  2425  0009EA  2373               	addwfc	(_data_horario+19)& (0+255),f,b
  2426                           
  2427                           ;main.c: 502: break;
  2428  0009EC  D07E               	goto	l3848
  2429  0009EE                     l3834:
  2430                           
  2431                           ;main.c: 505: data_horario.horario[0] = ((BUFFCOM[2]/10) + '0');
  2432  0009EE  C03A  F017         	movff	_BUFFCOM+2,___awdiv@dividend
  2433  0009F2  6A18               	clrf	___awdiv@dividend+1,c
  2434  0009F4  0E00               	movlw	0
  2435  0009F6  6E1A               	movwf	___awdiv@divisor+1,c
  2436  0009F8  0E0A               	movlw	10
  2437  0009FA  6E19               	movwf	___awdiv@divisor,c
  2438  0009FC  EC66  F009         	call	___awdiv	;wreg free
  2439  000A00  5017               	movf	?___awdiv,w,c
  2440  000A02  0F30               	addlw	48
  2441  000A04  0100               	movlb	0	; () banked
  2442  000A06  6F60               	movwf	_data_horario& (0+255),b
  2443                           
  2444                           ;main.c: 506: data_horario.horario[1] = ((BUFFCOM[2]%10) + '0');
  2445  000A08  C03A  F017         	movff	_BUFFCOM+2,___awmod@dividend
  2446  000A0C  6A18               	clrf	___awmod@dividend+1,c
  2447  000A0E  0E00               	movlw	0
  2448  000A10  6E1A               	movwf	___awmod@divisor+1,c
  2449  000A12  0E0A               	movlw	10
  2450  000A14  6E19               	movwf	___awmod@divisor,c
  2451  000A16  ECE8  F009         	call	___awmod	;wreg free
  2452  000A1A  5017               	movf	?___awmod,w,c
  2453  000A1C  0F30               	addlw	48
  2454  000A1E  0100               	movlb	0	; () banked
  2455  000A20  6F61               	movwf	(_data_horario+1)& (0+255),b
  2456                           
  2457                           ;main.c: 507: data_horario.horario[3] = ((BUFFCOM[3]/10) + '0');
  2458  000A22  C03B  F017         	movff	_BUFFCOM+3,___awdiv@dividend
  2459  000A26  6A18               	clrf	___awdiv@dividend+1,c
  2460  000A28  0E00               	movlw	0
  2461  000A2A  6E1A               	movwf	___awdiv@divisor+1,c
  2462  000A2C  0E0A               	movlw	10
  2463  000A2E  6E19               	movwf	___awdiv@divisor,c
  2464  000A30  EC66  F009         	call	___awdiv	;wreg free
  2465  000A34  5017               	movf	?___awdiv,w,c
  2466  000A36  0F30               	addlw	48
  2467  000A38  0100               	movlb	0	; () banked
  2468  000A3A  6F63               	movwf	(_data_horario+3)& (0+255),b
  2469                           
  2470                           ;main.c: 508: data_horario.horario[4] = ((BUFFCOM[3]%10) + '0');
  2471  000A3C  C03B  F017         	movff	_BUFFCOM+3,___awmod@dividend
  2472  000A40  6A18               	clrf	___awmod@dividend+1,c
  2473  000A42  0E00               	movlw	0
  2474  000A44  6E1A               	movwf	___awmod@divisor+1,c
  2475  000A46  0E0A               	movlw	10
  2476  000A48  6E19               	movwf	___awmod@divisor,c
  2477  000A4A  ECE8  F009         	call	___awmod	;wreg free
  2478  000A4E  5017               	movf	?___awmod,w,c
  2479  000A50  0F30               	addlw	48
  2480  000A52  0100               	movlb	0	; () banked
  2481  000A54  6F64               	movwf	(_data_horario+4)& (0+255),b
  2482                           
  2483                           ;main.c: 510: break;
  2484  000A56  D049               	goto	l3848
  2485  000A58                     l3836:
  2486                           
  2487                           ;main.c: 512: horarioDespertador[0] = ((BUFFCOM[2]/10) + '0');
  2488  000A58  C03A  F017         	movff	_BUFFCOM+2,___awdiv@dividend
  2489  000A5C  6A18               	clrf	___awdiv@dividend+1,c
  2490  000A5E  0E00               	movlw	0
  2491  000A60  6E1A               	movwf	___awdiv@divisor+1,c
  2492  000A62  0E0A               	movlw	10
  2493  000A64  6E19               	movwf	___awdiv@divisor,c
  2494  000A66  EC66  F009         	call	___awdiv	;wreg free
  2495  000A6A  5017               	movf	?___awdiv,w,c
  2496  000A6C  0F30               	addlw	48
  2497  000A6E  6E3F               	movwf	_horarioDespertador,c
  2498                           
  2499                           ;main.c: 513: horarioDespertador[1] = ((BUFFCOM[2]%10) + '0');
  2500  000A70  C03A  F017         	movff	_BUFFCOM+2,___awmod@dividend
  2501  000A74  6A18               	clrf	___awmod@dividend+1,c
  2502  000A76  0E00               	movlw	0
  2503  000A78  6E1A               	movwf	___awmod@divisor+1,c
  2504  000A7A  0E0A               	movlw	10
  2505  000A7C  6E19               	movwf	___awmod@divisor,c
  2506  000A7E  ECE8  F009         	call	___awmod	;wreg free
  2507  000A82  5017               	movf	?___awmod,w,c
  2508  000A84  0F30               	addlw	48
  2509  000A86  6E40               	movwf	_horarioDespertador+1,c
  2510                           
  2511                           ;main.c: 514: horarioDespertador[3] = ((BUFFCOM[3]/10) + '0');
  2512  000A88  C03B  F017         	movff	_BUFFCOM+3,___awdiv@dividend
  2513  000A8C  6A18               	clrf	___awdiv@dividend+1,c
  2514  000A8E  0E00               	movlw	0
  2515  000A90  6E1A               	movwf	___awdiv@divisor+1,c
  2516  000A92  0E0A               	movlw	10
  2517  000A94  6E19               	movwf	___awdiv@divisor,c
  2518  000A96  EC66  F009         	call	___awdiv	;wreg free
  2519  000A9A  5017               	movf	?___awdiv,w,c
  2520  000A9C  0F30               	addlw	48
  2521  000A9E  6E42               	movwf	_horarioDespertador+3,c
  2522                           
  2523                           ;main.c: 515: horarioDespertador[4] = ((BUFFCOM[3]%10) + '0');
  2524  000AA0  C03B  F017         	movff	_BUFFCOM+3,___awmod@dividend
  2525  000AA4  6A18               	clrf	___awmod@dividend+1,c
  2526  000AA6  0E00               	movlw	0
  2527  000AA8  6E1A               	movwf	___awmod@divisor+1,c
  2528  000AAA  0E0A               	movlw	10
  2529  000AAC  6E19               	movwf	___awmod@divisor,c
  2530  000AAE  ECE8  F009         	call	___awmod	;wreg free
  2531  000AB2  5017               	movf	?___awmod,w,c
  2532  000AB4  0F30               	addlw	48
  2533  000AB6  6E43               	movwf	_horarioDespertador+4,c
  2534                           
  2535                           ;main.c: 516: atualiza_Tela(0);
  2536  000AB8  0E00               	movlw	0
  2537  000ABA  EC69  F007         	call	_atualiza_Tela
  2538                           
  2539                           ;main.c: 521: }
  2540                           
  2541                           ;main.c: 519: break;
  2542                           
  2543                           ;main.c: 518: default:
  2544                           
  2545                           ;main.c: 517: break;
  2546  000ABE  D015               	goto	l3848
  2547  000AC0                     l3842:
  2548  000AC0  5039               	movf	_BUFFCOM+1,w,c
  2549                           
  2550                           ; Switch size 1, requested type "space"
  2551                           ; Number of cases is 4, Range of values is 0 to 3
  2552                           ; switch strategies available:
  2553                           ; Name         Instructions Cycles
  2554                           ; simple_byte           13     7 (average)
  2555                           ;	Chosen strategy is simple_byte
  2556  000AC2  0A00               	xorlw	0	; case 0
  2557  000AC4  B4D8               	btfsc	status,2,c
  2558  000AC6  D74D               	goto	l3828
  2559  000AC8  0A01               	xorlw	1	; case 1
  2560  000ACA  B4D8               	btfsc	status,2,c
  2561  000ACC  D753               	goto	l3830
  2562  000ACE  0A03               	xorlw	3	; case 2
  2563  000AD0  B4D8               	btfsc	status,2,c
  2564  000AD2  D78D               	goto	l3834
  2565  000AD4  0A01               	xorlw	1	; case 3
  2566  000AD6  B4D8               	btfsc	status,2,c
  2567  000AD8  D7BF               	goto	l3836
  2568                           
  2569                           ;main.c: 525: }
  2570                           
  2571                           ;main.c: 524: break;
  2572  000ADA  D007               	goto	l3848
  2573  000ADC                     l3846:
  2574  000ADC  5038               	movf	_BUFFCOM,w,c
  2575                           
  2576                           ; Switch size 1, requested type "space"
  2577                           ; Number of cases is 2, Range of values is 1 to 2
  2578                           ; switch strategies available:
  2579                           ; Name         Instructions Cycles
  2580                           ; simple_byte            7     4 (average)
  2581                           ;	Chosen strategy is simple_byte
  2582  000ADE  0A01               	xorlw	1	; case 1
  2583  000AE0  B4D8               	btfsc	status,2,c
  2584  000AE2  D6B7               	goto	l226
  2585  000AE4  0A03               	xorlw	3	; case 2
  2586  000AE6  B4D8               	btfsc	status,2,c
  2587  000AE8  D727               	goto	l3826
  2588  000AEA                     l3848:
  2589                           
  2590                           ;main.c: 529: calculaCRCBUFFRESP();
  2591  000AEA  ECB6  F00C         	call	_calculaCRCBUFFRESP	;wreg free
  2592  000AEE  0012               	return		;funcret
  2593  000AF0                     __end_of_trataComando:
  2594                           	opt stack 0
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           intcon	equ	0xFF2
  2600                           postinc0	equ	0xFEE
  2601                           wreg	equ	0xFE8
  2602                           postdec1	equ	0xFE5
  2603                           fsr1l	equ	0xFE1
  2604                           indf2	equ	0xFDF
  2605                           postinc2	equ	0xFDE
  2606                           fsr2h	equ	0xFDA
  2607                           fsr2l	equ	0xFD9
  2608                           status	equ	0xFD8
  2609                           
  2610 ;; *************** function _strlen *****************
  2611 ;; Defined at:
  2612 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  s               2   22[COMRAM] PTR const unsigned char 
  2615 ;;		 -> BUFFCOM(7), 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  cp              2   26[COMRAM] PTR const unsigned char 
  2618 ;;		 -> BUFFCOM(7), 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  2   22[COMRAM] unsigned int 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2628 ;;      Params:         2       0       0       0       0       0       0       0       0
  2629 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2630 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2631 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2632 ;;Total ram usage:        6 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    6
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_trataComando
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text8
  2643  001824                     __ptext8:
  2644                           	opt stack 0
  2645  001824                     _strlen:
  2646                           	opt stack 22
  2647                           
  2648                           ;incstack = 0
  2649  001824  C017  F01B         	movff	strlen@s,strlen@cp
  2650  001828  C018  F01C         	movff	strlen@s+1,strlen@cp+1
  2651  00182C  D002               	goto	l3534
  2652  00182E                     l3532:
  2653  00182E  4A1B               	infsnz	strlen@cp,f,c
  2654  001830  2A1C               	incf	strlen@cp+1,f,c
  2655  001832                     l3534:
  2656  001832  C01B  FFD9         	movff	strlen@cp,fsr2l
  2657  001836  C01C  FFDA         	movff	strlen@cp+1,fsr2h
  2658  00183A  50DF               	movf	indf2,w,c
  2659  00183C  A4D8               	btfss	status,2,c
  2660  00183E  D7F7               	goto	l3532
  2661  001840  C017  F019         	movff	strlen@s,??_strlen
  2662  001844  C018  F01A         	movff	strlen@s+1,??_strlen+1
  2663  001848  1E19               	comf	??_strlen,f,c
  2664  00184A  1E1A               	comf	??_strlen+1,f,c
  2665  00184C  4A19               	infsnz	??_strlen,f,c
  2666  00184E  2A1A               	incf	??_strlen+1,f,c
  2667  001850  501B               	movf	strlen@cp,w,c
  2668  001852  2419               	addwf	??_strlen,w,c
  2669  001854  6E17               	movwf	?_strlen,c
  2670  001856  501C               	movf	strlen@cp+1,w,c
  2671  001858  201A               	addwfc	??_strlen+1,w,c
  2672  00185A  6E18               	movwf	?_strlen+1,c
  2673  00185C  0012               	return	
  2674  00185E                     __end_of_strlen:
  2675                           	opt stack 0
  2676                           tblptru	equ	0xFF8
  2677                           tblptrh	equ	0xFF7
  2678                           tblptrl	equ	0xFF6
  2679                           tablat	equ	0xFF5
  2680                           intcon	equ	0xFF2
  2681                           postinc0	equ	0xFEE
  2682                           wreg	equ	0xFE8
  2683                           postdec1	equ	0xFE5
  2684                           fsr1l	equ	0xFE1
  2685                           indf2	equ	0xFDF
  2686                           postinc2	equ	0xFDE
  2687                           fsr2h	equ	0xFDA
  2688                           fsr2l	equ	0xFD9
  2689                           status	equ	0xFD8
  2690                           
  2691 ;; *************** function _memcpy *****************
  2692 ;; Defined at:
  2693 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  d1              2   28[COMRAM] PTR void 
  2696 ;;		 -> BUFFRESP(7), 
  2697 ;;  s1              2   30[COMRAM] PTR const void 
  2698 ;;		 -> BUFFCOM(7), 
  2699 ;;  n               2   32[COMRAM] unsigned int 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  s               2   36[COMRAM] PTR const unsigned char 
  2702 ;;		 -> BUFFCOM(7), 
  2703 ;;  d               2   34[COMRAM] PTR unsigned char 
  2704 ;;		 -> BUFFRESP(7), 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  2   28[COMRAM] PTR void 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2714 ;;      Params:         6       0       0       0       0       0       0       0       0
  2715 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2717 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2718 ;;Total ram usage:       10 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    6
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_trataComando
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text9
  2729  00172A                     __ptext9:
  2730                           	opt stack 0
  2731  00172A                     _memcpy:
  2732                           	opt stack 22
  2733                           
  2734                           ;incstack = 0
  2735  00172A  C01F  F025         	movff	memcpy@s1,memcpy@s
  2736  00172E  C020  F026         	movff	memcpy@s1+1,memcpy@s+1
  2737  001732  C01D  F023         	movff	memcpy@d1,memcpy@d
  2738  001736  C01E  F024         	movff	memcpy@d1+1,memcpy@d+1
  2739  00173A  D00E               	goto	l3548
  2740  00173C                     l3542:
  2741  00173C  C025  FFD9         	movff	memcpy@s,fsr2l
  2742  001740  C026  FFDA         	movff	memcpy@s+1,fsr2h
  2743  001744  C023  FFE1         	movff	memcpy@d,fsr1l
  2744  001748  C024  FFE2         	movff	memcpy@d+1,fsr1h
  2745  00174C  CFDF FFE7          	movff	indf2,indf1
  2746  001750  4A25               	infsnz	memcpy@s,f,c
  2747  001752  2A26               	incf	memcpy@s+1,f,c
  2748  001754  4A23               	infsnz	memcpy@d,f,c
  2749  001756  2A24               	incf	memcpy@d+1,f,c
  2750  001758                     l3548:
  2751  001758  0621               	decf	memcpy@n,f,c
  2752  00175A  A0D8               	btfss	status,0,c
  2753  00175C  0622               	decf	memcpy@n+1,f,c
  2754  00175E  2821               	incf	memcpy@n,w,c
  2755  001760  E1ED               	bnz	l3542
  2756  001762  2822               	incf	memcpy@n+1,w,c
  2757  001764  B4D8               	btfsc	status,2,c
  2758  001766  0012               	return	
  2759  001768  D7E9               	goto	l3542
  2760  00176A                     __end_of_memcpy:
  2761                           	opt stack 0
  2762                           tblptru	equ	0xFF8
  2763                           tblptrh	equ	0xFF7
  2764                           tblptrl	equ	0xFF6
  2765                           tablat	equ	0xFF5
  2766                           intcon	equ	0xFF2
  2767                           postinc0	equ	0xFEE
  2768                           wreg	equ	0xFE8
  2769                           indf1	equ	0xFE7
  2770                           postdec1	equ	0xFE5
  2771                           fsr1h	equ	0xFE2
  2772                           fsr1l	equ	0xFE1
  2773                           indf2	equ	0xFDF
  2774                           postinc2	equ	0xFDE
  2775                           fsr2h	equ	0xFDA
  2776                           fsr2l	equ	0xFD9
  2777                           status	equ	0xFD8
  2778                           
  2779 ;; *************** function _calculaCRCBUFFRESP *****************
  2780 ;; Defined at:
  2781 ;;		line 403 in file "main.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  crc             2   35[COMRAM] unsigned short 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2795 ;;      Params:         0       0       0       0       0       0       0       0       0
  2796 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2798 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2799 ;;Total ram usage:        2 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    7
  2802 ;; This function calls:
  2803 ;;		_crc16
  2804 ;; This function is called by:
  2805 ;;		_trataComando
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text10
  2810  00196C                     __ptext10:
  2811                           	opt stack 0
  2812  00196C                     _calculaCRCBUFFRESP:
  2813                           	opt stack 21
  2814                           
  2815                           ;main.c: 405: unsigned short crc;
  2816                           ;main.c: 407: crc = crc16(BUFFRESP,5);
  2817                           
  2818                           ;incstack = 0
  2819  00196C  0E31               	movlw	low _BUFFRESP
  2820  00196E  6E17               	movwf	crc16@data_p,c
  2821  001970  0E00               	movlw	high _BUFFRESP
  2822  001972  6E18               	movwf	crc16@data_p+1,c
  2823  001974  0E00               	movlw	0
  2824  001976  6E1A               	movwf	crc16@length+1,c
  2825  001978  0E05               	movlw	5
  2826  00197A  6E19               	movwf	crc16@length,c
  2827  00197C  ECF5  F007         	call	_crc16	;wreg free
  2828  001980  C017  F024         	movff	?_crc16,calculaCRCBUFFRESP@crc
  2829  001984  C018  F025         	movff	?_crc16+1,calculaCRCBUFFRESP@crc+1
  2830                           
  2831                           ;main.c: 409: BUFFRESP[5] = crc >> 8;
  2832  001988  5025               	movf	calculaCRCBUFFRESP@crc+1,w,c
  2833  00198A  6E36               	movwf	_BUFFRESP+5,c
  2834                           
  2835                           ;main.c: 410: BUFFRESP[6] = crc & 0xFF;
  2836  00198C  C024  F037         	movff	calculaCRCBUFFRESP@crc,_BUFFRESP+6
  2837                           
  2838                           ;main.c: 412: estado = 3;
  2839  001990  0E03               	movlw	3
  2840  001992  6E30               	movwf	_estado,c
  2841  001994  0012               	return		;funcret
  2842  001996                     __end_of_calculaCRCBUFFRESP:
  2843                           	opt stack 0
  2844                           tblptru	equ	0xFF8
  2845                           tblptrh	equ	0xFF7
  2846                           tblptrl	equ	0xFF6
  2847                           tablat	equ	0xFF5
  2848                           intcon	equ	0xFF2
  2849                           postinc0	equ	0xFEE
  2850                           wreg	equ	0xFE8
  2851                           indf1	equ	0xFE7
  2852                           postdec1	equ	0xFE5
  2853                           fsr1h	equ	0xFE2
  2854                           fsr1l	equ	0xFE1
  2855                           indf2	equ	0xFDF
  2856                           postinc2	equ	0xFDE
  2857                           fsr2h	equ	0xFDA
  2858                           fsr2l	equ	0xFD9
  2859                           status	equ	0xFD8
  2860                           
  2861 ;; *************** function _crc16 *****************
  2862 ;; Defined at:
  2863 ;;		line 348 in file "main.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  data_p          2   22[COMRAM] PTR unsigned char 
  2866 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  2867 ;;  length          2   24[COMRAM] unsigned short 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  crc             2   33[COMRAM] unsigned int 
  2870 ;;  data            2   31[COMRAM] unsigned int 
  2871 ;;  i               1   30[COMRAM] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  2   22[COMRAM] unsigned short 
  2874 ;; Registers used:
  2875 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2881 ;;      Params:         4       0       0       0       0       0       0       0       0
  2882 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2883 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2884 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2885 ;;Total ram usage:       13 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    6
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_calculaCRCBUFFRESP
  2892 ;;		_verificaCRCBUFFCOM
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text11
  2897  000FEA                     __ptext11:
  2898                           	opt stack 0
  2899  000FEA                     _crc16:
  2900                           	opt stack 22
  2901                           
  2902                           ;main.c: 350: unsigned char i;
  2903                           ;main.c: 351: unsigned int data;
  2904                           ;main.c: 352: unsigned int crc = 0xffff;
  2905                           
  2906                           ;incstack = 0
  2907  000FEA  6822               	setf	crc16@crc,c
  2908  000FEC  6823               	setf	crc16@crc+1,c
  2909                           
  2910                           ;main.c: 354: if (length == 0)
  2911  000FEE  5019               	movf	crc16@length,w,c
  2912  000FF0  101A               	iorwf	crc16@length+1,w,c
  2913  000FF2  A4D8               	btfss	status,2,c
  2914  000FF4  D005               	goto	l3362
  2915                           
  2916                           ;main.c: 355: return (~crc);
  2917  000FF6  1C22               	comf	crc16@crc,w,c
  2918  000FF8  6E17               	movwf	?_crc16,c
  2919  000FFA  1C23               	comf	crc16@crc+1,w,c
  2920  000FFC  6E18               	movwf	?_crc16+1,c
  2921  000FFE  0012               	return	
  2922  001000                     l3362:
  2923                           
  2924                           ;main.c: 358: {
  2925                           ;main.c: 359: for (i=0, data=(unsigned int)0xff & *data_p++;
  2926  001000  0E00               	movlw	0
  2927  001002  6E1F               	movwf	crc16@i,c
  2928  001004  C017  FFD9         	movff	crc16@data_p,fsr2l
  2929  001008  C018  FFDA         	movff	crc16@data_p+1,fsr2h
  2930  00100C  50DF               	movf	indf2,w,c
  2931  00100E  6E1B               	movwf	??_crc16& (0+255),c
  2932  001010  501B               	movf	??_crc16,w,c
  2933  001012  6E20               	movwf	crc16@data,c
  2934  001014  6A21               	clrf	crc16@data+1,c
  2935  001016  4A17               	infsnz	crc16@data_p,f,c
  2936  001018  2A18               	incf	crc16@data_p+1,f,c
  2937  00101A                     l3368:
  2938                           
  2939                           ;main.c: 360: i < 8;
  2940                           ;main.c: 361: i++, data >>= 1)
  2941  00101A  0E07               	movlw	7
  2942  00101C  641F               	cpfsgt	crc16@i,c
  2943  00101E  D001               	goto	l3372
  2944  001020  D028               	goto	l3380
  2945  001022                     l3372:
  2946                           
  2947                           ;main.c: 362: {
  2948                           ;main.c: 363: if ((crc & 0x0001) ^ (data & 0x0001))
  2949  001022  0E01               	movlw	1
  2950  001024  1420               	andwf	crc16@data,w,c
  2951  001026  6E1B               	movwf	??_crc16& (0+255),c
  2952  001028  0E00               	movlw	0
  2953  00102A  1421               	andwf	crc16@data+1,w,c
  2954  00102C  6E1C               	movwf	(??_crc16+1)& (0+255),c
  2955  00102E  0E01               	movlw	1
  2956  001030  1422               	andwf	crc16@crc,w,c
  2957  001032  6E1D               	movwf	(??_crc16+2)& (0+255),c
  2958  001034  0E00               	movlw	0
  2959  001036  1423               	andwf	crc16@crc+1,w,c
  2960  001038  6E1E               	movwf	(??_crc16+3)& (0+255),c
  2961  00103A  501B               	movf	??_crc16,w,c
  2962  00103C  1A1D               	xorwf	??_crc16+2,f,c
  2963  00103E  501C               	movf	??_crc16+1,w,c
  2964  001040  1A1E               	xorwf	??_crc16+3,f,c
  2965  001042  501D               	movf	??_crc16+2,w,c
  2966  001044  101E               	iorwf	??_crc16+3,w,c
  2967  001046  B4D8               	btfsc	status,2,c
  2968  001048  D00C               	goto	l3376
  2969                           
  2970                           ;main.c: 364: crc = (crc >> 1) ^ 0x8408;
  2971  00104A  90D8               	bcf	status,0,c
  2972  00104C  3023               	rrcf	crc16@crc+1,w,c
  2973  00104E  6E1C               	movwf	(??_crc16+1)& (0+255),c
  2974  001050  3022               	rrcf	crc16@crc,w,c
  2975  001052  6E1B               	movwf	??_crc16& (0+255),c
  2976  001054  0E08               	movlw	8
  2977  001056  181B               	xorwf	??_crc16,w,c
  2978  001058  6E22               	movwf	crc16@crc,c
  2979  00105A  0E84               	movlw	132
  2980  00105C  181C               	xorwf	??_crc16+1,w,c
  2981  00105E  6E23               	movwf	crc16@crc+1,c
  2982  001060  D003               	goto	l202
  2983  001062                     l3376:
  2984                           
  2985                           ;main.c: 365: else crc >>= 1;
  2986  001062  90D8               	bcf	status,0,c
  2987  001064  3223               	rrcf	crc16@crc+1,f,c
  2988  001066  3222               	rrcf	crc16@crc,f,c
  2989  001068                     l202:
  2990  001068  2A1F               	incf	crc16@i,f,c
  2991  00106A  90D8               	bcf	status,0,c
  2992  00106C  3221               	rrcf	crc16@data+1,f,c
  2993  00106E  3220               	rrcf	crc16@data,f,c
  2994  001070  D7D4               	goto	l3368
  2995  001072                     l3380:
  2996                           
  2997                           ;main.c: 366: }
  2998                           ;main.c: 367: } while (--length);
  2999  001072  0619               	decf	crc16@length,f,c
  3000  001074  A0D8               	btfss	status,0,c
  3001  001076  061A               	decf	crc16@length+1,f,c
  3002  001078  5019               	movf	crc16@length,w,c
  3003  00107A  101A               	iorwf	crc16@length+1,w,c
  3004  00107C  A4D8               	btfss	status,2,c
  3005  00107E  D7C0               	goto	l3362
  3006                           
  3007                           ;main.c: 369: crc = ~crc;
  3008  001080  1E22               	comf	crc16@crc,f,c
  3009  001082  1E23               	comf	crc16@crc+1,f,c
  3010                           
  3011                           ;main.c: 370: data = crc;
  3012  001084  C022  F020         	movff	crc16@crc,crc16@data
  3013  001088  C023  F021         	movff	crc16@crc+1,crc16@data+1
  3014                           
  3015                           ;main.c: 371: crc = (crc << 8) | (data >> 8 & 0xff);
  3016  00108C  C020  F01B         	movff	crc16@data,??_crc16
  3017  001090  C021  F01C         	movff	crc16@data+1,??_crc16+1
  3018  001094  C01C  F01B         	movff	??_crc16+1,??_crc16
  3019  001098  6A1C               	clrf	??_crc16+1,c
  3020  00109A  501B               	movf	??_crc16,w,c
  3021  00109C  C022  F01D         	movff	crc16@crc,??_crc16+2
  3022  0010A0  C023  F01E         	movff	crc16@crc+1,??_crc16+3
  3023  0010A4  C01D  F01E         	movff	??_crc16+2,??_crc16+3
  3024  0010A8  6A1D               	clrf	??_crc16+2,c
  3025  0010AA  101D               	iorwf	??_crc16+2,w,c
  3026  0010AC  6E22               	movwf	crc16@crc,c
  3027  0010AE  501E               	movf	??_crc16+3,w,c
  3028  0010B0  6E23               	movwf	crc16@crc+1,c
  3029                           
  3030                           ;main.c: 373: return (crc);
  3031  0010B2  C022  F017         	movff	crc16@crc,?_crc16
  3032  0010B6  C023  F018         	movff	crc16@crc+1,?_crc16+1
  3033  0010BA  0012               	return	
  3034  0010BC                     __end_of_crc16:
  3035                           	opt stack 0
  3036                           tblptru	equ	0xFF8
  3037                           tblptrh	equ	0xFF7
  3038                           tblptrl	equ	0xFF6
  3039                           tablat	equ	0xFF5
  3040                           intcon	equ	0xFF2
  3041                           postinc0	equ	0xFEE
  3042                           wreg	equ	0xFE8
  3043                           indf1	equ	0xFE7
  3044                           postdec1	equ	0xFE5
  3045                           fsr1h	equ	0xFE2
  3046                           fsr1l	equ	0xFE1
  3047                           indf2	equ	0xFDF
  3048                           postinc2	equ	0xFDE
  3049                           fsr2h	equ	0xFDA
  3050                           fsr2l	equ	0xFD9
  3051                           status	equ	0xFD8
  3052                           
  3053 ;; *************** function _atualiza_Tela *****************
  3054 ;; Defined at:
  3055 ;;		line 254 in file "main.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  troca_ou_nao    1    wreg     unsigned char 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  troca_ou_nao    1   17[BANK0 ] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3069 ;;      Params:         0       0       0       0       0       0       0       0       0
  3070 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3072 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3073 ;;Total ram usage:        1 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:   10
  3076 ;; This function calls:
  3077 ;;		_SetDDRamAddr
  3078 ;;		_acionaDespertador
  3079 ;;		_converteAnoString
  3080 ;;		_putrsXLCD
  3081 ;; This function is called by:
  3082 ;;		_setaDespertador
  3083 ;;		_trataComando
  3084 ;;		_main
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text12
  3089  000ED2                     __ptext12:
  3090                           	opt stack 0
  3091  000ED2                     _atualiza_Tela:
  3092                           	opt stack 19
  3093                           
  3094                           ;incstack = 0
  3095                           ;atualiza_Tela@troca_ou_nao stored from wreg
  3096  000ED2  0100               	movlb	0	; () banked
  3097  000ED4  6F85               	movwf	atualiza_Tela@troca_ou_nao& (0+255),b
  3098                           
  3099                           ;main.c: 256: if(troca_ou_nao == 1){
  3100  000ED6  0100               	movlb	0	; () banked
  3101  000ED8  0585               	decf	atualiza_Tela@troca_ou_nao& (0+255),w,b
  3102  000EDA  A4D8               	btfss	status,2,c
  3103  000EDC  D07B               	goto	l3488
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;main.c: 257: tela_atual++;
  3107  000EDE  2A28               	incf	_tela_atual,f,c
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;main.c: 258: if(tela_atual >2){
  3111  000EE0  0E02               	movlw	2
  3112  000EE2  6428               	cpfsgt	_tela_atual,c
  3113  000EE4  D077               	goto	l3488
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;main.c: 259: tela_atual = 0;
  3117  000EE6  0E00               	movlw	0
  3118  000EE8  6E28               	movwf	_tela_atual,c
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;main.c: 260: }
  3122                           ;main.c: 261: }
  3123                           ;main.c: 262: switch(tela_atual){
  3124                           
  3125                           ; BSR set to: 0
  3126  000EEA  D074               	goto	l3488
  3127  000EEC                     l3448:
  3128                           
  3129                           ;main.c: 264: SetDDRamAddr(0x00);
  3130  000EEC  0E00               	movlw	0
  3131  000EEE  ECFF  F00A         	call	_SetDDRamAddr
  3132                           
  3133                           ;main.c: 265: putrsXLCD("Despertador     ");
  3134  000EF2  0E1C               	movlw	low STR_2
  3135  000EF4  6E26               	movwf	putrsXLCD@buffer,c
  3136  000EF6  0E08               	movlw	high STR_2
  3137  000EF8  6E27               	movwf	putrsXLCD@buffer+1,c
  3138  000EFA  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3139                           
  3140                           ;main.c: 266: SetDDRamAddr(0x40);
  3141  000EFE  0E40               	movlw	64
  3142  000F00  ECFF  F00A         	call	_SetDDRamAddr
  3143                           
  3144                           ;main.c: 267: putrsXLCD("Versao: ");
  3145  000F04  0E2D               	movlw	low STR_3
  3146  000F06  6E26               	movwf	putrsXLCD@buffer,c
  3147  000F08  0E08               	movlw	high STR_3
  3148  000F0A  6E27               	movwf	putrsXLCD@buffer+1,c
  3149  000F0C  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3150                           
  3151                           ;main.c: 268: putrsXLCD(versao);
  3152  000F10  0E93               	movlw	low _versao
  3153  000F12  6E26               	movwf	putrsXLCD@buffer,c
  3154  000F14  0E00               	movlw	high _versao
  3155  000F16  6E27               	movwf	putrsXLCD@buffer+1,c
  3156  000F18  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3157                           
  3158                           ;main.c: 270: break;
  3159  000F1C  0012               	return	
  3160  000F1E                     l3454:
  3161                           
  3162                           ;main.c: 272: SetDDRamAddr(0x00);
  3163  000F1E  0E00               	movlw	0
  3164  000F20  ECFF  F00A         	call	_SetDDRamAddr
  3165                           
  3166                           ;main.c: 273: putrsXLCD("Hora: ");
  3167  000F24  0E3D               	movlw	low STR_4
  3168  000F26  6E26               	movwf	putrsXLCD@buffer,c
  3169  000F28  0E08               	movlw	high STR_4
  3170  000F2A  6E27               	movwf	putrsXLCD@buffer+1,c
  3171  000F2C  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3172                           
  3173                           ;main.c: 274: putrsXLCD(data_horario.horario);
  3174  000F30  0E60               	movlw	low _data_horario
  3175  000F32  6E26               	movwf	putrsXLCD@buffer,c
  3176  000F34  0E00               	movlw	high _data_horario
  3177  000F36  6E27               	movwf	putrsXLCD@buffer+1,c
  3178  000F38  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3179                           
  3180                           ;main.c: 275: SetDDRamAddr(0x40);
  3181  000F3C  0E40               	movlw	64
  3182  000F3E  ECFF  F00A         	call	_SetDDRamAddr
  3183                           
  3184                           ;main.c: 276: putrsXLCD("Data: ");
  3185  000F42  0E44               	movlw	low STR_5
  3186  000F44  6E26               	movwf	putrsXLCD@buffer,c
  3187  000F46  0E08               	movlw	high STR_5
  3188  000F48  6E27               	movwf	putrsXLCD@buffer+1,c
  3189  000F4A  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3190                           
  3191                           ;main.c: 277: putrsXLCD(data_horario.data);
  3192  000F4E  0E69               	movlw	low (_data_horario+9)
  3193  000F50  6E26               	movwf	putrsXLCD@buffer,c
  3194  000F52  0E00               	movlw	high (_data_horario+9)
  3195  000F54  6E27               	movwf	putrsXLCD@buffer+1,c
  3196  000F56  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3197                           
  3198                           ;main.c: 278: putrsXLCD(converteAnoString(data_horario.ano));
  3199  000F5A  C072  F024         	movff	_data_horario+18,converteAnoString@ano
  3200  000F5E  C073  F025         	movff	_data_horario+19,converteAnoString@ano+1
  3201  000F62  EC9F  F00C         	call	_converteAnoString	;wreg free
  3202  000F66  C024  F026         	movff	?_converteAnoString,putrsXLCD@buffer
  3203  000F6A  C025  F027         	movff	?_converteAnoString+1,putrsXLCD@buffer+1
  3204  000F6E  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3205                           
  3206                           ;main.c: 279: acionaDespertador();
  3207  000F72  EC85  F00C         	call	_acionaDespertador	;wreg free
  3208                           
  3209                           ;main.c: 280: if(flagDespertadorLigado){
  3210  000F76  502C               	movf	_flagDespertadorLigado,w,c
  3211  000F78  B4D8               	btfsc	status,2,c
  3212  000F7A  0012               	return	
  3213                           
  3214                           ;main.c: 281: PORTDbits.RD0 = 1;
  3215  000F7C  8083               	bsf	3971,0,c	;volatile
  3216                           
  3217                           ;main.c: 282: tempoDespertador++;
  3218  000F7E  2A29               	incf	_tempoDespertador,f,c
  3219                           
  3220                           ;main.c: 283: if(tempoDespertador > 5){
  3221  000F80  0E05               	movlw	5
  3222  000F82  6429               	cpfsgt	_tempoDespertador,c
  3223  000F84  0012               	return	
  3224                           
  3225                           ;main.c: 284: tempoDespertador = 0;
  3226  000F86  0E00               	movlw	0
  3227  000F88  6E29               	movwf	_tempoDespertador,c
  3228                           
  3229                           ;main.c: 285: flagDespertadorLigado =0;
  3230  000F8A  0E00               	movlw	0
  3231  000F8C  6E2C               	movwf	_flagDespertadorLigado,c
  3232                           
  3233                           ;main.c: 286: PORTDbits.RD0 = 0;
  3234  000F8E  9083               	bcf	3971,0,c	;volatile
  3235                           
  3236                           ;main.c: 287: virouDia = 0;
  3237  000F90  0E00               	movlw	0
  3238  000F92  6E48               	movwf	_virouDia,c
  3239                           
  3240                           ;main.c: 288: }
  3241                           ;main.c: 289: }
  3242                           ;main.c: 290: break;
  3243  000F94  0012               	return	
  3244  000F96                     l3480:
  3245                           
  3246                           ;main.c: 292: SetDDRamAddr(0x00);
  3247  000F96  0E00               	movlw	0
  3248  000F98  ECFF  F00A         	call	_SetDDRamAddr
  3249                           
  3250                           ;main.c: 293: putrsXLCD("     ALARME     ");
  3251  000F9C  0E0B               	movlw	low STR_6
  3252  000F9E  6E26               	movwf	putrsXLCD@buffer,c
  3253  000FA0  0E08               	movlw	high STR_6
  3254  000FA2  6E27               	movwf	putrsXLCD@buffer+1,c
  3255  000FA4  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3256                           
  3257                           ;main.c: 294: SetDDRamAddr(0x40);
  3258  000FA8  0E40               	movlw	64
  3259  000FAA  ECFF  F00A         	call	_SetDDRamAddr
  3260                           
  3261                           ;main.c: 295: putrsXLCD("     ");
  3262  000FAE  0E37               	movlw	low (STR_8+1)
  3263  000FB0  6E26               	movwf	putrsXLCD@buffer,c
  3264  000FB2  0E08               	movlw	high (STR_8+1)
  3265  000FB4  6E27               	movwf	putrsXLCD@buffer+1,c
  3266  000FB6  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3267                           
  3268                           ;main.c: 296: putrsXLCD(horarioDespertador);
  3269  000FBA  0E3F               	movlw	low _horarioDespertador
  3270  000FBC  6E26               	movwf	putrsXLCD@buffer,c
  3271  000FBE  0E00               	movlw	high _horarioDespertador
  3272  000FC0  6E27               	movwf	putrsXLCD@buffer+1,c
  3273  000FC2  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3274                           
  3275                           ;main.c: 297: putrsXLCD("      ");
  3276  000FC6  0E36               	movlw	low STR_8
  3277  000FC8  6E26               	movwf	putrsXLCD@buffer,c
  3278  000FCA  0E08               	movlw	high STR_8
  3279  000FCC  6E27               	movwf	putrsXLCD@buffer+1,c
  3280  000FCE  EC4E  F00A         	call	_putrsXLCD	;wreg free
  3281                           
  3282                           ;main.c: 299: }
  3283                           
  3284                           ;main.c: 298: break;
  3285  000FD2  0012               	return	
  3286  000FD4                     l3488:
  3287  000FD4  5028               	movf	_tela_atual,w,c
  3288                           
  3289                           ; Switch size 1, requested type "space"
  3290                           ; Number of cases is 3, Range of values is 0 to 2
  3291                           ; switch strategies available:
  3292                           ; Name         Instructions Cycles
  3293                           ; simple_byte           10     6 (average)
  3294                           ;	Chosen strategy is simple_byte
  3295  000FD6  0A00               	xorlw	0	; case 0
  3296  000FD8  B4D8               	btfsc	status,2,c
  3297  000FDA  D788               	goto	l3448
  3298  000FDC  0A01               	xorlw	1	; case 1
  3299  000FDE  B4D8               	btfsc	status,2,c
  3300  000FE0  D79E               	goto	l3454
  3301  000FE2  0A03               	xorlw	3	; case 2
  3302  000FE4  A4D8               	btfss	status,2,c
  3303  000FE6  0012               	return	
  3304  000FE8  D7D6               	goto	l3480
  3305  000FEA                     __end_of_atualiza_Tela:
  3306                           	opt stack 0
  3307                           tblptru	equ	0xFF8
  3308                           tblptrh	equ	0xFF7
  3309                           tblptrl	equ	0xFF6
  3310                           tablat	equ	0xFF5
  3311                           intcon	equ	0xFF2
  3312                           postinc0	equ	0xFEE
  3313                           wreg	equ	0xFE8
  3314                           indf1	equ	0xFE7
  3315                           postdec1	equ	0xFE5
  3316                           fsr1h	equ	0xFE2
  3317                           fsr1l	equ	0xFE1
  3318                           indf2	equ	0xFDF
  3319                           postinc2	equ	0xFDE
  3320                           fsr2h	equ	0xFDA
  3321                           fsr2l	equ	0xFD9
  3322                           status	equ	0xFD8
  3323                           
  3324 ;; *************** function _putrsXLCD *****************
  3325 ;; Defined at:
  3326 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  buffer          2   37[COMRAM] PTR const unsigned char 
  3329 ;;		 -> STR_8(7), STR_7(6), STR_6(17), STR_5(7), 
  3330 ;;		 -> STR_4(7), versao(6), STR_3(9), STR_2(17), 
  3331 ;;		 -> horarioDespertador(6), data_horario.data(7), data_horario.horario(9), data_horario(20), 
  3332 ;;		 -> converteAnoString@anoStr(4), BUFFCOM(7), 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3344 ;;      Params:         2       0       0       0       0       0       0       0       0
  3345 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3347 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3348 ;;Total ram usage:        2 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    9
  3351 ;; This function calls:
  3352 ;;		_BusyXLCD
  3353 ;;		_WriteDataXLCD
  3354 ;; This function is called by:
  3355 ;;		_atualiza_Tela
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text13
  3360  00149C                     __ptext13:
  3361                           	opt stack 0
  3362  00149C                     _putrsXLCD:
  3363                           	opt stack 19
  3364                           
  3365                           ;incstack = 0
  3366  00149C  D019               	goto	l3334
  3367  00149E                     l3328:
  3368  00149E  EC2F  F00C         	call	_BusyXLCD	;wreg free
  3369  0014A2  0900               	iorlw	0
  3370  0014A4  A4D8               	btfss	status,2,c
  3371  0014A6  D7FB               	goto	l3328
  3372  0014A8  C026  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3373  0014AC  C027  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3374  0014B0  6AF8               	clrf	tblptru,c
  3375  0014B2  0E07               	movlw	(high __ramtop+-1)
  3376  0014B4  64F7               	cpfsgt	tblptrh,c
  3377  0014B6  D003               	bra	u2437
  3378  0014B8  0008               	tblrd		*
  3379  0014BA  50F5               	movf	tablat,w,c
  3380  0014BC  D005               	bra	u2430
  3381  0014BE                     u2437:
  3382  0014BE  CFF6 FFE1          	movff	tblptrl,fsr1l
  3383  0014C2  CFF7 FFE2          	movff	tblptrh,fsr1h
  3384  0014C6  50E7               	movf	indf1,w,c
  3385  0014C8                     u2430:
  3386  0014C8  ECB5  F00B         	call	_WriteDataXLCD
  3387  0014CC  4A26               	infsnz	putrsXLCD@buffer,f,c
  3388  0014CE  2A27               	incf	putrsXLCD@buffer+1,f,c
  3389  0014D0                     l3334:
  3390  0014D0  C026  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3391  0014D4  C027  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3392  0014D8  6AF8               	clrf	tblptru,c
  3393  0014DA  0E07               	movlw	(high __ramtop+-1)
  3394  0014DC  64F7               	cpfsgt	tblptrh,c
  3395  0014DE  D003               	bra	u2447
  3396  0014E0  0008               	tblrd		*
  3397  0014E2  50F5               	movf	tablat,w,c
  3398  0014E4  D005               	bra	u2440
  3399  0014E6                     u2447:
  3400  0014E6  CFF6 FFE1          	movff	tblptrl,fsr1l
  3401  0014EA  CFF7 FFE2          	movff	tblptrh,fsr1h
  3402  0014EE  50E7               	movf	indf1,w,c
  3403  0014F0                     u2440:
  3404  0014F0  0900               	iorlw	0
  3405  0014F2  B4D8               	btfsc	status,2,c
  3406  0014F4  0012               	return	
  3407  0014F6  D7D3               	goto	l3328
  3408  0014F8                     __end_of_putrsXLCD:
  3409                           	opt stack 0
  3410                           tblptru	equ	0xFF8
  3411                           tblptrh	equ	0xFF7
  3412                           tblptrl	equ	0xFF6
  3413                           tablat	equ	0xFF5
  3414                           intcon	equ	0xFF2
  3415                           postinc0	equ	0xFEE
  3416                           wreg	equ	0xFE8
  3417                           indf1	equ	0xFE7
  3418                           postdec1	equ	0xFE5
  3419                           fsr1h	equ	0xFE2
  3420                           fsr1l	equ	0xFE1
  3421                           indf2	equ	0xFDF
  3422                           postinc2	equ	0xFDE
  3423                           fsr2h	equ	0xFDA
  3424                           fsr2l	equ	0xFD9
  3425                           status	equ	0xFD8
  3426                           
  3427 ;; *************** function _WriteDataXLCD *****************
  3428 ;; Defined at:
  3429 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  data            1    wreg     unsigned char 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  data            1   23[COMRAM] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3443 ;;      Params:         0       0       0       0       0       0       0       0       0
  3444 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3446 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3447 ;;Total ram usage:        1 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    8
  3450 ;; This function calls:
  3451 ;;		_DelayFor18TCY
  3452 ;; This function is called by:
  3453 ;;		_putrsXLCD
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text14
  3458  00176A                     __ptext14:
  3459                           	opt stack 0
  3460  00176A                     _WriteDataXLCD:
  3461                           	opt stack 19
  3462                           
  3463                           ;incstack = 0
  3464                           ;WriteDataXLCD@data stored from wreg
  3465  00176A  6E18               	movwf	WriteDataXLCD@data,c
  3466  00176C  0EF0               	movlw	240
  3467  00176E  1693               	andwf	3987,f,c	;volatile
  3468  001770  0EF0               	movlw	240
  3469  001772  1681               	andwf	3969,f,c	;volatile
  3470  001774  3818               	swapf	WriteDataXLCD@data,w,c
  3471  001776  0B0F               	andlw	15
  3472  001778  0B0F               	andlw	15
  3473  00177A  1281               	iorwf	3969,f,c	;volatile
  3474  00177C  8A8A               	bsf	3978,5,c	;volatile
  3475  00177E  9C8A               	bcf	3978,6,c	;volatile
  3476  001780  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  3477  001784  888A               	bsf	3978,4,c	;volatile
  3478  001786  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  3479  00178A  988A               	bcf	3978,4,c	;volatile
  3480  00178C  0EF0               	movlw	240
  3481  00178E  1681               	andwf	3969,f,c	;volatile
  3482  001790  5018               	movf	WriteDataXLCD@data,w,c
  3483  001792  0B0F               	andlw	15
  3484  001794  1281               	iorwf	3969,f,c	;volatile
  3485  001796  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  3486  00179A  888A               	bsf	3978,4,c	;volatile
  3487  00179C  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  3488  0017A0  988A               	bcf	3978,4,c	;volatile
  3489  0017A2  0E0F               	movlw	15
  3490  0017A4  1293               	iorwf	3987,f,c	;volatile
  3491  0017A6  0012               	return	
  3492  0017A8                     __end_of_WriteDataXLCD:
  3493                           	opt stack 0
  3494                           tblptru	equ	0xFF8
  3495                           tblptrh	equ	0xFF7
  3496                           tblptrl	equ	0xFF6
  3497                           tablat	equ	0xFF5
  3498                           intcon	equ	0xFF2
  3499                           postinc0	equ	0xFEE
  3500                           wreg	equ	0xFE8
  3501                           indf1	equ	0xFE7
  3502                           postdec1	equ	0xFE5
  3503                           fsr1h	equ	0xFE2
  3504                           fsr1l	equ	0xFE1
  3505                           indf2	equ	0xFDF
  3506                           postinc2	equ	0xFDE
  3507                           fsr2h	equ	0xFDA
  3508                           fsr2l	equ	0xFD9
  3509                           status	equ	0xFD8
  3510                           
  3511 ;; *************** function _converteAnoString *****************
  3512 ;; Defined at:
  3513 ;;		line 169 in file "main.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  ano             2   35[COMRAM] int 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  anoStr          4   13[BANK0 ] unsigned char [4]
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  2   35[COMRAM] PTR unsigned char 
  3520 ;; Registers used:
  3521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3527 ;;      Params:         2       0       0       0       0       0       0       0       0
  3528 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3530 ;;      Totals:         2       4       0       0       0       0       0       0       0
  3531 ;;Total ram usage:        6 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    8
  3534 ;; This function calls:
  3535 ;;		_sprintf
  3536 ;; This function is called by:
  3537 ;;		_atualiza_Tela
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text15
  3542  00193E                     __ptext15:
  3543                           	opt stack 0
  3544  00193E                     _converteAnoString:
  3545                           	opt stack 20
  3546                           
  3547                           ;main.c: 170: char anoStr[4];
  3548                           ;main.c: 171: sprintf(anoStr,"%i",ano);
  3549                           
  3550                           ;incstack = 0
  3551  00193E  0E81               	movlw	low converteAnoString@anoStr
  3552  001940  0100               	movlb	0	; () banked
  3553  001942  6F74               	movwf	sprintf@sp& (0+255),b
  3554  001944  0E00               	movlw	high converteAnoString@anoStr
  3555  001946  0100               	movlb	0	; () banked
  3556  001948  6F75               	movwf	(sprintf@sp+1)& (0+255),b
  3557  00194A  0E4B               	movlw	low STR_1
  3558  00194C  0100               	movlb	0	; () banked
  3559  00194E  6F76               	movwf	sprintf@f& (0+255),b
  3560  001950  0E08               	movlw	high STR_1
  3561  001952  0100               	movlb	0	; () banked
  3562  001954  6F77               	movwf	(sprintf@f+1)& (0+255),b
  3563  001956  C024  F078         	movff	converteAnoString@ano,?_sprintf+4
  3564  00195A  C025  F079         	movff	converteAnoString@ano+1,?_sprintf+5
  3565  00195E  EC78  F005         	call	_sprintf	;wreg free
  3566                           
  3567                           ;main.c: 172: return anoStr;
  3568  001962  0E81               	movlw	low converteAnoString@anoStr
  3569  001964  6E24               	movwf	?_converteAnoString,c
  3570  001966  0E00               	movlw	high converteAnoString@anoStr
  3571  001968  6E25               	movwf	?_converteAnoString+1,c
  3572  00196A  0012               	return	
  3573  00196C                     __end_of_converteAnoString:
  3574                           	opt stack 0
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           intcon	equ	0xFF2
  3580                           postinc0	equ	0xFEE
  3581                           wreg	equ	0xFE8
  3582                           indf1	equ	0xFE7
  3583                           postdec1	equ	0xFE5
  3584                           fsr1h	equ	0xFE2
  3585                           fsr1l	equ	0xFE1
  3586                           indf2	equ	0xFDF
  3587                           postinc2	equ	0xFDE
  3588                           fsr2h	equ	0xFDA
  3589                           fsr2l	equ	0xFD9
  3590                           status	equ	0xFD8
  3591                           
  3592 ;; *************** function _sprintf *****************
  3593 ;; Defined at:
  3594 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  3597 ;;		 -> converteAnoString@anoStr(4), 
  3598 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  3599 ;;		 -> STR_1(3), 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  tmpval          4    0        struct .
  3602 ;;  cp              3    0        PTR const unsigned char 
  3603 ;;  val             2   10[BANK0 ] unsigned int 
  3604 ;;  ap              2    6[BANK0 ] PTR void [1]
  3605 ;;		 -> ?_sprintf(2), 
  3606 ;;  len             2    0        unsigned int 
  3607 ;;  c               1   12[BANK0 ] char 
  3608 ;;  prec            1    9[BANK0 ] char 
  3609 ;;  flag            1    8[BANK0 ] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  2    0[BANK0 ] int 
  3612 ;; Registers used:
  3613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3619 ;;      Params:         0       6       0       0       0       0       0       0       0
  3620 ;;      Locals:         0       7       0       0       0       0       0       0       0
  3621 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3622 ;;      Totals:         1      13       0       0       0       0       0       0       0
  3623 ;;Total ram usage:       14 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    7
  3626 ;; This function calls:
  3627 ;;		___lwdiv
  3628 ;;		___lwmod
  3629 ;; This function is called by:
  3630 ;;		_converteAnoString
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text16
  3635  000AF0                     __ptext16:
  3636                           	opt stack 0
  3637  000AF0                     _sprintf:
  3638                           	opt stack 20
  3639                           
  3640                           ;doprnt.c: 494: va_list ap;
  3641                           ;doprnt.c: 499: signed char c;
  3642                           ;doprnt.c: 506: signed char prec;
  3643                           ;doprnt.c: 508: unsigned char flag;
  3644                           ;doprnt.c: 523: union {
  3645                           ;doprnt.c: 524: unsigned long vd;
  3646                           ;doprnt.c: 525: double integ;
  3647                           ;doprnt.c: 526: } tmpval;
  3648                           ;doprnt.c: 528: unsigned int val;
  3649                           ;doprnt.c: 529: unsigned len;
  3650                           ;doprnt.c: 530: const char * cp;
  3651                           ;doprnt.c: 533: *ap = __va_start();
  3652                           
  3653                           ;incstack = 0
  3654  000AF0  0E78               	movlw	low (?_sprintf+4)
  3655  000AF2  0100               	movlb	0	; () banked
  3656  000AF4  6F7A               	movwf	sprintf@ap& (0+255),b
  3657  000AF6  0E00               	movlw	high (?_sprintf+4)
  3658  000AF8  0100               	movlb	0	; () banked
  3659  000AFA  6F7B               	movwf	(sprintf@ap+1)& (0+255),b
  3660                           
  3661                           ;doprnt.c: 536: while(c = *f++) {
  3662  000AFC  D0A1               	goto	l3228
  3663  000AFE                     l3176:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;doprnt.c: 538: if(c != '%')
  3667  000AFE  0E25               	movlw	37
  3668  000B00  0100               	movlb	0	; () banked
  3669  000B02  1980               	xorwf	sprintf@c& (0+255),w,b
  3670  000B04  B4D8               	btfsc	status,2,c
  3671  000B06  D00A               	goto	l3182
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;doprnt.c: 540: {
  3675                           ;doprnt.c: 541: ((*sp++ = (c)));
  3676  000B08  C074  FFD9         	movff	sprintf@sp,fsr2l
  3677  000B0C  C075  FFDA         	movff	sprintf@sp+1,fsr2h
  3678  000B10  C080  FFDF         	movff	sprintf@c,indf2
  3679                           
  3680                           ; BSR set to: 0
  3681  000B14  0100               	movlb	0	; () banked
  3682  000B16  4B74               	infsnz	sprintf@sp& (0+255),f,b
  3683  000B18  2B75               	incf	(sprintf@sp+1)& (0+255),f,b
  3684                           
  3685                           ;doprnt.c: 542: continue;
  3686  000B1A  D092               	goto	l3228
  3687  000B1C                     l3182:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;doprnt.c: 543: }
  3691                           ;doprnt.c: 548: flag = 0;
  3692  000B1C  0E00               	movlw	0
  3693  000B1E  0100               	movlb	0	; () banked
  3694  000B20  6F7C               	movwf	sprintf@flag& (0+255),b
  3695                           
  3696                           ; BSR set to: 0
  3697                           
  3698                           ; BSR set to: 0
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;doprnt.c: 822: }
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;doprnt.c: 813: continue;
  3705                           
  3706                           ;doprnt.c: 802: default:
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;doprnt.c: 698: case 'i':
  3710                           ;doprnt.c: 699: break;
  3711                           
  3712                           ; BSR set to: 0
  3713                           
  3714                           ;doprnt.c: 697: case 'd':
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;doprnt.c: 638: goto alldone;
  3718                           
  3719                           ;doprnt.c: 637: case 0:
  3720                           
  3721                           ;doprnt.c: 635: switch(c = *f++) {
  3722  000B22  C076  FFF6         	movff	sprintf@f,tblptrl
  3723  000B26  C077  FFF7         	movff	sprintf@f+1,tblptrh
  3724  000B2A  0100               	movlb	0	; () banked
  3725  000B2C  4B76               	infsnz	sprintf@f& (0+255),f,b
  3726  000B2E  2B77               	incf	(sprintf@f+1)& (0+255),f,b
  3727  000B30                     	if	0	;tblptru may be non-zero
  3728  000B30                     	endif
  3729  000B30                     	if	0	;tblptru may be non-zero
  3730  000B30                     	endif
  3731  000B30  0008               	tblrd		*
  3732  000B32  CFF5 F080          	movff	tablat,sprintf@c
  3733  000B36  0100               	movlb	0	; () banked
  3734  000B38  5180               	movf	sprintf@c& (0+255),w,b
  3735                           
  3736                           ; Switch size 1, requested type "space"
  3737                           ; Number of cases is 3, Range of values is 0 to 105
  3738                           ; switch strategies available:
  3739                           ; Name         Instructions Cycles
  3740                           ; simple_byte           10     6 (average)
  3741                           ;	Chosen strategy is simple_byte
  3742  000B3A  0A00               	xorlw	0	; case 0
  3743  000B3C  B4D8               	btfsc	status,2,c
  3744  000B3E  D08E               	goto	l3230
  3745  000B40  0A64               	xorlw	100	; case 100
  3746  000B42  B4D8               	btfsc	status,2,c
  3747  000B44  D003               	goto	l3188
  3748  000B46  0A0D               	xorlw	13	; case 105
  3749  000B48  A4D8               	btfss	status,2,c
  3750  000B4A  D07A               	goto	l3228
  3751  000B4C                     l3188:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;doprnt.c: 1253: {
  3755                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3756  000B4C  C07A  FFD9         	movff	sprintf@ap,fsr2l
  3757  000B50  C07B  FFDA         	movff	sprintf@ap+1,fsr2h
  3758  000B54  CFDE F07E          	movff	postinc2,sprintf@val
  3759  000B58  CFDD F07F          	movff	postdec2,sprintf@val+1
  3760                           
  3761                           ; BSR set to: 0
  3762  000B5C  0E02               	movlw	2
  3763  000B5E  0100               	movlb	0	; () banked
  3764  000B60  277A               	addwf	sprintf@ap& (0+255),f,b
  3765  000B62  0E00               	movlw	0
  3766  000B64  237B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;doprnt.c: 1261: if((int)val < 0) {
  3770  000B66  0100               	movlb	0	; () banked
  3771  000B68  AF7F               	btfss	(sprintf@val+1)& (0+255),7,b
  3772  000B6A  D008               	goto	l3198
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;doprnt.c: 1262: flag |= 0x03;
  3776  000B6C  0E03               	movlw	3
  3777  000B6E  0100               	movlb	0	; () banked
  3778  000B70  137C               	iorwf	sprintf@flag& (0+255),f,b
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;doprnt.c: 1263: val = -val;
  3782  000B72  0100               	movlb	0	; () banked
  3783  000B74  6D7E               	negf	sprintf@val& (0+255),b
  3784  000B76  1F7F               	comf	(sprintf@val+1)& (0+255),f,b
  3785  000B78  B0D8               	btfsc	status,0,c
  3786  000B7A  2B7F               	incf	(sprintf@val+1)& (0+255),f,b
  3787  000B7C                     l3198:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;doprnt.c: 1264: }
  3791                           ;doprnt.c: 1266: }
  3792                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3793  000B7C  0E01               	movlw	1
  3794  000B7E  0100               	movlb	0	; () banked
  3795  000B80  6F80               	movwf	sprintf@c& (0+255),b
  3796  000B82                     l3200:
  3797                           
  3798                           ; BSR set to: 0
  3799  000B82  0E05               	movlw	5
  3800  000B84  0100               	movlb	0	; () banked
  3801  000B86  1980               	xorwf	sprintf@c& (0+255),w,b
  3802  000B88  B4D8               	btfsc	status,2,c
  3803  000B8A  D016               	goto	l3212
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;doprnt.c: 1306: if(val < dpowers[c])
  3807                           
  3808                           ; BSR set to: 0
  3809                           
  3810                           ; BSR set to: 0
  3811  000B8C  0100               	movlb	0	; () banked
  3812  000B8E  5180               	movf	sprintf@c& (0+255),w,b
  3813  000B90  0D02               	mullw	2
  3814  000B92  0E01               	movlw	low _dpowers
  3815  000B94  24F3               	addwf	prodl,w,c
  3816  000B96  6EF6               	movwf	tblptrl,c
  3817  000B98  0E08               	movlw	high _dpowers
  3818  000B9A  20F4               	addwfc	prodh,w,c
  3819  000B9C  6EF7               	movwf	tblptrh,c
  3820  000B9E                     	if	0	;There are less than 3 active tblptr bytes
  3821  000B9E                     	endif
  3822  000B9E  0009               	tblrd		*+
  3823  000BA0  50F5               	movf	tablat,w,c
  3824  000BA2  0100               	movlb	0	; () banked
  3825  000BA4  5D7E               	subwf	sprintf@val& (0+255),w,b
  3826  000BA6  0009               	tblrd		*+
  3827  000BA8  50F5               	movf	tablat,w,c
  3828  000BAA  0100               	movlb	0	; () banked
  3829  000BAC  597F               	subwfb	(sprintf@val+1)& (0+255),w,b
  3830  000BAE  A0D8               	btfss	status,0,c
  3831  000BB0  D003               	goto	l3212
  3832                           
  3833                           ; BSR set to: 0
  3834                           
  3835                           ; BSR set to: 0
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;doprnt.c: 1307: break;
  3839  000BB2  0100               	movlb	0	; () banked
  3840  000BB4  2B80               	incf	sprintf@c& (0+255),f,b
  3841  000BB6  D7E5               	goto	l3200
  3842  000BB8                     l3212:
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;doprnt.c: 1422: {
  3846                           ;doprnt.c: 1438: if(flag & 0x03)
  3847  000BB8  C07C  F023         	movff	sprintf@flag,??_sprintf
  3848  000BBC  0E03               	movlw	3
  3849  000BBE  1623               	andwf	??_sprintf,f,c
  3850  000BC0  B4D8               	btfsc	status,2,c
  3851  000BC2  D009               	goto	l3218
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3855  000BC4  C074  FFD9         	movff	sprintf@sp,fsr2l
  3856  000BC8  C075  FFDA         	movff	sprintf@sp+1,fsr2h
  3857  000BCC  0E2D               	movlw	45
  3858  000BCE  6EDF               	movwf	indf2,c
  3859                           
  3860                           ; BSR set to: 0
  3861  000BD0  0100               	movlb	0	; () banked
  3862  000BD2  4B74               	infsnz	sprintf@sp& (0+255),f,b
  3863  000BD4  2B75               	incf	(sprintf@sp+1)& (0+255),f,b
  3864  000BD6                     l3218:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;doprnt.c: 1469: }
  3868                           ;doprnt.c: 1472: prec = c;
  3869  000BD6  C080  F07D         	movff	sprintf@c,sprintf@prec
  3870                           
  3871                           ;doprnt.c: 1474: while(prec--) {
  3872  000BDA  D02C               	goto	l3226
  3873  000BDC                     l3220:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;doprnt.c: 1478: {
  3877                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3878  000BDC  0100               	movlb	0	; () banked
  3879  000BDE  517D               	movf	sprintf@prec& (0+255),w,b
  3880  000BE0  0D02               	mullw	2
  3881  000BE2  0E01               	movlw	low _dpowers
  3882  000BE4  24F3               	addwf	prodl,w,c
  3883  000BE6  6EF6               	movwf	tblptrl,c
  3884  000BE8  0E08               	movlw	high _dpowers
  3885  000BEA  20F4               	addwfc	prodh,w,c
  3886  000BEC  6EF7               	movwf	tblptrh,c
  3887  000BEE                     	if	0	;There are less than 3 active tblptr bytes
  3888  000BEE                     	endif
  3889  000BEE  0009               	tblrd		*+
  3890  000BF0  CFF5 F019          	movff	tablat,___lwdiv@divisor
  3891  000BF4  000A               	tblrd		*-
  3892  000BF6  CFF5 F01A          	movff	tablat,___lwdiv@divisor+1
  3893  000BFA  C07E  F017         	movff	sprintf@val,___lwdiv@dividend
  3894  000BFE  C07F  F018         	movff	sprintf@val+1,___lwdiv@dividend+1
  3895  000C02  ECD6  F00A         	call	___lwdiv	;wreg free
  3896  000C06  C017  F01E         	movff	?___lwdiv,___lwmod@dividend
  3897  000C0A  C018  F01F         	movff	?___lwdiv+1,___lwmod@dividend+1
  3898  000C0E  0E00               	movlw	0
  3899  000C10  6E21               	movwf	___lwmod@divisor+1,c
  3900  000C12  0E0A               	movlw	10
  3901  000C14  6E20               	movwf	___lwmod@divisor,c
  3902  000C16  EC74  F00B         	call	___lwmod	;wreg free
  3903  000C1A  501E               	movf	?___lwmod,w,c
  3904  000C1C  0F30               	addlw	48
  3905  000C1E  0100               	movlb	0	; () banked
  3906  000C20  6F80               	movwf	sprintf@c& (0+255),b
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;doprnt.c: 1523: }
  3910                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3911  000C22  C074  FFD9         	movff	sprintf@sp,fsr2l
  3912  000C26  C075  FFDA         	movff	sprintf@sp+1,fsr2h
  3913  000C2A  C080  FFDF         	movff	sprintf@c,indf2
  3914                           
  3915                           ; BSR set to: 0
  3916  000C2E  0100               	movlb	0	; () banked
  3917  000C30  4B74               	infsnz	sprintf@sp& (0+255),f,b
  3918  000C32  2B75               	incf	(sprintf@sp+1)& (0+255),f,b
  3919  000C34                     l3226:
  3920                           
  3921                           ; BSR set to: 0
  3922  000C34  0100               	movlb	0	; () banked
  3923  000C36  077D               	decf	sprintf@prec& (0+255),f,b
  3924  000C38  0100               	movlb	0	; () banked
  3925  000C3A  297D               	incf	sprintf@prec& (0+255),w,b
  3926  000C3C  A4D8               	btfss	status,2,c
  3927  000C3E  D7CE               	goto	l3220
  3928  000C40                     l3228:
  3929                           
  3930                           ; BSR set to: 0
  3931  000C40  C076  FFF6         	movff	sprintf@f,tblptrl
  3932  000C44  C077  FFF7         	movff	sprintf@f+1,tblptrh
  3933  000C48  0100               	movlb	0	; () banked
  3934  000C4A  4B76               	infsnz	sprintf@f& (0+255),f,b
  3935  000C4C  2B77               	incf	(sprintf@f+1)& (0+255),f,b
  3936  000C4E                     	if	0	;tblptru may be non-zero
  3937  000C4E                     	endif
  3938  000C4E                     	if	0	;tblptru may be non-zero
  3939  000C4E                     	endif
  3940  000C4E  0008               	tblrd		*
  3941  000C50  CFF5 F080          	movff	tablat,sprintf@c
  3942  000C54  0100               	movlb	0	; () banked
  3943  000C56  5180               	movf	sprintf@c& (0+255),w,b
  3944  000C58  A4D8               	btfss	status,2,c
  3945  000C5A  D751               	goto	l3176
  3946  000C5C                     l3230:
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;doprnt.c: 1538: *sp = 0;
  3950  000C5C  C074  FFD9         	movff	sprintf@sp,fsr2l
  3951  000C60  C075  FFDA         	movff	sprintf@sp+1,fsr2h
  3952  000C64  0E00               	movlw	0
  3953  000C66  6EDF               	movwf	indf2,c
  3954  000C68  0012               	return	
  3955  000C6A                     __end_of_sprintf:
  3956                           	opt stack 0
  3957                           tblptru	equ	0xFF8
  3958                           tblptrh	equ	0xFF7
  3959                           tblptrl	equ	0xFF6
  3960                           tablat	equ	0xFF5
  3961                           prodh	equ	0xFF4
  3962                           prodl	equ	0xFF3
  3963                           intcon	equ	0xFF2
  3964                           postinc0	equ	0xFEE
  3965                           wreg	equ	0xFE8
  3966                           indf1	equ	0xFE7
  3967                           postdec1	equ	0xFE5
  3968                           fsr1h	equ	0xFE2
  3969                           fsr1l	equ	0xFE1
  3970                           indf2	equ	0xFDF
  3971                           postinc2	equ	0xFDE
  3972                           postdec2	equ	0xFDD
  3973                           fsr2h	equ	0xFDA
  3974                           fsr2l	equ	0xFD9
  3975                           status	equ	0xFD8
  3976                           
  3977 ;; *************** function ___lwmod *****************
  3978 ;; Defined at:
  3979 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;  dividend        2   29[COMRAM] unsigned int 
  3982 ;;  divisor         2   31[COMRAM] unsigned int 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  counter         1   33[COMRAM] unsigned char 
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  2   29[COMRAM] unsigned int 
  3987 ;; Registers used:
  3988 ;;		wreg, status,2, status,0
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3994 ;;      Params:         4       0       0       0       0       0       0       0       0
  3995 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3996 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3997 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3998 ;;Total ram usage:        5 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    6
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_sprintf
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text17
  4009  0016E8                     __ptext17:
  4010                           	opt stack 0
  4011  0016E8                     ___lwmod:
  4012                           	opt stack 20
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;incstack = 0
  4016  0016E8  5020               	movf	___lwmod@divisor,w,c
  4017  0016EA  1021               	iorwf	___lwmod@divisor+1,w,c
  4018  0016EC  B4D8               	btfsc	status,2,c
  4019  0016EE  D018               	goto	l853
  4020  0016F0  0E01               	movlw	1
  4021  0016F2  6E22               	movwf	___lwmod@counter,c
  4022  0016F4  D004               	goto	l3164
  4023  0016F6                     l3162:
  4024  0016F6  90D8               	bcf	status,0,c
  4025  0016F8  3620               	rlcf	___lwmod@divisor,f,c
  4026  0016FA  3621               	rlcf	___lwmod@divisor+1,f,c
  4027  0016FC  2A22               	incf	___lwmod@counter,f,c
  4028  0016FE                     l3164:
  4029  0016FE  AE21               	btfss	___lwmod@divisor+1,7,c
  4030  001700  D7FA               	goto	l3162
  4031  001702                     l3166:
  4032  001702  5020               	movf	___lwmod@divisor,w,c
  4033  001704  5C1E               	subwf	___lwmod@dividend,w,c
  4034  001706  5021               	movf	___lwmod@divisor+1,w,c
  4035  001708  581F               	subwfb	___lwmod@dividend+1,w,c
  4036  00170A  A0D8               	btfss	status,0,c
  4037  00170C  D004               	goto	l3170
  4038  00170E  5020               	movf	___lwmod@divisor,w,c
  4039  001710  5E1E               	subwf	___lwmod@dividend,f,c
  4040  001712  5021               	movf	___lwmod@divisor+1,w,c
  4041  001714  5A1F               	subwfb	___lwmod@dividend+1,f,c
  4042  001716                     l3170:
  4043  001716  90D8               	bcf	status,0,c
  4044  001718  3221               	rrcf	___lwmod@divisor+1,f,c
  4045  00171A  3220               	rrcf	___lwmod@divisor,f,c
  4046  00171C  2E22               	decfsz	___lwmod@counter,f,c
  4047  00171E  D7F1               	goto	l3166
  4048  001720                     l853:
  4049  001720  C01E  F01E         	movff	___lwmod@dividend,?___lwmod
  4050  001724  C01F  F01F         	movff	___lwmod@dividend+1,?___lwmod+1
  4051  001728  0012               	return		;funcret
  4052  00172A                     __end_of___lwmod:
  4053                           	opt stack 0
  4054                           tblptru	equ	0xFF8
  4055                           tblptrh	equ	0xFF7
  4056                           tblptrl	equ	0xFF6
  4057                           tablat	equ	0xFF5
  4058                           prodh	equ	0xFF4
  4059                           prodl	equ	0xFF3
  4060                           intcon	equ	0xFF2
  4061                           postinc0	equ	0xFEE
  4062                           wreg	equ	0xFE8
  4063                           indf1	equ	0xFE7
  4064                           postdec1	equ	0xFE5
  4065                           fsr1h	equ	0xFE2
  4066                           fsr1l	equ	0xFE1
  4067                           indf2	equ	0xFDF
  4068                           postinc2	equ	0xFDE
  4069                           postdec2	equ	0xFDD
  4070                           fsr2h	equ	0xFDA
  4071                           fsr2l	equ	0xFD9
  4072                           status	equ	0xFD8
  4073                           
  4074 ;; *************** function ___lwdiv *****************
  4075 ;; Defined at:
  4076 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  dividend        2   22[COMRAM] unsigned int 
  4079 ;;  divisor         2   24[COMRAM] unsigned int 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  quotient        2   27[COMRAM] unsigned int 
  4082 ;;  counter         1   26[COMRAM] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  2   22[COMRAM] unsigned int 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4092 ;;      Params:         4       0       0       0       0       0       0       0       0
  4093 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4095 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4096 ;;Total ram usage:        7 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    6
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_sprintf
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text18
  4107  0015AC                     __ptext18:
  4108                           	opt stack 0
  4109  0015AC                     ___lwdiv:
  4110                           	opt stack 20
  4111                           
  4112                           ;incstack = 0
  4113  0015AC  0E00               	movlw	0
  4114  0015AE  6E1D               	movwf	___lwdiv@quotient+1,c
  4115  0015B0  0E00               	movlw	0
  4116  0015B2  6E1C               	movwf	___lwdiv@quotient,c
  4117  0015B4  5019               	movf	___lwdiv@divisor,w,c
  4118  0015B6  101A               	iorwf	___lwdiv@divisor+1,w,c
  4119  0015B8  B4D8               	btfsc	status,2,c
  4120  0015BA  D01C               	goto	l843
  4121  0015BC  0E01               	movlw	1
  4122  0015BE  6E1B               	movwf	___lwdiv@counter,c
  4123  0015C0  D004               	goto	l3144
  4124  0015C2                     l3142:
  4125  0015C2  90D8               	bcf	status,0,c
  4126  0015C4  3619               	rlcf	___lwdiv@divisor,f,c
  4127  0015C6  361A               	rlcf	___lwdiv@divisor+1,f,c
  4128  0015C8  2A1B               	incf	___lwdiv@counter,f,c
  4129  0015CA                     l3144:
  4130  0015CA  AE1A               	btfss	___lwdiv@divisor+1,7,c
  4131  0015CC  D7FA               	goto	l3142
  4132  0015CE                     l3146:
  4133  0015CE  90D8               	bcf	status,0,c
  4134  0015D0  361C               	rlcf	___lwdiv@quotient,f,c
  4135  0015D2  361D               	rlcf	___lwdiv@quotient+1,f,c
  4136  0015D4  5019               	movf	___lwdiv@divisor,w,c
  4137  0015D6  5C17               	subwf	___lwdiv@dividend,w,c
  4138  0015D8  501A               	movf	___lwdiv@divisor+1,w,c
  4139  0015DA  5818               	subwfb	___lwdiv@dividend+1,w,c
  4140  0015DC  A0D8               	btfss	status,0,c
  4141  0015DE  D005               	goto	l3154
  4142  0015E0  5019               	movf	___lwdiv@divisor,w,c
  4143  0015E2  5E17               	subwf	___lwdiv@dividend,f,c
  4144  0015E4  501A               	movf	___lwdiv@divisor+1,w,c
  4145  0015E6  5A18               	subwfb	___lwdiv@dividend+1,f,c
  4146  0015E8  801C               	bsf	___lwdiv@quotient,0,c
  4147  0015EA                     l3154:
  4148  0015EA  90D8               	bcf	status,0,c
  4149  0015EC  321A               	rrcf	___lwdiv@divisor+1,f,c
  4150  0015EE  3219               	rrcf	___lwdiv@divisor,f,c
  4151  0015F0  2E1B               	decfsz	___lwdiv@counter,f,c
  4152  0015F2  D7ED               	goto	l3146
  4153  0015F4                     l843:
  4154  0015F4  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
  4155  0015F8  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4156  0015FC  0012               	return		;funcret
  4157  0015FE                     __end_of___lwdiv:
  4158                           	opt stack 0
  4159                           tblptru	equ	0xFF8
  4160                           tblptrh	equ	0xFF7
  4161                           tblptrl	equ	0xFF6
  4162                           tablat	equ	0xFF5
  4163                           prodh	equ	0xFF4
  4164                           prodl	equ	0xFF3
  4165                           intcon	equ	0xFF2
  4166                           postinc0	equ	0xFEE
  4167                           wreg	equ	0xFE8
  4168                           indf1	equ	0xFE7
  4169                           postdec1	equ	0xFE5
  4170                           fsr1h	equ	0xFE2
  4171                           fsr1l	equ	0xFE1
  4172                           indf2	equ	0xFDF
  4173                           postinc2	equ	0xFDE
  4174                           postdec2	equ	0xFDD
  4175                           fsr2h	equ	0xFDA
  4176                           fsr2l	equ	0xFD9
  4177                           status	equ	0xFD8
  4178                           
  4179 ;; *************** function _acionaDespertador *****************
  4180 ;; Defined at:
  4181 ;;		line 245 in file "main.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4195 ;;      Params:         0       0       0       0       0       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4198 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    6
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_atualiza_Tela
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text19
  4210  00190A                     __ptext19:
  4211                           	opt stack 0
  4212  00190A                     _acionaDespertador:
  4213                           	opt stack 22
  4214                           
  4215                           ;main.c: 246: if(virouDia){
  4216                           
  4217                           ;incstack = 0
  4218  00190A  5048               	movf	_virouDia,w,c
  4219  00190C  B4D8               	btfsc	status,2,c
  4220  00190E  0012               	return	
  4221                           
  4222                           ;main.c: 247: if((data_horario.horario[0] == horarioDespertador[0]) && (data_horario.hor
      +                          ario[1] == horarioDespertador[1]) && (data_horario.horario[3] == horarioDespertador[3]) 
      +                          && (data_horario.horario[4] == horarioDespertador[4])){
  4223  001910  503F               	movf	_horarioDespertador,w,c
  4224  001912  0100               	movlb	0	; () banked
  4225  001914  1960               	xorwf	_data_horario& (0+255),w,b
  4226  001916  A4D8               	btfss	status,2,c
  4227  001918  0012               	return	
  4228                           
  4229                           ; BSR set to: 0
  4230  00191A  5040               	movf	_horarioDespertador+1,w,c
  4231  00191C  0100               	movlb	0	; () banked
  4232  00191E  1961               	xorwf	(_data_horario+1)& (0+255),w,b
  4233  001920  A4D8               	btfss	status,2,c
  4234  001922  0012               	return	
  4235                           
  4236                           ; BSR set to: 0
  4237  001924  5042               	movf	_horarioDespertador+3,w,c
  4238  001926  0100               	movlb	0	; () banked
  4239  001928  1963               	xorwf	(_data_horario+3)& (0+255),w,b
  4240  00192A  A4D8               	btfss	status,2,c
  4241  00192C  0012               	return	
  4242                           
  4243                           ; BSR set to: 0
  4244  00192E  5043               	movf	_horarioDespertador+4,w,c
  4245  001930  0100               	movlb	0	; () banked
  4246  001932  1964               	xorwf	(_data_horario+4)& (0+255),w,b
  4247  001934  A4D8               	btfss	status,2,c
  4248  001936  0012               	return	
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;main.c: 248: flagDespertadorLigado = 1;
  4252  001938  0E01               	movlw	1
  4253  00193A  6E2C               	movwf	_flagDespertadorLigado,c
  4254                           
  4255                           ; BSR set to: 0
  4256  00193C  0012               	return	
  4257  00193E                     __end_of_acionaDespertador:
  4258                           	opt stack 0
  4259                           tblptru	equ	0xFF8
  4260                           tblptrh	equ	0xFF7
  4261                           tblptrl	equ	0xFF6
  4262                           tablat	equ	0xFF5
  4263                           prodh	equ	0xFF4
  4264                           prodl	equ	0xFF3
  4265                           intcon	equ	0xFF2
  4266                           postinc0	equ	0xFEE
  4267                           wreg	equ	0xFE8
  4268                           indf1	equ	0xFE7
  4269                           postdec1	equ	0xFE5
  4270                           fsr1h	equ	0xFE2
  4271                           fsr1l	equ	0xFE1
  4272                           indf2	equ	0xFDF
  4273                           postinc2	equ	0xFDE
  4274                           postdec2	equ	0xFDD
  4275                           fsr2h	equ	0xFDA
  4276                           fsr2l	equ	0xFD9
  4277                           status	equ	0xFD8
  4278                           
  4279 ;; *************** function _atoi *****************
  4280 ;; Defined at:
  4281 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atoi.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  s               2   28[COMRAM] PTR const unsigned char 
  4284 ;;		 -> pegaHoraData(3), 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  a               2   33[COMRAM] int 
  4287 ;;  sign            1   32[COMRAM] unsigned char 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  2   28[COMRAM] int 
  4290 ;; Registers used:
  4291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4297 ;;      Params:         2       0       0       0       0       0       0       0       0
  4298 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4299 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4300 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4301 ;;Total ram usage:        7 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    7
  4304 ;; This function calls:
  4305 ;;		___wmul
  4306 ;;		_isdigit
  4307 ;; This function is called by:
  4308 ;;		_trataComando
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text20
  4313  0010BC                     __ptext20:
  4314                           	opt stack 0
  4315  0010BC                     _atoi:
  4316                           	opt stack 21
  4317                           
  4318                           ;incstack = 0
  4319  0010BC  D002               	goto	l3506
  4320  0010BE                     l3504:
  4321  0010BE  4A1D               	infsnz	atoi@s,f,c
  4322  0010C0  2A1E               	incf	atoi@s+1,f,c
  4323  0010C2                     l3506:
  4324  0010C2  C01D  FFD9         	movff	atoi@s,fsr2l
  4325  0010C6  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4326  0010CA  0E20               	movlw	32
  4327  0010CC  18DE               	xorwf	postinc2,w,c
  4328  0010CE  B4D8               	btfsc	status,2,c
  4329  0010D0  D7F6               	goto	l3504
  4330  0010D2  C01D  FFD9         	movff	atoi@s,fsr2l
  4331  0010D6  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4332  0010DA  0E09               	movlw	9
  4333  0010DC  18DE               	xorwf	postinc2,w,c
  4334  0010DE  B4D8               	btfsc	status,2,c
  4335  0010E0  D7EE               	goto	l3504
  4336  0010E2  0E00               	movlw	0
  4337  0010E4  6E23               	movwf	atoi@a+1,c
  4338  0010E6  0E00               	movlw	0
  4339  0010E8  6E22               	movwf	atoi@a,c
  4340  0010EA  0E00               	movlw	0
  4341  0010EC  6E21               	movwf	atoi@sign,c
  4342  0010EE  C01D  FFD9         	movff	atoi@s,fsr2l
  4343  0010F2  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4344  0010F6  0E2D               	movlw	45
  4345  0010F8  18DE               	xorwf	postinc2,w,c
  4346  0010FA  A4D8               	btfss	status,2,c
  4347  0010FC  D002               	goto	l3516
  4348  0010FE  2A21               	incf	atoi@sign,f,c
  4349  001100  D024               	goto	l3522
  4350  001102                     l3516:
  4351  001102  C01D  FFD9         	movff	atoi@s,fsr2l
  4352  001106  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4353  00110A  0E2B               	movlw	43
  4354  00110C  18DE               	xorwf	postinc2,w,c
  4355  00110E  A4D8               	btfss	status,2,c
  4356  001110  D01E               	goto	l3524
  4357  001112  D01B               	goto	l3522
  4358  001114                     l3520:
  4359  001114  C022  F017         	movff	atoi@a,___wmul@multiplier
  4360  001118  C023  F018         	movff	atoi@a+1,___wmul@multiplier+1
  4361  00111C  0E00               	movlw	0
  4362  00111E  6E1A               	movwf	___wmul@multiplicand+1,c
  4363  001120  0E0A               	movlw	10
  4364  001122  6E19               	movwf	___wmul@multiplicand,c
  4365  001124  ECCB  F00C         	call	___wmul	;wreg free
  4366  001128  C01D  FFD9         	movff	atoi@s,fsr2l
  4367  00112C  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4368  001130  50DF               	movf	indf2,w,c
  4369  001132  6E1F               	movwf	??_atoi& (0+255),c
  4370  001134  6A20               	clrf	(??_atoi+1)& (0+255),c
  4371  001136  5017               	movf	?___wmul,w,c
  4372  001138  261F               	addwf	??_atoi,f,c
  4373  00113A  5018               	movf	?___wmul+1,w,c
  4374  00113C  2220               	addwfc	??_atoi+1,f,c
  4375  00113E  0ED0               	movlw	208
  4376  001140  241F               	addwf	??_atoi,w,c
  4377  001142  6E22               	movwf	atoi@a,c
  4378  001144  0EFF               	movlw	255
  4379  001146  2020               	addwfc	??_atoi+1,w,c
  4380  001148  6E23               	movwf	atoi@a+1,c
  4381  00114A                     l3522:
  4382  00114A  4A1D               	infsnz	atoi@s,f,c
  4383  00114C  2A1E               	incf	atoi@s+1,f,c
  4384  00114E                     l3524:
  4385  00114E  C01D  FFD9         	movff	atoi@s,fsr2l
  4386  001152  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4387  001156  50DF               	movf	indf2,w,c
  4388  001158  ECDE  F00C         	call	_isdigit
  4389  00115C  B0D8               	btfsc	status,0,c
  4390  00115E  D7DA               	goto	l3520
  4391  001160  5021               	movf	atoi@sign,w,c
  4392  001162  B4D8               	btfsc	status,2,c
  4393  001164  D00D               	goto	l572
  4394  001166  C022  F01F         	movff	atoi@a,??_atoi
  4395  00116A  C023  F020         	movff	atoi@a+1,??_atoi+1
  4396  00116E  1E1F               	comf	??_atoi,f,c
  4397  001170  1E20               	comf	??_atoi+1,f,c
  4398  001172  4A1F               	infsnz	??_atoi,f,c
  4399  001174  2A20               	incf	??_atoi+1,f,c
  4400  001176  C01F  F01D         	movff	??_atoi,?_atoi
  4401  00117A  C020  F01E         	movff	??_atoi+1,?_atoi+1
  4402  00117E  0012               	return	
  4403  001180                     l572:
  4404  001180  C022  F01D         	movff	atoi@a,?_atoi
  4405  001184  C023  F01E         	movff	atoi@a+1,?_atoi+1
  4406  001188  0012               	return		;funcret
  4407  00118A                     __end_of_atoi:
  4408                           	opt stack 0
  4409                           tblptru	equ	0xFF8
  4410                           tblptrh	equ	0xFF7
  4411                           tblptrl	equ	0xFF6
  4412                           tablat	equ	0xFF5
  4413                           prodh	equ	0xFF4
  4414                           prodl	equ	0xFF3
  4415                           intcon	equ	0xFF2
  4416                           postinc0	equ	0xFEE
  4417                           wreg	equ	0xFE8
  4418                           indf1	equ	0xFE7
  4419                           postdec1	equ	0xFE5
  4420                           fsr1h	equ	0xFE2
  4421                           fsr1l	equ	0xFE1
  4422                           indf2	equ	0xFDF
  4423                           postinc2	equ	0xFDE
  4424                           postdec2	equ	0xFDD
  4425                           fsr2h	equ	0xFDA
  4426                           fsr2l	equ	0xFD9
  4427                           status	equ	0xFD8
  4428                           
  4429 ;; *************** function _isdigit *****************
  4430 ;; Defined at:
  4431 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  c               1    wreg     unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  c               1   24[COMRAM] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;		None               void
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4445 ;;      Params:         0       0       0       0       0       0       0       0       0
  4446 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4447 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4448 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4449 ;;Total ram usage:        3 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    6
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_atoi
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text21
  4460  0019BC                     __ptext21:
  4461                           	opt stack 0
  4462  0019BC                     _isdigit:
  4463                           	opt stack 21
  4464                           
  4465                           ;incstack = 0
  4466                           ;isdigit@c stored from wreg
  4467  0019BC  6E19               	movwf	isdigit@c,c
  4468  0019BE  0E00               	movlw	0
  4469  0019C0  6E18               	movwf	_isdigit$1098,c
  4470  0019C2  0E3A               	movlw	58
  4471  0019C4  6019               	cpfslt	isdigit@c,c
  4472  0019C6  D005               	goto	l3406
  4473  0019C8  0E2F               	movlw	47
  4474  0019CA  6419               	cpfsgt	isdigit@c,c
  4475  0019CC  D002               	goto	l3406
  4476  0019CE  0E01               	movlw	1
  4477  0019D0  6E18               	movwf	_isdigit$1098,c
  4478  0019D2                     l3406:
  4479  0019D2  C018  F017         	movff	_isdigit$1098,??_isdigit
  4480  0019D6  3017               	rrcf	??_isdigit,w,c
  4481  0019D8  0012               	return	
  4482  0019DA                     __end_of_isdigit:
  4483                           	opt stack 0
  4484                           tblptru	equ	0xFF8
  4485                           tblptrh	equ	0xFF7
  4486                           tblptrl	equ	0xFF6
  4487                           tablat	equ	0xFF5
  4488                           prodh	equ	0xFF4
  4489                           prodl	equ	0xFF3
  4490                           intcon	equ	0xFF2
  4491                           postinc0	equ	0xFEE
  4492                           wreg	equ	0xFE8
  4493                           indf1	equ	0xFE7
  4494                           postdec1	equ	0xFE5
  4495                           fsr1h	equ	0xFE2
  4496                           fsr1l	equ	0xFE1
  4497                           indf2	equ	0xFDF
  4498                           postinc2	equ	0xFDE
  4499                           postdec2	equ	0xFDD
  4500                           fsr2h	equ	0xFDA
  4501                           fsr2l	equ	0xFD9
  4502                           status	equ	0xFD8
  4503                           
  4504 ;; *************** function ___wmul *****************
  4505 ;; Defined at:
  4506 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  multiplier      2   22[COMRAM] unsigned int 
  4509 ;;  multiplicand    2   24[COMRAM] unsigned int 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  product         2   26[COMRAM] unsigned int 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  2   22[COMRAM] unsigned int 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0, prodl, prodh
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4521 ;;      Params:         4       0       0       0       0       0       0       0       0
  4522 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4524 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4525 ;;Total ram usage:        6 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    6
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_atoi
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text22
  4536  001996                     __ptext22:
  4537                           	opt stack 0
  4538  001996                     ___wmul:
  4539                           	opt stack 21
  4540                           
  4541                           ;incstack = 0
  4542  001996  5017               	movf	___wmul@multiplier,w,c
  4543  001998  0219               	mulwf	___wmul@multiplicand,c
  4544  00199A  CFF3 F01B          	movff	prodl,___wmul@product
  4545  00199E  CFF4 F01C          	movff	prodh,___wmul@product+1
  4546  0019A2  5017               	movf	___wmul@multiplier,w,c
  4547  0019A4  021A               	mulwf	___wmul@multiplicand+1,c
  4548  0019A6  50F3               	movf	prodl,w,c
  4549  0019A8  261C               	addwf	___wmul@product+1,f,c
  4550  0019AA  5018               	movf	___wmul@multiplier+1,w,c
  4551  0019AC  0219               	mulwf	___wmul@multiplicand,c
  4552  0019AE  50F3               	movf	prodl,w,c
  4553  0019B0  261C               	addwf	___wmul@product+1,f,c
  4554  0019B2  C01B  F017         	movff	___wmul@product,?___wmul
  4555  0019B6  C01C  F018         	movff	___wmul@product+1,?___wmul+1
  4556  0019BA  0012               	return	
  4557  0019BC                     __end_of___wmul:
  4558                           	opt stack 0
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           prodh	equ	0xFF4
  4564                           prodl	equ	0xFF3
  4565                           intcon	equ	0xFF2
  4566                           postinc0	equ	0xFEE
  4567                           wreg	equ	0xFE8
  4568                           indf1	equ	0xFE7
  4569                           postdec1	equ	0xFE5
  4570                           fsr1h	equ	0xFE2
  4571                           fsr1l	equ	0xFE1
  4572                           indf2	equ	0xFDF
  4573                           postinc2	equ	0xFDE
  4574                           postdec2	equ	0xFDD
  4575                           fsr2h	equ	0xFDA
  4576                           fsr2l	equ	0xFD9
  4577                           status	equ	0xFD8
  4578                           
  4579 ;; *************** function ___awmod *****************
  4580 ;; Defined at:
  4581 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  dividend        2   22[COMRAM] int 
  4584 ;;  divisor         2   24[COMRAM] int 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  sign            1   27[COMRAM] unsigned char 
  4587 ;;  counter         1   26[COMRAM] unsigned char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  2   22[COMRAM] int 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4597 ;;      Params:         4       0       0       0       0       0       0       0       0
  4598 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4600 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4601 ;;Total ram usage:        6 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    6
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_verificaAnoBissexto
  4608 ;;		_trataComando
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text23
  4613  0013D0                     __ptext23:
  4614                           	opt stack 0
  4615  0013D0                     ___awmod:
  4616                           	opt stack 22
  4617                           
  4618                           ;incstack = 0
  4619  0013D0  0E00               	movlw	0
  4620  0013D2  6E1C               	movwf	___awmod@sign,c
  4621  0013D4  AE18               	btfss	___awmod@dividend+1,7,c
  4622  0013D6  D006               	goto	l3602
  4623  0013D8  6C17               	negf	___awmod@dividend,c
  4624  0013DA  1E18               	comf	___awmod@dividend+1,f,c
  4625  0013DC  B0D8               	btfsc	status,0,c
  4626  0013DE  2A18               	incf	___awmod@dividend+1,f,c
  4627  0013E0  0E01               	movlw	1
  4628  0013E2  6E1C               	movwf	___awmod@sign,c
  4629  0013E4                     l3602:
  4630  0013E4  AE1A               	btfss	___awmod@divisor+1,7,c
  4631  0013E6  D004               	goto	l3606
  4632  0013E8  6C19               	negf	___awmod@divisor,c
  4633  0013EA  1E1A               	comf	___awmod@divisor+1,f,c
  4634  0013EC  B0D8               	btfsc	status,0,c
  4635  0013EE  2A1A               	incf	___awmod@divisor+1,f,c
  4636  0013F0                     l3606:
  4637  0013F0  5019               	movf	___awmod@divisor,w,c
  4638  0013F2  101A               	iorwf	___awmod@divisor+1,w,c
  4639  0013F4  B4D8               	btfsc	status,2,c
  4640  0013F6  D018               	goto	l3622
  4641  0013F8  0E01               	movlw	1
  4642  0013FA  6E1B               	movwf	___awmod@counter,c
  4643  0013FC  D004               	goto	l3612
  4644  0013FE                     l3610:
  4645  0013FE  90D8               	bcf	status,0,c
  4646  001400  3619               	rlcf	___awmod@divisor,f,c
  4647  001402  361A               	rlcf	___awmod@divisor+1,f,c
  4648  001404  2A1B               	incf	___awmod@counter,f,c
  4649  001406                     l3612:
  4650  001406  AE1A               	btfss	___awmod@divisor+1,7,c
  4651  001408  D7FA               	goto	l3610
  4652  00140A                     l3614:
  4653  00140A  5019               	movf	___awmod@divisor,w,c
  4654  00140C  5C17               	subwf	___awmod@dividend,w,c
  4655  00140E  501A               	movf	___awmod@divisor+1,w,c
  4656  001410  5818               	subwfb	___awmod@dividend+1,w,c
  4657  001412  A0D8               	btfss	status,0,c
  4658  001414  D004               	goto	l3618
  4659  001416  5019               	movf	___awmod@divisor,w,c
  4660  001418  5E17               	subwf	___awmod@dividend,f,c
  4661  00141A  501A               	movf	___awmod@divisor+1,w,c
  4662  00141C  5A18               	subwfb	___awmod@dividend+1,f,c
  4663  00141E                     l3618:
  4664  00141E  90D8               	bcf	status,0,c
  4665  001420  321A               	rrcf	___awmod@divisor+1,f,c
  4666  001422  3219               	rrcf	___awmod@divisor,f,c
  4667  001424  2E1B               	decfsz	___awmod@counter,f,c
  4668  001426  D7F1               	goto	l3614
  4669  001428                     l3622:
  4670  001428  501C               	movf	___awmod@sign,w,c
  4671  00142A  B4D8               	btfsc	status,2,c
  4672  00142C  D004               	goto	l3626
  4673  00142E  6C17               	negf	___awmod@dividend,c
  4674  001430  1E18               	comf	___awmod@dividend+1,f,c
  4675  001432  B0D8               	btfsc	status,0,c
  4676  001434  2A18               	incf	___awmod@dividend+1,f,c
  4677  001436                     l3626:
  4678  001436  C017  F017         	movff	___awmod@dividend,?___awmod
  4679  00143A  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
  4680  00143E  0012               	return	
  4681  001440                     __end_of___awmod:
  4682                           	opt stack 0
  4683                           tblptru	equ	0xFF8
  4684                           tblptrh	equ	0xFF7
  4685                           tblptrl	equ	0xFF6
  4686                           tablat	equ	0xFF5
  4687                           prodh	equ	0xFF4
  4688                           prodl	equ	0xFF3
  4689                           intcon	equ	0xFF2
  4690                           postinc0	equ	0xFEE
  4691                           wreg	equ	0xFE8
  4692                           indf1	equ	0xFE7
  4693                           postdec1	equ	0xFE5
  4694                           fsr1h	equ	0xFE2
  4695                           fsr1l	equ	0xFE1
  4696                           indf2	equ	0xFDF
  4697                           postinc2	equ	0xFDE
  4698                           postdec2	equ	0xFDD
  4699                           fsr2h	equ	0xFDA
  4700                           fsr2l	equ	0xFD9
  4701                           status	equ	0xFD8
  4702                           
  4703 ;; *************** function ___awdiv *****************
  4704 ;; Defined at:
  4705 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  dividend        2   22[COMRAM] int 
  4708 ;;  divisor         2   24[COMRAM] int 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  quotient        2   28[COMRAM] int 
  4711 ;;  sign            1   27[COMRAM] unsigned char 
  4712 ;;  counter         1   26[COMRAM] unsigned char 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  2   22[COMRAM] int 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4722 ;;      Params:         4       0       0       0       0       0       0       0       0
  4723 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4725 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4726 ;;Total ram usage:        8 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    6
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_trataComando
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	text24
  4737  0012CC                     __ptext24:
  4738                           	opt stack 0
  4739  0012CC                     ___awdiv:
  4740                           	opt stack 22
  4741                           
  4742                           ;incstack = 0
  4743  0012CC  0E00               	movlw	0
  4744  0012CE  6E1C               	movwf	___awdiv@sign,c
  4745  0012D0  AE1A               	btfss	___awdiv@divisor+1,7,c
  4746  0012D2  D006               	goto	l3558
  4747  0012D4  6C19               	negf	___awdiv@divisor,c
  4748  0012D6  1E1A               	comf	___awdiv@divisor+1,f,c
  4749  0012D8  B0D8               	btfsc	status,0,c
  4750  0012DA  2A1A               	incf	___awdiv@divisor+1,f,c
  4751  0012DC  0E01               	movlw	1
  4752  0012DE  6E1C               	movwf	___awdiv@sign,c
  4753  0012E0                     l3558:
  4754  0012E0  AE18               	btfss	___awdiv@dividend+1,7,c
  4755  0012E2  D006               	goto	l3564
  4756  0012E4  6C17               	negf	___awdiv@dividend,c
  4757  0012E6  1E18               	comf	___awdiv@dividend+1,f,c
  4758  0012E8  B0D8               	btfsc	status,0,c
  4759  0012EA  2A18               	incf	___awdiv@dividend+1,f,c
  4760  0012EC  0E01               	movlw	1
  4761  0012EE  1A1C               	xorwf	___awdiv@sign,f,c
  4762  0012F0                     l3564:
  4763  0012F0  0E00               	movlw	0
  4764  0012F2  6E1E               	movwf	___awdiv@quotient+1,c
  4765  0012F4  0E00               	movlw	0
  4766  0012F6  6E1D               	movwf	___awdiv@quotient,c
  4767  0012F8  5019               	movf	___awdiv@divisor,w,c
  4768  0012FA  101A               	iorwf	___awdiv@divisor+1,w,c
  4769  0012FC  B4D8               	btfsc	status,2,c
  4770  0012FE  D01C               	goto	l3586
  4771  001300  0E01               	movlw	1
  4772  001302  6E1B               	movwf	___awdiv@counter,c
  4773  001304  D004               	goto	l3572
  4774  001306                     l3570:
  4775  001306  90D8               	bcf	status,0,c
  4776  001308  3619               	rlcf	___awdiv@divisor,f,c
  4777  00130A  361A               	rlcf	___awdiv@divisor+1,f,c
  4778  00130C  2A1B               	incf	___awdiv@counter,f,c
  4779  00130E                     l3572:
  4780  00130E  AE1A               	btfss	___awdiv@divisor+1,7,c
  4781  001310  D7FA               	goto	l3570
  4782  001312                     l3574:
  4783  001312  90D8               	bcf	status,0,c
  4784  001314  361D               	rlcf	___awdiv@quotient,f,c
  4785  001316  361E               	rlcf	___awdiv@quotient+1,f,c
  4786  001318  5019               	movf	___awdiv@divisor,w,c
  4787  00131A  5C17               	subwf	___awdiv@dividend,w,c
  4788  00131C  501A               	movf	___awdiv@divisor+1,w,c
  4789  00131E  5818               	subwfb	___awdiv@dividend+1,w,c
  4790  001320  A0D8               	btfss	status,0,c
  4791  001322  D005               	goto	l3582
  4792  001324  5019               	movf	___awdiv@divisor,w,c
  4793  001326  5E17               	subwf	___awdiv@dividend,f,c
  4794  001328  501A               	movf	___awdiv@divisor+1,w,c
  4795  00132A  5A18               	subwfb	___awdiv@dividend+1,f,c
  4796  00132C  801D               	bsf	___awdiv@quotient,0,c
  4797  00132E                     l3582:
  4798  00132E  90D8               	bcf	status,0,c
  4799  001330  321A               	rrcf	___awdiv@divisor+1,f,c
  4800  001332  3219               	rrcf	___awdiv@divisor,f,c
  4801  001334  2E1B               	decfsz	___awdiv@counter,f,c
  4802  001336  D7ED               	goto	l3574
  4803  001338                     l3586:
  4804  001338  501C               	movf	___awdiv@sign,w,c
  4805  00133A  B4D8               	btfsc	status,2,c
  4806  00133C  D004               	goto	l3590
  4807  00133E  6C1D               	negf	___awdiv@quotient,c
  4808  001340  1E1E               	comf	___awdiv@quotient+1,f,c
  4809  001342  B0D8               	btfsc	status,0,c
  4810  001344  2A1E               	incf	___awdiv@quotient+1,f,c
  4811  001346                     l3590:
  4812  001346  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  4813  00134A  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  4814  00134E  0012               	return	
  4815  001350                     __end_of___awdiv:
  4816                           	opt stack 0
  4817                           tblptru	equ	0xFF8
  4818                           tblptrh	equ	0xFF7
  4819                           tblptrl	equ	0xFF6
  4820                           tablat	equ	0xFF5
  4821                           prodh	equ	0xFF4
  4822                           prodl	equ	0xFF3
  4823                           intcon	equ	0xFF2
  4824                           postinc0	equ	0xFEE
  4825                           wreg	equ	0xFE8
  4826                           indf1	equ	0xFE7
  4827                           postdec1	equ	0xFE5
  4828                           fsr1h	equ	0xFE2
  4829                           fsr1l	equ	0xFE1
  4830                           indf2	equ	0xFDF
  4831                           postinc2	equ	0xFDE
  4832                           postdec2	equ	0xFDD
  4833                           fsr2h	equ	0xFDA
  4834                           fsr2l	equ	0xFD9
  4835                           status	equ	0xFD8
  4836                           
  4837 ;; *************** function _enviaByte *****************
  4838 ;; Defined at:
  4839 ;;		line 389 in file "main.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  BYTE            1    wreg     unsigned char 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  BYTE            1   22[COMRAM] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4853 ;;      Params:         0       0       0       0       0       0       0       0       0
  4854 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4856 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4857 ;;Total ram usage:        1 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; Hardware stack levels required when called:    6
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_maquinaEstado
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text25
  4868  0019DA                     __ptext25:
  4869                           	opt stack 0
  4870  0019DA                     _enviaByte:
  4871                           	opt stack 23
  4872                           
  4873                           ;incstack = 0
  4874                           ;enviaByte@BYTE stored from wreg
  4875  0019DA  6E17               	movwf	enviaByte@BYTE,c
  4876  0019DC                     l214:
  4877  0019DC  A89E               	btfss	3998,4,c	;volatile
  4878  0019DE  D7FE               	goto	l214
  4879                           
  4880                           ;main.c: 393: TXREG = BYTE;
  4881  0019E0  C017  FFAD         	movff	enviaByte@BYTE,4013	;volatile
  4882                           
  4883                           ;main.c: 395: if(BYTE==0x05){
  4884  0019E4  0E05               	movlw	5
  4885  0019E6  1817               	xorwf	enviaByte@BYTE,w,c
  4886  0019E8  A4D8               	btfss	status,2,c
  4887  0019EA  D003               	goto	l3792
  4888                           
  4889                           ;main.c: 396: estado = 2;
  4890  0019EC  0E02               	movlw	2
  4891  0019EE  6E30               	movwf	_estado,c
  4892                           
  4893                           ;main.c: 397: }
  4894  0019F0  0012               	return	
  4895  0019F2                     l3792:
  4896                           
  4897                           ;main.c: 398: else{
  4898                           ;main.c: 399: estado = 0;
  4899  0019F2  0E00               	movlw	0
  4900  0019F4  6E30               	movwf	_estado,c
  4901  0019F6  0012               	return	
  4902  0019F8                     __end_of_enviaByte:
  4903                           	opt stack 0
  4904                           tblptru	equ	0xFF8
  4905                           tblptrh	equ	0xFF7
  4906                           tblptrl	equ	0xFF6
  4907                           tablat	equ	0xFF5
  4908                           prodh	equ	0xFF4
  4909                           prodl	equ	0xFF3
  4910                           intcon	equ	0xFF2
  4911                           postinc0	equ	0xFEE
  4912                           wreg	equ	0xFE8
  4913                           indf1	equ	0xFE7
  4914                           postdec1	equ	0xFE5
  4915                           fsr1h	equ	0xFE2
  4916                           fsr1l	equ	0xFE1
  4917                           indf2	equ	0xFDF
  4918                           postinc2	equ	0xFDE
  4919                           postdec2	equ	0xFDD
  4920                           fsr2h	equ	0xFDA
  4921                           fsr2l	equ	0xFD9
  4922                           status	equ	0xFD8
  4923                           
  4924 ;; *************** function _init_XLCD *****************
  4925 ;; Defined at:
  4926 ;;		line 238 in file "main.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4943 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:   10
  4947 ;; This function calls:
  4948 ;;		_BusyXLCD
  4949 ;;		_OpenXLCD
  4950 ;;		_WriteCmdXLCD
  4951 ;; This function is called by:
  4952 ;;		_main
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text26
  4957  0019F8                     __ptext26:
  4958                           	opt stack 0
  4959  0019F8                     _init_XLCD:
  4960                           	opt stack 20
  4961                           
  4962                           ;main.c: 239: OpenXLCD(0b00101100&0b00111000);
  4963                           
  4964                           ;incstack = 0
  4965  0019F8  0E28               	movlw	40
  4966  0019FA  ECC5  F008         	call	_OpenXLCD
  4967  0019FE                     l3986:
  4968  0019FE  EC2F  F00C         	call	_BusyXLCD	;wreg free
  4969  001A02  0900               	iorlw	0
  4970  001A04  A4D8               	btfss	status,2,c
  4971  001A06  D7FB               	goto	l3986
  4972                           
  4973                           ;main.c: 241: WriteCmdXLCD(0x06);
  4974  001A08  0E06               	movlw	6
  4975  001A0A  ECD4  F00B         	call	_WriteCmdXLCD
  4976                           
  4977                           ;main.c: 242: WriteCmdXLCD(0x0C);
  4978  001A0E  0E0C               	movlw	12
  4979  001A10  ECD4  F00B         	call	_WriteCmdXLCD
  4980  001A14  0012               	return		;funcret
  4981  001A16                     __end_of_init_XLCD:
  4982                           	opt stack 0
  4983                           tblptru	equ	0xFF8
  4984                           tblptrh	equ	0xFF7
  4985                           tblptrl	equ	0xFF6
  4986                           tablat	equ	0xFF5
  4987                           prodh	equ	0xFF4
  4988                           prodl	equ	0xFF3
  4989                           intcon	equ	0xFF2
  4990                           postinc0	equ	0xFEE
  4991                           wreg	equ	0xFE8
  4992                           indf1	equ	0xFE7
  4993                           postdec1	equ	0xFE5
  4994                           fsr1h	equ	0xFE2
  4995                           fsr1l	equ	0xFE1
  4996                           indf2	equ	0xFDF
  4997                           postinc2	equ	0xFDE
  4998                           postdec2	equ	0xFDD
  4999                           fsr2h	equ	0xFDA
  5000                           fsr2l	equ	0xFD9
  5001                           status	equ	0xFD8
  5002                           
  5003 ;; *************** function _OpenXLCD *****************
  5004 ;; Defined at:
  5005 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  lcdtype         1    wreg     unsigned char 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  lcdtype         1   27[COMRAM] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      void 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0
  5020 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5022 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5023 ;;Total ram usage:        1 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    9
  5026 ;; This function calls:
  5027 ;;		_BusyXLCD
  5028 ;;		_Delay10KTCYx
  5029 ;;		_DelayPORXLCD
  5030 ;;		_SetDDRamAddr
  5031 ;;		_WriteCmdXLCD
  5032 ;; This function is called by:
  5033 ;;		_init_XLCD
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text27
  5038  00118A                     __ptext27:
  5039                           	opt stack 0
  5040  00118A                     _OpenXLCD:
  5041                           	opt stack 20
  5042                           
  5043                           ;incstack = 0
  5044                           ;OpenXLCD@lcdtype stored from wreg
  5045  00118A  6E1C               	movwf	OpenXLCD@lcdtype,c
  5046  00118C  0EF0               	movlw	240
  5047  00118E  1681               	andwf	3969,f,c	;volatile
  5048  001190  0EF0               	movlw	240
  5049  001192  1693               	andwf	3987,f,c	;volatile
  5050  001194  9C93               	bcf	3987,6,c	;volatile
  5051  001196  9A93               	bcf	3987,5,c	;volatile
  5052  001198  9893               	bcf	3987,4,c	;volatile
  5053  00119A  9C8A               	bcf	3978,6,c	;volatile
  5054  00119C  9A8A               	bcf	3978,5,c	;volatile
  5055  00119E  988A               	bcf	3978,4,c	;volatile
  5056  0011A0  EC41  F00D         	call	_DelayPORXLCD	;wreg free
  5057  0011A4  0E30               	movlw	48
  5058  0011A6  ECD4  F00B         	call	_WriteCmdXLCD
  5059  0011AA  0E05               	movlw	5
  5060  0011AC  EC0B  F00D         	call	_Delay10KTCYx
  5061  0011B0  0E30               	movlw	48
  5062  0011B2  ECD4  F00B         	call	_WriteCmdXLCD
  5063  0011B6  0E01               	movlw	1
  5064  0011B8  EC0B  F00D         	call	_Delay10KTCYx
  5065  0011BC  0E32               	movlw	50
  5066  0011BE  ECD4  F00B         	call	_WriteCmdXLCD
  5067  0011C2                     l3742:
  5068  0011C2  EC2F  F00C         	call	_BusyXLCD	;wreg free
  5069  0011C6  0900               	iorlw	0
  5070  0011C8  A4D8               	btfss	status,2,c
  5071  0011CA  D7FB               	goto	l3742
  5072  0011CC                     l3744:
  5073  0011CC  EC2F  F00C         	call	_BusyXLCD	;wreg free
  5074  0011D0  0900               	iorlw	0
  5075  0011D2  A4D8               	btfss	status,2,c
  5076  0011D4  D7FB               	goto	l3744
  5077  0011D6  501C               	movf	OpenXLCD@lcdtype,w,c
  5078  0011D8  ECD4  F00B         	call	_WriteCmdXLCD
  5079  0011DC                     l3748:
  5080  0011DC  EC2F  F00C         	call	_BusyXLCD	;wreg free
  5081  0011E0  0900               	iorlw	0
  5082  0011E2  A4D8               	btfss	status,2,c
  5083  0011E4  D7FB               	goto	l3748
  5084  0011E6  0E08               	movlw	8
  5085  0011E8  ECD4  F00B         	call	_WriteCmdXLCD
  5086  0011EC                     l3752:
  5087  0011EC  EC2F  F00C         	call	_BusyXLCD	;wreg free
  5088  0011F0  0900               	iorlw	0
  5089  0011F2  A4D8               	btfss	status,2,c
  5090  0011F4  D7FB               	goto	l3752
  5091  0011F6  0E0F               	movlw	15
  5092  0011F8  ECD4  F00B         	call	_WriteCmdXLCD
  5093  0011FC                     l3756:
  5094  0011FC  EC2F  F00C         	call	_BusyXLCD	;wreg free
  5095  001200  0900               	iorlw	0
  5096  001202  A4D8               	btfss	status,2,c
  5097  001204  D7FB               	goto	l3756
  5098  001206  0E01               	movlw	1
  5099  001208  ECD4  F00B         	call	_WriteCmdXLCD
  5100  00120C                     l3760:
  5101  00120C  EC2F  F00C         	call	_BusyXLCD	;wreg free
  5102  001210  0900               	iorlw	0
  5103  001212  A4D8               	btfss	status,2,c
  5104  001214  D7FB               	goto	l3760
  5105  001216  0E04               	movlw	4
  5106  001218  ECD4  F00B         	call	_WriteCmdXLCD
  5107  00121C                     l3764:
  5108  00121C  EC2F  F00C         	call	_BusyXLCD	;wreg free
  5109  001220  0900               	iorlw	0
  5110  001222  A4D8               	btfss	status,2,c
  5111  001224  D7FB               	goto	l3764
  5112  001226  0E80               	movlw	128
  5113  001228  ECFF  F00A         	call	_SetDDRamAddr
  5114  00122C  0012               	return	
  5115  00122E                     __end_of_OpenXLCD:
  5116                           	opt stack 0
  5117                           tblptru	equ	0xFF8
  5118                           tblptrh	equ	0xFF7
  5119                           tblptrl	equ	0xFF6
  5120                           tablat	equ	0xFF5
  5121                           prodh	equ	0xFF4
  5122                           prodl	equ	0xFF3
  5123                           intcon	equ	0xFF2
  5124                           postinc0	equ	0xFEE
  5125                           wreg	equ	0xFE8
  5126                           indf1	equ	0xFE7
  5127                           postdec1	equ	0xFE5
  5128                           fsr1h	equ	0xFE2
  5129                           fsr1l	equ	0xFE1
  5130                           indf2	equ	0xFDF
  5131                           postinc2	equ	0xFDE
  5132                           postdec2	equ	0xFDD
  5133                           fsr2h	equ	0xFDA
  5134                           fsr2l	equ	0xFD9
  5135                           status	equ	0xFD8
  5136                           
  5137 ;; *************** function _WriteCmdXLCD *****************
  5138 ;; Defined at:
  5139 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  cmd             1    wreg     unsigned char 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  cmd             1   23[COMRAM] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0, cstack
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5153 ;;      Params:         0       0       0       0       0       0       0       0       0
  5154 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5156 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5157 ;;Total ram usage:        1 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    8
  5160 ;; This function calls:
  5161 ;;		_DelayFor18TCY
  5162 ;; This function is called by:
  5163 ;;		_init_XLCD
  5164 ;;		_OpenXLCD
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text28
  5169  0017A8                     __ptext28:
  5170                           	opt stack 0
  5171  0017A8                     _WriteCmdXLCD:
  5172                           	opt stack 21
  5173                           
  5174                           ;incstack = 0
  5175                           ;WriteCmdXLCD@cmd stored from wreg
  5176  0017A8  6E18               	movwf	WriteCmdXLCD@cmd,c
  5177  0017AA  0EF0               	movlw	240
  5178  0017AC  1693               	andwf	3987,f,c	;volatile
  5179  0017AE  0EF0               	movlw	240
  5180  0017B0  1681               	andwf	3969,f,c	;volatile
  5181  0017B2  3818               	swapf	WriteCmdXLCD@cmd,w,c
  5182  0017B4  0B0F               	andlw	15
  5183  0017B6  0B0F               	andlw	15
  5184  0017B8  1281               	iorwf	3969,f,c	;volatile
  5185  0017BA  9C8A               	bcf	3978,6,c	;volatile
  5186  0017BC  9A8A               	bcf	3978,5,c	;volatile
  5187  0017BE  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5188  0017C2  888A               	bsf	3978,4,c	;volatile
  5189  0017C4  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5190  0017C8  988A               	bcf	3978,4,c	;volatile
  5191  0017CA  0EF0               	movlw	240
  5192  0017CC  1681               	andwf	3969,f,c	;volatile
  5193  0017CE  5018               	movf	WriteCmdXLCD@cmd,w,c
  5194  0017D0  0B0F               	andlw	15
  5195  0017D2  1281               	iorwf	3969,f,c	;volatile
  5196  0017D4  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5197  0017D8  888A               	bsf	3978,4,c	;volatile
  5198  0017DA  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5199  0017DE  988A               	bcf	3978,4,c	;volatile
  5200  0017E0  0E0F               	movlw	15
  5201  0017E2  1293               	iorwf	3987,f,c	;volatile
  5202  0017E4  0012               	return	
  5203  0017E6                     __end_of_WriteCmdXLCD:
  5204                           	opt stack 0
  5205                           tblptru	equ	0xFF8
  5206                           tblptrh	equ	0xFF7
  5207                           tblptrl	equ	0xFF6
  5208                           tablat	equ	0xFF5
  5209                           prodh	equ	0xFF4
  5210                           prodl	equ	0xFF3
  5211                           intcon	equ	0xFF2
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           indf1	equ	0xFE7
  5215                           postdec1	equ	0xFE5
  5216                           fsr1h	equ	0xFE2
  5217                           fsr1l	equ	0xFE1
  5218                           indf2	equ	0xFDF
  5219                           postinc2	equ	0xFDE
  5220                           postdec2	equ	0xFDD
  5221                           fsr2h	equ	0xFDA
  5222                           fsr2l	equ	0xFD9
  5223                           status	equ	0xFD8
  5224                           
  5225 ;; *************** function _SetDDRamAddr *****************
  5226 ;; Defined at:
  5227 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;  DDaddr          1    wreg     unsigned char 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  DDaddr          1   26[COMRAM] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      void 
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5241 ;;      Params:         0       0       0       0       0       0       0       0       0
  5242 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5243 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5244 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5245 ;;Total ram usage:        4 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    8
  5248 ;; This function calls:
  5249 ;;		_DelayFor18TCY
  5250 ;; This function is called by:
  5251 ;;		_atualiza_Tela
  5252 ;;		_OpenXLCD
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text29
  5257  0015FE                     __ptext29:
  5258                           	opt stack 0
  5259  0015FE                     _SetDDRamAddr:
  5260                           	opt stack 20
  5261                           
  5262                           ;incstack = 0
  5263                           ;SetDDRamAddr@DDaddr stored from wreg
  5264  0015FE  6E1B               	movwf	SetDDRamAddr@DDaddr,c
  5265  001600  0EF0               	movlw	240
  5266  001602  1693               	andwf	3987,f,c	;volatile
  5267  001604  0EF0               	movlw	240
  5268  001606  1681               	andwf	3969,f,c	;volatile
  5269  001608  501B               	movf	SetDDRamAddr@DDaddr,w,c
  5270  00160A  6E18               	movwf	??_SetDDRamAddr& (0+255),c
  5271  00160C  6A19               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  5272  00160E  8E18               	bsf	??_SetDDRamAddr,7,c
  5273  001610  0E04               	movlw	4
  5274  001612  6E1A               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  5275  001614                     u2415:
  5276  001614  3419               	rlcf	??_SetDDRamAddr+1,w,c
  5277  001616  3219               	rrcf	??_SetDDRamAddr+1,f,c
  5278  001618  3218               	rrcf	??_SetDDRamAddr,f,c
  5279  00161A  2E1A               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  5280  00161C  D7FB               	goto	u2415
  5281  00161E  5018               	movf	??_SetDDRamAddr,w,c
  5282  001620  0B0F               	andlw	15
  5283  001622  1281               	iorwf	3969,f,c	;volatile
  5284  001624  9C8A               	bcf	3978,6,c	;volatile
  5285  001626  9A8A               	bcf	3978,5,c	;volatile
  5286  001628  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5287  00162C  888A               	bsf	3978,4,c	;volatile
  5288  00162E  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5289  001632  988A               	bcf	3978,4,c	;volatile
  5290  001634  0EF0               	movlw	240
  5291  001636  1681               	andwf	3969,f,c	;volatile
  5292  001638  501B               	movf	SetDDRamAddr@DDaddr,w,c
  5293  00163A  0B0F               	andlw	15
  5294  00163C  1281               	iorwf	3969,f,c	;volatile
  5295  00163E  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5296  001642  888A               	bsf	3978,4,c	;volatile
  5297  001644  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5298  001648  988A               	bcf	3978,4,c	;volatile
  5299  00164A  0E0F               	movlw	15
  5300  00164C  1293               	iorwf	3987,f,c	;volatile
  5301  00164E  0012               	return	
  5302  001650                     __end_of_SetDDRamAddr:
  5303                           	opt stack 0
  5304                           tblptru	equ	0xFF8
  5305                           tblptrh	equ	0xFF7
  5306                           tblptrl	equ	0xFF6
  5307                           tablat	equ	0xFF5
  5308                           prodh	equ	0xFF4
  5309                           prodl	equ	0xFF3
  5310                           intcon	equ	0xFF2
  5311                           postinc0	equ	0xFEE
  5312                           wreg	equ	0xFE8
  5313                           indf1	equ	0xFE7
  5314                           postdec1	equ	0xFE5
  5315                           fsr1h	equ	0xFE2
  5316                           fsr1l	equ	0xFE1
  5317                           indf2	equ	0xFDF
  5318                           postinc2	equ	0xFDE
  5319                           postdec2	equ	0xFDD
  5320                           fsr2h	equ	0xFDA
  5321                           fsr2l	equ	0xFD9
  5322                           status	equ	0xFD8
  5323                           
  5324 ;; *************** function _DelayPORXLCD *****************
  5325 ;; Defined at:
  5326 ;;		line 76 in file "main.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;		None
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      void 
  5333 ;; Registers used:
  5334 ;;		wreg, cstack
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5340 ;;      Params:         0       0       0       0       0       0       0       0       0
  5341 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5343 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5344 ;;Total ram usage:        0 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:    7
  5347 ;; This function calls:
  5348 ;;		_Delay1KTCYx
  5349 ;; This function is called by:
  5350 ;;		_OpenXLCD
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           	psect	text30
  5355  001A82                     __ptext30:
  5356                           	opt stack 0
  5357  001A82                     _DelayPORXLCD:
  5358                           	opt stack 21
  5359                           
  5360                           ;main.c: 77: Delay1KTCYx(180);
  5361                           
  5362                           ;incstack = 0
  5363  001A82  0EB4               	movlw	180
  5364  001A84  EC29  F00D         	call	_Delay1KTCYx
  5365  001A88  0012               	return	
  5366  001A8A                     __end_of_DelayPORXLCD:
  5367                           	opt stack 0
  5368                           tblptru	equ	0xFF8
  5369                           tblptrh	equ	0xFF7
  5370                           tblptrl	equ	0xFF6
  5371                           tablat	equ	0xFF5
  5372                           prodh	equ	0xFF4
  5373                           prodl	equ	0xFF3
  5374                           intcon	equ	0xFF2
  5375                           postinc0	equ	0xFEE
  5376                           wreg	equ	0xFE8
  5377                           indf1	equ	0xFE7
  5378                           postdec1	equ	0xFE5
  5379                           fsr1h	equ	0xFE2
  5380                           fsr1l	equ	0xFE1
  5381                           indf2	equ	0xFDF
  5382                           postinc2	equ	0xFDE
  5383                           postdec2	equ	0xFDD
  5384                           fsr2h	equ	0xFDA
  5385                           fsr2l	equ	0xFD9
  5386                           status	equ	0xFD8
  5387                           
  5388 ;; *************** function _Delay1KTCYx *****************
  5389 ;; Defined at:
  5390 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  unit            1    wreg     unsigned char 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  unit            1   22[COMRAM] unsigned char 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  1    wreg      void 
  5397 ;; Registers used:
  5398 ;;		wreg
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5404 ;;      Params:         0       0       0       0       0       0       0       0       0
  5405 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5407 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5408 ;;Total ram usage:        1 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; Hardware stack levels required when called:    6
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_DelayPORXLCD
  5415 ;;		_DelayXLCD
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text31
  5420  001A52                     __ptext31:
  5421                           	opt stack 0
  5422  001A52                     _Delay1KTCYx:
  5423                           	opt stack 21
  5424                           
  5425                           ;incstack = 0
  5426                           ;Delay1KTCYx@unit stored from wreg
  5427  001A52  6E17               	movwf	Delay1KTCYx@unit,c
  5428  001A54  0EC8               	movlw	200
  5429  001A56                     u3387:
  5430  001A56  D000               	nop2	
  5431  001A58  2EE8               	decfsz	wreg,f,c
  5432  001A5A  D7FD               	bra	u3387
  5433  001A5C  2E17               	decfsz	Delay1KTCYx@unit,f,c
  5434  001A5E  D7FA               	goto	l3298
  5435  001A60  0012               	return	
  5436  001A62                     __end_of_Delay1KTCYx:
  5437                           	opt stack 0
  5438                           tblptru	equ	0xFF8
  5439                           tblptrh	equ	0xFF7
  5440                           tblptrl	equ	0xFF6
  5441                           tablat	equ	0xFF5
  5442                           prodh	equ	0xFF4
  5443                           prodl	equ	0xFF3
  5444                           intcon	equ	0xFF2
  5445                           postinc0	equ	0xFEE
  5446                           wreg	equ	0xFE8
  5447                           indf1	equ	0xFE7
  5448                           postdec1	equ	0xFE5
  5449                           fsr1h	equ	0xFE2
  5450                           fsr1l	equ	0xFE1
  5451                           indf2	equ	0xFDF
  5452                           postinc2	equ	0xFDE
  5453                           postdec2	equ	0xFDD
  5454                           fsr2h	equ	0xFDA
  5455                           fsr2l	equ	0xFD9
  5456                           status	equ	0xFD8
  5457                           
  5458 ;; *************** function _Delay10KTCYx *****************
  5459 ;; Defined at:
  5460 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;  unit            1    wreg     unsigned char 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  unit            1   23[COMRAM] unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      void 
  5467 ;; Registers used:
  5468 ;;		wreg
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5474 ;;      Params:         0       0       0       0       0       0       0       0       0
  5475 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5476 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5477 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5478 ;;Total ram usage:        2 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    6
  5481 ;; This function calls:
  5482 ;;		Nothing
  5483 ;; This function is called by:
  5484 ;;		_setaDespertador
  5485 ;;		_main
  5486 ;;		_OpenXLCD
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text32
  5491  001A16                     __ptext32:
  5492                           	opt stack 0
  5493  001A16                     _Delay10KTCYx:
  5494                           	opt stack 23
  5495                           
  5496                           ;incstack = 0
  5497                           ;Delay10KTCYx@unit stored from wreg
  5498  001A16  6E18               	movwf	Delay10KTCYx@unit,c
  5499  001A18  0E0D               	movlw	13
  5500  001A1A  6E17               	movwf	??_Delay10KTCYx& (0+255),c
  5501  001A1C  0EFC               	movlw	252
  5502  001A1E                     u3397:
  5503  001A1E  2EE8               	decfsz	wreg,f,c
  5504  001A20  D7FE               	bra	u3397
  5505  001A22  2E17               	decfsz	??_Delay10KTCYx& (0+255),f,c
  5506  001A24  D7FC               	bra	u3397
  5507  001A26  2E18               	decfsz	Delay10KTCYx@unit,f,c
  5508  001A28  D7F7               	goto	l3490
  5509  001A2A  0012               	return	
  5510  001A2C                     __end_of_Delay10KTCYx:
  5511                           	opt stack 0
  5512                           tblptru	equ	0xFF8
  5513                           tblptrh	equ	0xFF7
  5514                           tblptrl	equ	0xFF6
  5515                           tablat	equ	0xFF5
  5516                           prodh	equ	0xFF4
  5517                           prodl	equ	0xFF3
  5518                           intcon	equ	0xFF2
  5519                           postinc0	equ	0xFEE
  5520                           wreg	equ	0xFE8
  5521                           indf1	equ	0xFE7
  5522                           postdec1	equ	0xFE5
  5523                           fsr1h	equ	0xFE2
  5524                           fsr1l	equ	0xFE1
  5525                           indf2	equ	0xFDF
  5526                           postinc2	equ	0xFDE
  5527                           postdec2	equ	0xFDD
  5528                           fsr2h	equ	0xFDA
  5529                           fsr2l	equ	0xFD9
  5530                           status	equ	0xFD8
  5531                           
  5532 ;; *************** function _BusyXLCD *****************
  5533 ;; Defined at:
  5534 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      unsigned char 
  5541 ;; Registers used:
  5542 ;;		wreg, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5548 ;;      Params:         0       0       0       0       0       0       0       0       0
  5549 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5551 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5552 ;;Total ram usage:        0 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    8
  5555 ;; This function calls:
  5556 ;;		_DelayFor18TCY
  5557 ;; This function is called by:
  5558 ;;		_init_XLCD
  5559 ;;		_OpenXLCD
  5560 ;;		_putrsXLCD
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text33
  5565  00185E                     __ptext33:
  5566                           	opt stack 0
  5567  00185E                     _BusyXLCD:
  5568                           	opt stack 19
  5569                           
  5570                           ;incstack = 0
  5571  00185E  8C8A               	bsf	3978,6,c	;volatile
  5572  001860  9A8A               	bcf	3978,5,c	;volatile
  5573  001862  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5574  001866  888A               	bsf	3978,4,c	;volatile
  5575  001868  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5576  00186C  A681               	btfss	3969,3,c	;volatile
  5577  00186E  D00A               	goto	l309
  5578  001870  988A               	bcf	3978,4,c	;volatile
  5579  001872  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5580  001876  888A               	bsf	3978,4,c	;volatile
  5581  001878  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5582  00187C  988A               	bcf	3978,4,c	;volatile
  5583  00187E  9C8A               	bcf	3978,6,c	;volatile
  5584  001880  0E01               	movlw	1
  5585  001882  0012               	return	
  5586  001884                     l309:
  5587  001884  988A               	bcf	3978,4,c	;volatile
  5588  001886  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5589  00188A  888A               	bsf	3978,4,c	;volatile
  5590  00188C  EC45  F00D         	call	_DelayFor18TCY	;wreg free
  5591  001890  988A               	bcf	3978,4,c	;volatile
  5592  001892  9C8A               	bcf	3978,6,c	;volatile
  5593  001894  0E00               	movlw	0
  5594  001896  0012               	return	
  5595  001898                     __end_of_BusyXLCD:
  5596                           	opt stack 0
  5597                           tblptru	equ	0xFF8
  5598                           tblptrh	equ	0xFF7
  5599                           tblptrl	equ	0xFF6
  5600                           tablat	equ	0xFF5
  5601                           prodh	equ	0xFF4
  5602                           prodl	equ	0xFF3
  5603                           intcon	equ	0xFF2
  5604                           postinc0	equ	0xFEE
  5605                           wreg	equ	0xFE8
  5606                           indf1	equ	0xFE7
  5607                           postdec1	equ	0xFE5
  5608                           fsr1h	equ	0xFE2
  5609                           fsr1l	equ	0xFE1
  5610                           indf2	equ	0xFDF
  5611                           postinc2	equ	0xFDE
  5612                           postdec2	equ	0xFDD
  5613                           fsr2h	equ	0xFDA
  5614                           fsr2l	equ	0xFD9
  5615                           status	equ	0xFD8
  5616                           
  5617 ;; *************** function _DelayFor18TCY *****************
  5618 ;; Defined at:
  5619 ;;		line 72 in file "main.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;		None
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5633 ;;      Params:         0       0       0       0       0       0       0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5636 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5637 ;;Total ram usage:        0 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:    7
  5640 ;; This function calls:
  5641 ;;		_Delay10TCYx
  5642 ;; This function is called by:
  5643 ;;		_BusyXLCD
  5644 ;;		_SetDDRamAddr
  5645 ;;		_WriteCmdXLCD
  5646 ;;		_WriteDataXLCD
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text34
  5651  001A8A                     __ptext34:
  5652                           	opt stack 0
  5653  001A8A                     _DelayFor18TCY:
  5654                           	opt stack 19
  5655                           
  5656                           ;main.c: 73: Delay10TCYx(120);
  5657                           
  5658                           ;incstack = 0
  5659  001A8A  0E78               	movlw	120
  5660  001A8C  EC31  F00D         	call	_Delay10TCYx
  5661  001A90  0012               	return		;funcret
  5662  001A92                     __end_of_DelayFor18TCY:
  5663                           	opt stack 0
  5664                           tblptru	equ	0xFF8
  5665                           tblptrh	equ	0xFF7
  5666                           tblptrl	equ	0xFF6
  5667                           tablat	equ	0xFF5
  5668                           prodh	equ	0xFF4
  5669                           prodl	equ	0xFF3
  5670                           intcon	equ	0xFF2
  5671                           postinc0	equ	0xFEE
  5672                           wreg	equ	0xFE8
  5673                           indf1	equ	0xFE7
  5674                           postdec1	equ	0xFE5
  5675                           fsr1h	equ	0xFE2
  5676                           fsr1l	equ	0xFE1
  5677                           indf2	equ	0xFDF
  5678                           postinc2	equ	0xFDE
  5679                           postdec2	equ	0xFDD
  5680                           fsr2h	equ	0xFDA
  5681                           fsr2l	equ	0xFD9
  5682                           status	equ	0xFD8
  5683                           
  5684 ;; *************** function _Delay10TCYx *****************
  5685 ;; Defined at:
  5686 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  unit            1    wreg     unsigned char 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  unit            1   22[COMRAM] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5700 ;;      Params:         0       0       0       0       0       0       0       0       0
  5701 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5703 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5704 ;;Total ram usage:        1 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    6
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_DelayFor18TCY
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text35
  5715  001A62                     __ptext35:
  5716                           	opt stack 0
  5717  001A62                     _Delay10TCYx:
  5718                           	opt stack 19
  5719                           
  5720                           ;incstack = 0
  5721                           ;Delay10TCYx@unit stored from wreg
  5722  001A62  6E17               	movwf	Delay10TCYx@unit,c
  5723  001A64  0E03               	movlw	3
  5724  001A66                     u3407:
  5725  001A66  2EE8               	decfsz	wreg,f,c
  5726  001A68  D7FE               	bra	u3407
  5727  001A6A  F000               	nop	
  5728  001A6C  2E17               	decfsz	Delay10TCYx@unit,f,c
  5729  001A6E  D7FA               	goto	l3130
  5730  001A70  0012               	return	
  5731  001A72                     __end_of_Delay10TCYx:
  5732                           	opt stack 0
  5733                           tblptru	equ	0xFF8
  5734                           tblptrh	equ	0xFF7
  5735                           tblptrl	equ	0xFF6
  5736                           tablat	equ	0xFF5
  5737                           prodh	equ	0xFF4
  5738                           prodl	equ	0xFF3
  5739                           intcon	equ	0xFF2
  5740                           postinc0	equ	0xFEE
  5741                           wreg	equ	0xFE8
  5742                           indf1	equ	0xFE7
  5743                           postdec1	equ	0xFE5
  5744                           fsr1h	equ	0xFE2
  5745                           fsr1l	equ	0xFE1
  5746                           indf2	equ	0xFDF
  5747                           postinc2	equ	0xFDE
  5748                           postdec2	equ	0xFDD
  5749                           fsr2h	equ	0xFDA
  5750                           fsr2l	equ	0xFD9
  5751                           status	equ	0xFD8
  5752                           
  5753 ;; *************** function _pic_isr *****************
  5754 ;; Defined at:
  5755 ;;		line 102 in file "main.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      void 
  5762 ;; Registers used:
  5763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5769 ;;      Params:         0       0       0       0       0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5771 ;;      Temps:         17       0       0       0       0       0       0       0       0
  5772 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5773 ;;Total ram usage:       17 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    5
  5776 ;; This function calls:
  5777 ;;		_printaDisplay
  5778 ;; This function is called by:
  5779 ;;		Interrupt level 1
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	intcodelo
  5784  000018                     __pintcodelo:
  5785                           	opt stack 0
  5786  000018                     _pic_isr:
  5787                           	opt stack 18
  5788                           
  5789                           ;incstack = 0
  5790  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5791  00001A  CFD8 F006          	movff	status,??_pic_isr
  5792  00001E  CFE8 F007          	movff	wreg,??_pic_isr+1
  5793  000022  CFE0 F008          	movff	bsr,??_pic_isr+2
  5794  000026  CFFA F009          	movff	pclath,??_pic_isr+3
  5795  00002A  CFFB F00A          	movff	pclatu,??_pic_isr+4
  5796  00002E  CFE9 F00B          	movff	fsr0l,??_pic_isr+5
  5797  000032  CFEA F00C          	movff	fsr0h,??_pic_isr+6
  5798  000036  CFE1 F00D          	movff	fsr1l,??_pic_isr+7
  5799  00003A  CFE2 F00E          	movff	fsr1h,??_pic_isr+8
  5800  00003E  CFD9 F00F          	movff	fsr2l,??_pic_isr+9
  5801  000042  CFDA F010          	movff	fsr2h,??_pic_isr+10
  5802  000046  CFF3 F011          	movff	prodl,??_pic_isr+11
  5803  00004A  CFF4 F012          	movff	prodh,??_pic_isr+12
  5804  00004E  CFF6 F013          	movff	tblptrl,??_pic_isr+13
  5805  000052  CFF7 F014          	movff	tblptrh,??_pic_isr+14
  5806  000056  CFF8 F015          	movff	tblptru,??_pic_isr+15
  5807  00005A  CFF5 F016          	movff	tablat,??_pic_isr+16
  5808                           
  5809                           ;main.c: 106: if(TMR0IF){
  5810  00005E  A4F2               	btfss	intcon,2,c	;volatile
  5811  000060  D00D               	goto	i1l4070
  5812                           
  5813                           ;main.c: 108: cont++;
  5814  000062  2A2D               	incf	_cont,f,c
  5815                           
  5816                           ;main.c: 109: if(cont > 1){
  5817  000064  0E01               	movlw	1
  5818  000066  642D               	cpfsgt	_cont,c
  5819  000068  D004               	goto	i1l122
  5820                           
  5821                           ;main.c: 110: flagSegundo = 1;
  5822  00006A  0E01               	movlw	1
  5823  00006C  6E2E               	movwf	_flagSegundo,c
  5824                           
  5825                           ;main.c: 111: cont = 0;
  5826  00006E  0E00               	movlw	0
  5827  000070  6E2D               	movwf	_cont,c
  5828  000072                     i1l122:
  5829                           
  5830                           ;main.c: 112: }
  5831                           ;main.c: 115: TMR0 = 26474;
  5832  000072  0E67               	movlw	103
  5833  000074  6ED7               	movwf	4055,c	;volatile
  5834  000076  0E6A               	movlw	106
  5835  000078  6ED6               	movwf	4054,c	;volatile
  5836                           
  5837                           ;main.c: 116: INTCONbits.TMR0IF = 0;
  5838  00007A  94F2               	bcf	intcon,2,c	;volatile
  5839  00007C                     i1l4070:
  5840                           
  5841                           ;main.c: 117: }
  5842                           ;main.c: 120: if(PIR1bits.RCIF == 1)
  5843  00007C  AA9E               	btfss	3998,5,c	;volatile
  5844  00007E  D017               	goto	i1l128
  5845  000080                     i1l124:
  5846  000080  AA9E               	btfss	3998,5,c	;volatile
  5847  000082  D7FE               	goto	i1l124
  5848                           
  5849                           ;main.c: 125: BUFFCOM[i]= RCREG;
  5850  000084  502F               	movf	_i,w,c
  5851  000086  0D01               	mullw	1
  5852  000088  0E38               	movlw	low _BUFFCOM
  5853  00008A  24F3               	addwf	prodl,w,c
  5854  00008C  6ED9               	movwf	fsr2l,c
  5855  00008E  0E00               	movlw	high _BUFFCOM
  5856  000090  20F4               	addwfc	prodh,w,c
  5857  000092  6EDA               	movwf	fsr2h,c
  5858  000094  CFAE FFDF          	movff	4014,indf2	;volatile
  5859                           
  5860                           ;main.c: 127: i++;
  5861  000098  2A2F               	incf	_i,f,c
  5862                           
  5863                           ;main.c: 129: if(i>6)
  5864  00009A  0E06               	movlw	6
  5865  00009C  642F               	cpfsgt	_i,c
  5866  00009E  D007               	goto	i1l128
  5867                           
  5868                           ;main.c: 130: {
  5869                           ;main.c: 131: printaDisplay();
  5870  0000A0  EC16  F00D         	call	_printaDisplay	;wreg free
  5871                           
  5872                           ;main.c: 132: PIR1bits.RCIF = 0;
  5873  0000A4  9A9E               	bcf	3998,5,c	;volatile
  5874                           
  5875                           ;main.c: 133: i=0;
  5876  0000A6  0E00               	movlw	0
  5877  0000A8  6E2F               	movwf	_i,c
  5878                           
  5879                           ;main.c: 134: estado = 1;
  5880  0000AA  0E01               	movlw	1
  5881  0000AC  6E30               	movwf	_estado,c
  5882  0000AE                     i1l128:
  5883  0000AE  C016  FFF5         	movff	??_pic_isr+16,tablat
  5884  0000B2  C015  FFF8         	movff	??_pic_isr+15,tblptru
  5885  0000B6  C014  FFF7         	movff	??_pic_isr+14,tblptrh
  5886  0000BA  C013  FFF6         	movff	??_pic_isr+13,tblptrl
  5887  0000BE  C012  FFF4         	movff	??_pic_isr+12,prodh
  5888  0000C2  C011  FFF3         	movff	??_pic_isr+11,prodl
  5889  0000C6  C010  FFDA         	movff	??_pic_isr+10,fsr2h
  5890  0000CA  C00F  FFD9         	movff	??_pic_isr+9,fsr2l
  5891  0000CE  C00E  FFE2         	movff	??_pic_isr+8,fsr1h
  5892  0000D2  C00D  FFE1         	movff	??_pic_isr+7,fsr1l
  5893  0000D6  C00C  FFEA         	movff	??_pic_isr+6,fsr0h
  5894  0000DA  C00B  FFE9         	movff	??_pic_isr+5,fsr0l
  5895  0000DE  C00A  FFFB         	movff	??_pic_isr+4,pclatu
  5896  0000E2  C009  FFFA         	movff	??_pic_isr+3,pclath
  5897  0000E6  C008  FFE0         	movff	??_pic_isr+2,bsr
  5898  0000EA  C007  FFE8         	movff	??_pic_isr+1,wreg
  5899  0000EE  C006  FFD8         	movff	??_pic_isr,status
  5900  0000F2  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5901  0000F4  0010               	retfie	
  5902  0000F6                     __end_of_pic_isr:
  5903                           	opt stack 0
  5904                           pclatu	equ	0xFFB
  5905                           pclath	equ	0xFFA
  5906                           tblptru	equ	0xFF8
  5907                           tblptrh	equ	0xFF7
  5908                           tblptrl	equ	0xFF6
  5909                           tablat	equ	0xFF5
  5910                           prodh	equ	0xFF4
  5911                           prodl	equ	0xFF3
  5912                           intcon	equ	0xFF2
  5913                           postinc0	equ	0xFEE
  5914                           fsr0h	equ	0xFEA
  5915                           fsr0l	equ	0xFE9
  5916                           wreg	equ	0xFE8
  5917                           indf1	equ	0xFE7
  5918                           postdec1	equ	0xFE5
  5919                           fsr1h	equ	0xFE2
  5920                           fsr1l	equ	0xFE1
  5921                           bsr	equ	0xFE0
  5922                           indf2	equ	0xFDF
  5923                           postinc2	equ	0xFDE
  5924                           postdec2	equ	0xFDD
  5925                           fsr2h	equ	0xFDA
  5926                           fsr2l	equ	0xFD9
  5927                           status	equ	0xFD8
  5928                           
  5929 ;; *************** function _printaDisplay *****************
  5930 ;; Defined at:
  5931 ;;		line 97 in file "main.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;		None
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;		None
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5945 ;;      Params:         0       0       0       0       0       0       0       0       0
  5946 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5948 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5949 ;;Total ram usage:        0 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    4
  5952 ;; This function calls:
  5953 ;;		i1_SetDDRamAddr
  5954 ;;		i1_putrsXLCD
  5955 ;; This function is called by:
  5956 ;;		_pic_isr
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text37
  5961  001A2C                     __ptext37:
  5962                           	opt stack 0
  5963  001A2C                     _printaDisplay:
  5964                           	opt stack 18
  5965                           
  5966                           ;main.c: 98: SetDDRamAddr(0x00);
  5967                           
  5968                           ;incstack = 0
  5969  001A2C  0E00               	movlw	0
  5970  001A2E  EC28  F00B         	call	i1_SetDDRamAddr
  5971                           
  5972                           ;main.c: 99: putrsXLCD(BUFFCOM);
  5973  001A32  0E38               	movlw	low _BUFFCOM
  5974  001A34  6E03               	movwf	i1putrsXLCD@buffer,c
  5975  001A36  0E00               	movlw	high _BUFFCOM
  5976  001A38  6E04               	movwf	i1putrsXLCD@buffer+1,c
  5977  001A3A  EC7C  F00A         	call	i1_putrsXLCD	;wreg free
  5978  001A3E  0012               	return		;funcret
  5979  001A40                     __end_of_printaDisplay:
  5980                           	opt stack 0
  5981                           pclatu	equ	0xFFB
  5982                           pclath	equ	0xFFA
  5983                           tblptru	equ	0xFF8
  5984                           tblptrh	equ	0xFF7
  5985                           tblptrl	equ	0xFF6
  5986                           tablat	equ	0xFF5
  5987                           prodh	equ	0xFF4
  5988                           prodl	equ	0xFF3
  5989                           intcon	equ	0xFF2
  5990                           postinc0	equ	0xFEE
  5991                           fsr0h	equ	0xFEA
  5992                           fsr0l	equ	0xFE9
  5993                           wreg	equ	0xFE8
  5994                           indf1	equ	0xFE7
  5995                           postdec1	equ	0xFE5
  5996                           fsr1h	equ	0xFE2
  5997                           fsr1l	equ	0xFE1
  5998                           bsr	equ	0xFE0
  5999                           indf2	equ	0xFDF
  6000                           postinc2	equ	0xFDE
  6001                           postdec2	equ	0xFDD
  6002                           fsr2h	equ	0xFDA
  6003                           fsr2l	equ	0xFD9
  6004                           status	equ	0xFD8
  6005                           
  6006 ;; *************** function i1_putrsXLCD *****************
  6007 ;; Defined at:
  6008 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  buffer          2    2[COMRAM] PTR const unsigned char 
  6011 ;;		 -> STR_8(7), STR_7(6), STR_6(17), STR_5(7), 
  6012 ;;		 -> STR_4(7), versao(6), STR_3(9), STR_2(17), 
  6013 ;;		 -> horarioDespertador(6), data_horario.data(7), data_horario.horario(9), data_horario(20), 
  6014 ;;		 -> converteAnoString@anoStr(4), BUFFCOM(7), 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6026 ;;      Params:         2       0       0       0       0       0       0       0       0
  6027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6029 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6030 ;;Total ram usage:        2 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    3
  6033 ;; This function calls:
  6034 ;;		i1_BusyXLCD
  6035 ;;		i1_WriteDataXLCD
  6036 ;; This function is called by:
  6037 ;;		_printaDisplay
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text38
  6042  0014F8                     __ptext38:
  6043                           	opt stack 0
  6044  0014F8                     i1_putrsXLCD:
  6045                           	opt stack 18
  6046                           
  6047                           ;incstack = 0
  6048  0014F8  D019               	goto	i1l3878
  6049  0014FA                     i1l3872:
  6050  0014FA  EC4C  F00C         	call	i1_BusyXLCD	;wreg free
  6051  0014FE  0900               	iorlw	0
  6052  001500  A4D8               	btfss	status,2,c
  6053  001502  D7FB               	goto	i1l3872
  6054  001504  C003  FFF6         	movff	i1putrsXLCD@buffer,tblptrl
  6055  001508  C004  FFF7         	movff	i1putrsXLCD@buffer+1,tblptrh
  6056  00150C  6AF8               	clrf	tblptru,c
  6057  00150E  0E07               	movlw	(high __ramtop+-1)
  6058  001510  64F7               	cpfsgt	tblptrh,c
  6059  001512  D003               	bra	i1u302_27
  6060  001514  0008               	tblrd		*
  6061  001516  50F5               	movf	tablat,w,c
  6062  001518  D005               	bra	i1u302_20
  6063  00151A                     i1u302_27:
  6064  00151A  CFF6 FFE1          	movff	tblptrl,fsr1l
  6065  00151E  CFF7 FFE2          	movff	tblptrh,fsr1h
  6066  001522  50E7               	movf	indf1,w,c
  6067  001524                     i1u302_20:
  6068  001524  ECF3  F00B         	call	i1_WriteDataXLCD
  6069  001528  4A03               	infsnz	i1putrsXLCD@buffer,f,c
  6070  00152A  2A04               	incf	i1putrsXLCD@buffer+1,f,c
  6071  00152C                     i1l3878:
  6072  00152C  C003  FFF6         	movff	i1putrsXLCD@buffer,tblptrl
  6073  001530  C004  FFF7         	movff	i1putrsXLCD@buffer+1,tblptrh
  6074  001534  6AF8               	clrf	tblptru,c
  6075  001536  0E07               	movlw	(high __ramtop+-1)
  6076  001538  64F7               	cpfsgt	tblptrh,c
  6077  00153A  D003               	bra	i1u303_27
  6078  00153C  0008               	tblrd		*
  6079  00153E  50F5               	movf	tablat,w,c
  6080  001540  D005               	bra	i1u303_20
  6081  001542                     i1u303_27:
  6082  001542  CFF6 FFE1          	movff	tblptrl,fsr1l
  6083  001546  CFF7 FFE2          	movff	tblptrh,fsr1h
  6084  00154A  50E7               	movf	indf1,w,c
  6085  00154C                     i1u303_20:
  6086  00154C  0900               	iorlw	0
  6087  00154E  B4D8               	btfsc	status,2,c
  6088  001550  0012               	return	
  6089  001552  D7D3               	goto	i1l3872
  6090  001554                     __end_ofi1_putrsXLCD:
  6091                           	opt stack 0
  6092                           pclatu	equ	0xFFB
  6093                           pclath	equ	0xFFA
  6094                           tblptru	equ	0xFF8
  6095                           tblptrh	equ	0xFF7
  6096                           tblptrl	equ	0xFF6
  6097                           tablat	equ	0xFF5
  6098                           prodh	equ	0xFF4
  6099                           prodl	equ	0xFF3
  6100                           intcon	equ	0xFF2
  6101                           postinc0	equ	0xFEE
  6102                           fsr0h	equ	0xFEA
  6103                           fsr0l	equ	0xFE9
  6104                           wreg	equ	0xFE8
  6105                           indf1	equ	0xFE7
  6106                           postdec1	equ	0xFE5
  6107                           fsr1h	equ	0xFE2
  6108                           fsr1l	equ	0xFE1
  6109                           bsr	equ	0xFE0
  6110                           indf2	equ	0xFDF
  6111                           postinc2	equ	0xFDE
  6112                           postdec2	equ	0xFDD
  6113                           fsr2h	equ	0xFDA
  6114                           fsr2l	equ	0xFD9
  6115                           status	equ	0xFD8
  6116                           
  6117 ;; *************** function i1_WriteDataXLCD *****************
  6118 ;; Defined at:
  6119 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  data            1    wreg     unsigned char 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  data            1    1[COMRAM] unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      void 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6133 ;;      Params:         0       0       0       0       0       0       0       0       0
  6134 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6136 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6137 ;;Total ram usage:        1 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    2
  6140 ;; This function calls:
  6141 ;;		i1_DelayFor18TCY
  6142 ;; This function is called by:
  6143 ;;		i1_putrsXLCD
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text39
  6148  0017E6                     __ptext39:
  6149                           	opt stack 0
  6150  0017E6                     i1_WriteDataXLCD:
  6151                           	opt stack 18
  6152                           
  6153                           ;incstack = 0
  6154                           ;i1WriteDataXLCD@data stored from wreg
  6155  0017E6  6E02               	movwf	i1WriteDataXLCD@data,c
  6156  0017E8  0EF0               	movlw	240
  6157  0017EA  1693               	andwf	3987,f,c	;volatile
  6158  0017EC  0EF0               	movlw	240
  6159  0017EE  1681               	andwf	3969,f,c	;volatile
  6160  0017F0  3802               	swapf	i1WriteDataXLCD@data,w,c
  6161  0017F2  0B0F               	andlw	15
  6162  0017F4  0B0F               	andlw	15
  6163  0017F6  1281               	iorwf	3969,f,c	;volatile
  6164  0017F8  8A8A               	bsf	3978,5,c	;volatile
  6165  0017FA  9C8A               	bcf	3978,6,c	;volatile
  6166  0017FC  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6167  001800  888A               	bsf	3978,4,c	;volatile
  6168  001802  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6169  001806  988A               	bcf	3978,4,c	;volatile
  6170  001808  0EF0               	movlw	240
  6171  00180A  1681               	andwf	3969,f,c	;volatile
  6172  00180C  5002               	movf	i1WriteDataXLCD@data,w,c
  6173  00180E  0B0F               	andlw	15
  6174  001810  1281               	iorwf	3969,f,c	;volatile
  6175  001812  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6176  001816  888A               	bsf	3978,4,c	;volatile
  6177  001818  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6178  00181C  988A               	bcf	3978,4,c	;volatile
  6179  00181E  0E0F               	movlw	15
  6180  001820  1293               	iorwf	3987,f,c	;volatile
  6181  001822  0012               	return	
  6182  001824                     __end_ofi1_WriteDataXLCD:
  6183                           	opt stack 0
  6184                           pclatu	equ	0xFFB
  6185                           pclath	equ	0xFFA
  6186                           tblptru	equ	0xFF8
  6187                           tblptrh	equ	0xFF7
  6188                           tblptrl	equ	0xFF6
  6189                           tablat	equ	0xFF5
  6190                           prodh	equ	0xFF4
  6191                           prodl	equ	0xFF3
  6192                           intcon	equ	0xFF2
  6193                           postinc0	equ	0xFEE
  6194                           fsr0h	equ	0xFEA
  6195                           fsr0l	equ	0xFE9
  6196                           wreg	equ	0xFE8
  6197                           indf1	equ	0xFE7
  6198                           postdec1	equ	0xFE5
  6199                           fsr1h	equ	0xFE2
  6200                           fsr1l	equ	0xFE1
  6201                           bsr	equ	0xFE0
  6202                           indf2	equ	0xFDF
  6203                           postinc2	equ	0xFDE
  6204                           postdec2	equ	0xFDD
  6205                           fsr2h	equ	0xFDA
  6206                           fsr2l	equ	0xFD9
  6207                           status	equ	0xFD8
  6208                           
  6209 ;; *************** function i1_BusyXLCD *****************
  6210 ;; Defined at:
  6211 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      unsigned char 
  6218 ;; Registers used:
  6219 ;;		wreg, cstack
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6225 ;;      Params:         0       0       0       0       0       0       0       0       0
  6226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6228 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6229 ;;Total ram usage:        0 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    2
  6232 ;; This function calls:
  6233 ;;		i1_DelayFor18TCY
  6234 ;; This function is called by:
  6235 ;;		i1_putrsXLCD
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text40
  6240  001898                     __ptext40:
  6241                           	opt stack 0
  6242  001898                     i1_BusyXLCD:
  6243                           	opt stack 18
  6244                           
  6245                           ;incstack = 0
  6246  001898  8C8A               	bsf	3978,6,c	;volatile
  6247  00189A  9A8A               	bcf	3978,5,c	;volatile
  6248  00189C  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6249  0018A0  888A               	bsf	3978,4,c	;volatile
  6250  0018A2  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6251  0018A6  A681               	btfss	3969,3,c	;volatile
  6252  0018A8  D00A               	goto	i1l309
  6253  0018AA  988A               	bcf	3978,4,c	;volatile
  6254  0018AC  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6255  0018B0  888A               	bsf	3978,4,c	;volatile
  6256  0018B2  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6257  0018B6  988A               	bcf	3978,4,c	;volatile
  6258  0018B8  9C8A               	bcf	3978,6,c	;volatile
  6259  0018BA  0E01               	movlw	1
  6260  0018BC  0012               	return	
  6261  0018BE                     i1l309:
  6262  0018BE  988A               	bcf	3978,4,c	;volatile
  6263  0018C0  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6264  0018C4  888A               	bsf	3978,4,c	;volatile
  6265  0018C6  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6266  0018CA  988A               	bcf	3978,4,c	;volatile
  6267  0018CC  9C8A               	bcf	3978,6,c	;volatile
  6268  0018CE  0E00               	movlw	0
  6269  0018D0  0012               	return	
  6270  0018D2                     __end_ofi1_BusyXLCD:
  6271                           	opt stack 0
  6272                           pclatu	equ	0xFFB
  6273                           pclath	equ	0xFFA
  6274                           tblptru	equ	0xFF8
  6275                           tblptrh	equ	0xFF7
  6276                           tblptrl	equ	0xFF6
  6277                           tablat	equ	0xFF5
  6278                           prodh	equ	0xFF4
  6279                           prodl	equ	0xFF3
  6280                           intcon	equ	0xFF2
  6281                           postinc0	equ	0xFEE
  6282                           fsr0h	equ	0xFEA
  6283                           fsr0l	equ	0xFE9
  6284                           wreg	equ	0xFE8
  6285                           indf1	equ	0xFE7
  6286                           postdec1	equ	0xFE5
  6287                           fsr1h	equ	0xFE2
  6288                           fsr1l	equ	0xFE1
  6289                           bsr	equ	0xFE0
  6290                           indf2	equ	0xFDF
  6291                           postinc2	equ	0xFDE
  6292                           postdec2	equ	0xFDD
  6293                           fsr2h	equ	0xFDA
  6294                           fsr2l	equ	0xFD9
  6295                           status	equ	0xFD8
  6296                           
  6297 ;; *************** function i1_SetDDRamAddr *****************
  6298 ;; Defined at:
  6299 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  DDaddr          1    wreg     unsigned char 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  DDaddr          1    4[COMRAM] unsigned char 
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      void 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0, cstack
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6313 ;;      Params:         0       0       0       0       0       0       0       0       0
  6314 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6315 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6316 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6317 ;;Total ram usage:        4 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    2
  6320 ;; This function calls:
  6321 ;;		i1_DelayFor18TCY
  6322 ;; This function is called by:
  6323 ;;		_printaDisplay
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text41
  6328  001650                     __ptext41:
  6329                           	opt stack 0
  6330  001650                     i1_SetDDRamAddr:
  6331                           	opt stack 19
  6332                           
  6333                           ;incstack = 0
  6334                           ;i1SetDDRamAddr@DDaddr stored from wreg
  6335  001650  6E05               	movwf	i1SetDDRamAddr@DDaddr,c
  6336  001652  0EF0               	movlw	240
  6337  001654  1693               	andwf	3987,f,c	;volatile
  6338  001656  0EF0               	movlw	240
  6339  001658  1681               	andwf	3969,f,c	;volatile
  6340  00165A  5005               	movf	i1SetDDRamAddr@DDaddr,w,c
  6341  00165C  6E02               	movwf	??i1_SetDDRamAddr& (0+255),c
  6342  00165E  6A03               	clrf	(??i1_SetDDRamAddr+1)& (0+255),c
  6343  001660  8E02               	bsf	??i1_SetDDRamAddr,7,c
  6344  001662  0E04               	movlw	4
  6345  001664  6E04               	movwf	(??i1_SetDDRamAddr+2)& (0+255),c
  6346  001666                     i1u305_25:
  6347  001666  3403               	rlcf	??i1_SetDDRamAddr+1,w,c
  6348  001668  3203               	rrcf	??i1_SetDDRamAddr+1,f,c
  6349  00166A  3202               	rrcf	??i1_SetDDRamAddr,f,c
  6350  00166C  2E04               	decfsz	(??i1_SetDDRamAddr+2)& (0+255),f,c
  6351  00166E  D7FB               	goto	i1u305_25
  6352  001670  5002               	movf	??i1_SetDDRamAddr,w,c
  6353  001672  0B0F               	andlw	15
  6354  001674  1281               	iorwf	3969,f,c	;volatile
  6355  001676  9C8A               	bcf	3978,6,c	;volatile
  6356  001678  9A8A               	bcf	3978,5,c	;volatile
  6357  00167A  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6358  00167E  888A               	bsf	3978,4,c	;volatile
  6359  001680  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6360  001684  988A               	bcf	3978,4,c	;volatile
  6361  001686  0EF0               	movlw	240
  6362  001688  1681               	andwf	3969,f,c	;volatile
  6363  00168A  5005               	movf	i1SetDDRamAddr@DDaddr,w,c
  6364  00168C  0B0F               	andlw	15
  6365  00168E  1281               	iorwf	3969,f,c	;volatile
  6366  001690  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6367  001694  888A               	bsf	3978,4,c	;volatile
  6368  001696  EC49  F00D         	call	i1_DelayFor18TCY	;wreg free
  6369  00169A  988A               	bcf	3978,4,c	;volatile
  6370  00169C  0E0F               	movlw	15
  6371  00169E  1293               	iorwf	3987,f,c	;volatile
  6372  0016A0  0012               	return	
  6373  0016A2                     __end_ofi1_SetDDRamAddr:
  6374                           	opt stack 0
  6375                           pclatu	equ	0xFFB
  6376                           pclath	equ	0xFFA
  6377                           tblptru	equ	0xFF8
  6378                           tblptrh	equ	0xFF7
  6379                           tblptrl	equ	0xFF6
  6380                           tablat	equ	0xFF5
  6381                           prodh	equ	0xFF4
  6382                           prodl	equ	0xFF3
  6383                           intcon	equ	0xFF2
  6384                           postinc0	equ	0xFEE
  6385                           fsr0h	equ	0xFEA
  6386                           fsr0l	equ	0xFE9
  6387                           wreg	equ	0xFE8
  6388                           indf1	equ	0xFE7
  6389                           postdec1	equ	0xFE5
  6390                           fsr1h	equ	0xFE2
  6391                           fsr1l	equ	0xFE1
  6392                           bsr	equ	0xFE0
  6393                           indf2	equ	0xFDF
  6394                           postinc2	equ	0xFDE
  6395                           postdec2	equ	0xFDD
  6396                           fsr2h	equ	0xFDA
  6397                           fsr2l	equ	0xFD9
  6398                           status	equ	0xFD8
  6399                           
  6400 ;; *************** function i1_DelayFor18TCY *****************
  6401 ;; Defined at:
  6402 ;;		line 72 in file "main.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;		None
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		wreg, cstack
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6416 ;;      Params:         0       0       0       0       0       0       0       0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6419 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6420 ;;Total ram usage:        0 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    1
  6423 ;; This function calls:
  6424 ;;		i1_Delay10TCYx
  6425 ;; This function is called by:
  6426 ;;		i1_BusyXLCD
  6427 ;;		i1_SetDDRamAddr
  6428 ;;		i1_WriteDataXLCD
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text42
  6433  001A92                     __ptext42:
  6434                           	opt stack 0
  6435  001A92                     i1_DelayFor18TCY:
  6436                           	opt stack 18
  6437                           
  6438                           ;main.c: 73: Delay10TCYx(120);
  6439                           
  6440                           ;incstack = 0
  6441  001A92  0E78               	movlw	120
  6442  001A94  EC39  F00D         	call	i1_Delay10TCYx
  6443  001A98  0012               	return		;funcret
  6444  001A9A                     __end_ofi1_DelayFor18TCY:
  6445                           	opt stack 0
  6446                           pclatu	equ	0xFFB
  6447                           pclath	equ	0xFFA
  6448                           tblptru	equ	0xFF8
  6449                           tblptrh	equ	0xFF7
  6450                           tblptrl	equ	0xFF6
  6451                           tablat	equ	0xFF5
  6452                           prodh	equ	0xFF4
  6453                           prodl	equ	0xFF3
  6454                           intcon	equ	0xFF2
  6455                           postinc0	equ	0xFEE
  6456                           fsr0h	equ	0xFEA
  6457                           fsr0l	equ	0xFE9
  6458                           wreg	equ	0xFE8
  6459                           indf1	equ	0xFE7
  6460                           postdec1	equ	0xFE5
  6461                           fsr1h	equ	0xFE2
  6462                           fsr1l	equ	0xFE1
  6463                           bsr	equ	0xFE0
  6464                           indf2	equ	0xFDF
  6465                           postinc2	equ	0xFDE
  6466                           postdec2	equ	0xFDD
  6467                           fsr2h	equ	0xFDA
  6468                           fsr2l	equ	0xFD9
  6469                           status	equ	0xFD8
  6470                           
  6471 ;; *************** function i1_Delay10TCYx *****************
  6472 ;; Defined at:
  6473 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  unit            1    wreg     unsigned char 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  unit            1    0[COMRAM] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6487 ;;      Params:         0       0       0       0       0       0       0       0       0
  6488 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6490 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6491 ;;Total ram usage:        1 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		i1_DelayFor18TCY
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text43
  6501  001A72                     __ptext43:
  6502                           	opt stack 0
  6503  001A72                     i1_Delay10TCYx:
  6504                           	opt stack 18
  6505                           
  6506                           ;incstack = 0
  6507                           ;i1Delay10TCYx@unit stored from wreg
  6508  001A72  6E01               	movwf	i1Delay10TCYx@unit,c
  6509  001A74  0E03               	movlw	3
  6510  001A76                     i1u341_27:
  6511  001A76  2EE8               	decfsz	wreg,f,c
  6512  001A78  D7FE               	bra	i1u341_27
  6513  001A7A  F000               	nop	
  6514  001A7C  2E01               	decfsz	i1Delay10TCYx@unit,f,c
  6515  001A7E  D7FA               	goto	i1l3294
  6516  001A80  0012               	return	
  6517  001A82                     __end_ofi1_Delay10TCYx:
  6518                           	opt stack 0
  6519                           pclatu	equ	0xFFB
  6520                           pclath	equ	0xFFA
  6521                           tblptru	equ	0xFF8
  6522                           tblptrh	equ	0xFF7
  6523                           tblptrl	equ	0xFF6
  6524                           tablat	equ	0xFF5
  6525                           prodh	equ	0xFF4
  6526                           prodl	equ	0xFF3
  6527                           intcon	equ	0xFF2
  6528                           postinc0	equ	0xFEE
  6529                           fsr0h	equ	0xFEA
  6530                           fsr0l	equ	0xFE9
  6531                           wreg	equ	0xFE8
  6532                           indf1	equ	0xFE7
  6533                           postdec1	equ	0xFE5
  6534                           fsr1h	equ	0xFE2
  6535                           fsr1l	equ	0xFE1
  6536                           bsr	equ	0xFE0
  6537                           indf2	equ	0xFDF
  6538                           postinc2	equ	0xFDE
  6539                           postdec2	equ	0xFDD
  6540                           fsr2h	equ	0xFDA
  6541                           fsr2l	equ	0xFD9
  6542                           status	equ	0xFD8
  6543                           pclatu	equ	0xFFB
  6544                           pclath	equ	0xFFA
  6545                           tblptru	equ	0xFF8
  6546                           tblptrh	equ	0xFF7
  6547                           tblptrl	equ	0xFF6
  6548                           tablat	equ	0xFF5
  6549                           prodh	equ	0xFF4
  6550                           prodl	equ	0xFF3
  6551                           intcon	equ	0xFF2
  6552                           postinc0	equ	0xFEE
  6553                           fsr0h	equ	0xFEA
  6554                           fsr0l	equ	0xFE9
  6555                           wreg	equ	0xFE8
  6556                           indf1	equ	0xFE7
  6557                           postdec1	equ	0xFE5
  6558                           fsr1h	equ	0xFE2
  6559                           fsr1l	equ	0xFE1
  6560                           bsr	equ	0xFE0
  6561                           indf2	equ	0xFDF
  6562                           postinc2	equ	0xFDE
  6563                           postdec2	equ	0xFDD
  6564                           fsr2h	equ	0xFDA
  6565                           fsr2l	equ	0xFD9
  6566                           status	equ	0xFD8
  6567                           
  6568                           	psect	rparam
  6569  0000                     pclatu	equ	0xFFB
  6570                           pclath	equ	0xFFA
  6571                           tblptru	equ	0xFF8
  6572                           tblptrh	equ	0xFF7
  6573                           tblptrl	equ	0xFF6
  6574                           tablat	equ	0xFF5
  6575                           prodh	equ	0xFF4
  6576                           prodl	equ	0xFF3
  6577                           intcon	equ	0xFF2
  6578                           postinc0	equ	0xFEE
  6579                           fsr0h	equ	0xFEA
  6580                           fsr0l	equ	0xFE9
  6581                           wreg	equ	0xFE8
  6582                           indf1	equ	0xFE7
  6583                           postdec1	equ	0xFE5
  6584                           fsr1h	equ	0xFE2
  6585                           fsr1l	equ	0xFE1
  6586                           bsr	equ	0xFE0
  6587                           indf2	equ	0xFDF
  6588                           postinc2	equ	0xFDE
  6589                           postdec2	equ	0xFDD
  6590                           fsr2h	equ	0xFDA
  6591                           fsr2l	equ	0xFD9
  6592                           status	equ	0xFD8
  6593                           
  6594                           	psect	temp
  6595  000049                     btemp:
  6596                           	opt stack 0
  6597  000049                     	ds	1
  6598  0000                     int$flags	set	btemp
  6599                           pclatu	equ	0xFFB
  6600                           pclath	equ	0xFFA
  6601                           tblptru	equ	0xFF8
  6602                           tblptrh	equ	0xFF7
  6603                           tblptrl	equ	0xFF6
  6604                           tablat	equ	0xFF5
  6605                           prodh	equ	0xFF4
  6606                           prodl	equ	0xFF3
  6607                           intcon	equ	0xFF2
  6608                           postinc0	equ	0xFEE
  6609                           fsr0h	equ	0xFEA
  6610                           fsr0l	equ	0xFE9
  6611                           wreg	equ	0xFE8
  6612                           indf1	equ	0xFE7
  6613                           postdec1	equ	0xFE5
  6614                           fsr1h	equ	0xFE2
  6615                           fsr1l	equ	0xFE1
  6616                           bsr	equ	0xFE0
  6617                           indf2	equ	0xFDF
  6618                           postinc2	equ	0xFDE
  6619                           postdec2	equ	0xFDD
  6620                           fsr2h	equ	0xFDA
  6621                           fsr2l	equ	0xFD9
  6622                           status	equ	0xFD8


Data Sizes:
    Strings     67
    Constant    10
    Data        19
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      72
    BANK0           160     19      57
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    memcpy@d1	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), 

    memcpy@s1	PTR const void  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> pegaHoraData(COMRAM[3]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[17]), STR_5(CODE[7]), 
		 -> STR_4(CODE[7]), versao(BANK0[6]), STR_3(CODE[9]), STR_2(CODE[17]), 
		 -> horarioDespertador(COMRAM[6]), data_horario.data(BANK0[7]), data_horario.horario(BANK0[9]), data_horario(BANK0[20]), 
		 -> converteAnoString@anoStr(BANK0[4]), BUFFCOM(COMRAM[7]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 4
		 -> converteAnoString@anoStr(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), 

    crc16@data_p	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), BUFFCOM(COMRAM[7]), 

    sp__converteAnoString	PTR unsigned char  size(2) Largest target is 4
		 -> converteAnoString@anoStr(BANK0[4]), 


Critical Paths under _main in COMRAM

    _trata_relogio_data->_verificaAnoBissexto
    _verificaAnoBissexto->___awmod
    _verificaCRCBUFFCOM->_crc16
    _memcpy->_strlen
    _calculaCRCBUFFRESP->_crc16
    _atualiza_Tela->_putrsXLCD
    _putrsXLCD->_converteAnoString
    _converteAnoString->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _DelayFor18TCY->_Delay10TCYx

Critical Paths under _pic_isr in COMRAM

    _printaDisplay->i1_SetDDRamAddr
    i1_putrsXLCD->i1_WriteDataXLCD
    i1_DelayFor18TCY->i1_Delay10TCYx

Critical Paths under _main in BANK0

    _main->_atualiza_Tela
    _setaDespertador->_atualiza_Tela
    _trataComando->_atualiza_Tela
    _atualiza_Tela->_converteAnoString
    _putrsXLCD->_converteAnoString
    _converteAnoString->_sprintf

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   18697
                                             18 BANK0      1     1      0
                       _Delay10KTCYx
                      _atualiza_Tela
                          _init_XLCD
                      _maquinaEstado
                    _setaDespertador
                 _trata_relogio_data
 ---------------------------------------------------------------------------------
 (1) _trata_relogio_data                                   5     5      0    1835
                                             32 COMRAM     5     5      0
                _verificaAnoBissexto
 ---------------------------------------------------------------------------------
 (2) _verificaAnoBissexto                                  4     2      2    1835
                                             28 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _setaDespertador                                      0     0      0    3147
                       _Delay10KTCYx
                      _atualiza_Tela
 ---------------------------------------------------------------------------------
 (1) _maquinaEstado                                        0     0      0   10066
                          _enviaByte
                       _trataComando
                            _tx_data
                 _verificaCRCBUFFCOM
 ---------------------------------------------------------------------------------
 (2) _verificaCRCBUFFCOM                                   9     9      0     945
                                             35 COMRAM     2     2      0
                                              0 BANK0      7     7      0
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      99
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trataComando                                         0     0      0    8960
                            ___awdiv
                            ___awmod
                               _atoi
                      _atualiza_Tela
                 _calculaCRCBUFFRESP
                             _memcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     207
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     405
                                             28 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _calculaCRCBUFFRESP                                   2     2      0     840
                                             35 COMRAM     2     2      0
                              _crc16
 ---------------------------------------------------------------------------------
 (3) _crc16                                               13     9      4     775
                                             22 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _atualiza_Tela                                        1     1      0    3116
                                             17 BANK0      1     1      0
                       _SetDDRamAddr
                  _acionaDespertador
                  _converteAnoString
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (3) _putrsXLCD                                            2     0      2    1155
                                             37 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
                  _converteAnoString (ARG)
 ---------------------------------------------------------------------------------
 (4) _WriteDataXLCD                                        1     1      0      93
                                             23 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _converteAnoString                                    6     4      2    1837
                                             35 COMRAM     2     0      2
                                             13 BANK0      4     4      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             23    17      6    1631
                                             34 COMRAM     1     1      0
                                              0 BANK0     13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     386
                                             29 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     395
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _acionaDespertador                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1358
                                             28 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1665
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1369
                                             22 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _enviaByte                                            1     1      0      62
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     434
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     310
                                             27 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      93
                                             23 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      93
                                             23 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      31
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      31
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _BusyXLCD                                             0     0      0      31
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0      31
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (6) _Delay10TCYx                                          1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _pic_isr                                             17    17      0     317
                                              5 COMRAM    17    17      0
                      _printaDisplay
 ---------------------------------------------------------------------------------
 (9) _printaDisplay                                        0     0      0     317
                     i1_SetDDRamAddr
                        i1_putrsXLCD
 ---------------------------------------------------------------------------------
 (10) i1_putrsXLCD                                         2     0      2     224
                                              2 COMRAM     2     0      2
                         i1_BusyXLCD
                    i1_WriteDataXLCD
 ---------------------------------------------------------------------------------
 (11) i1_WriteDataXLCD                                     1     1      0      93
                                              1 COMRAM     1     1      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (11) i1_BusyXLCD                                          0     0      0      31
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (10) i1_SetDDRamAddr                                      4     4      0      93
                                              1 COMRAM     4     4      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (12) i1_DelayFor18TCY                                     0     0      0      31
                      i1_Delay10TCYx
 ---------------------------------------------------------------------------------
 (13) i1_Delay10TCYx                                       1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay10KTCYx
   _atualiza_Tela
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     _acionaDespertador
     _converteAnoString
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _converteAnoString (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquinaEstado
     _enviaByte
     _trataComando
       ___awdiv
       ___awmod
       _atoi
         ___wmul
         _isdigit
       _atualiza_Tela
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _acionaDespertador
         _converteAnoString
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _converteAnoString (ARG)
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
       _calculaCRCBUFFRESP
         _crc16
       _memcpy
         _strlen (ARG)
       _strlen
     _tx_data
     _verificaCRCBUFFCOM
       _crc16
   _setaDespertador
     _Delay10KTCYx
     _atualiza_Tela
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _acionaDespertador
       _converteAnoString
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _converteAnoString (ARG)
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
   _trata_relogio_data
     _verificaAnoBissexto
       ___awmod

 _pic_isr (ROOT)
   _printaDisplay
     i1_SetDDRamAddr
       i1_DelayFor18TCY
         i1_Delay10TCYx
     i1_putrsXLCD
       i1_BusyXLCD
         i1_DelayFor18TCY
           i1_Delay10TCYx
       i1_WriteDataXLCD
         i1_DelayFor18TCY
           i1_Delay10TCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      39       5       35.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      48       1       76.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      81      20        0.0%
DATA                 0      0      81       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Jun 09 13:23:39 2018

            ??i1_SetDDRamAddr 0002                             _i 002F             i1putrsXLCD@buffer 0003  
           i1Delay10TCYx@unit 0001                  ___awdiv@sign 001C                            bsr 000FE0  
         ___wmul@multiplicand 0019                           l202 1068                           l214 19DC  
                         l230 0866                           l231 08AE                           l232 08E8  
                         l208 18EA                           l226 0852                           l228 085C  
                         l309 1884                           l572 1180                           l843 15F4  
                         l853 1720           __end_ofi1_putrsXLCD 1554         __size_of_WriteCmdXLCD 003E  
                ___awmod@sign 001C                           prod 000FF3                           wreg 000FE8  
                __CFG_WDT$OFF 000000                          l3200 0B82                          l3130 1A64  
                        l4010 126E                          l3220 0BDC                          l3212 0BB8  
                        l4012 1276                          l4004 1258                          l3142 15C2  
                        l3230 0C5C                          l4014 127E                          l3144 15CA  
                        l4016 1284                          l3154 15EA                          l3146 15CE  
                        l3170 1716                          l3162 16F6                          l3226 0C34  
                        l3218 0BD6                          l4050 16BE                          l4042 16A4  
                        l4034 12B4                          l3164 16FE                          l3228 0C40  
                        l4044 16AA                          l4036 12BC                          l4028 129E  
                        l3406 19D2                          l3166 1702                          l3182 0B1C  
                        l3334 14D0                          l4046 16B0                          l4054 16C6  
                        l4038 12C4                          l4134 0D46                          l3520 1114  
                        l3504 10BE                          l3176 0AFE                          l3328 149E  
                        l4048 16B6                          l4144 0D6C                          l3610 13FE  
                        l3602 13E4                          l3522 114A                          l3506 10C2  
                        l3362 1000                          l4146 0D76                          l3612 1406  
                        l3524 114E                          l3516 1102                          l3188 0B4C  
                        l3380 1072                          l3372 1022                          l3532 182E  
                        l3700 1474                          l4156 0D94                          l4148 0D80  
                        l3614 140A                          l3622 1428                          l3606 13F0  
                        l3198 0B7C                          l3454 0F1E                          l3542 173C  
                        l3534 1832                          l3480 0F96                          l3448 0EEC  
                        l3376 1062                          l3368 101A                          l3712 1498  
                        l3490 1A18                          l3298 1A54                          l3570 1306  
                        l3626 1436                          l3618 141E                          l3572 130E  
                        l3564 12F0                          l3548 1758                          l3820 0918  
                        l3708 1494                          l3742 11C2                          l3590 1346  
                        l3582 132E                          l3574 1312                          l3558 12E0  
                        l3830 0974                          l3760 120C                          l3752 11EC  
                        l3744 11CC                          l3488 0FD4                          l3824 091C  
                        l3586 1338                          l3834 09EE                          l3842 0AC0  
                        l3826 0938                          l3764 121C                          l3756 11FC  
                        l3748 11DC                          l3836 0A58                          l3828 0962  
                        l3772 18DA                          l3846 0ADC                          l3782 1904  
                        l3942 0E04                          l3792 19F2                          l3848 0AEA  
                        l3864 13BC                          l3868 13CA                          l3972 0E90  
                        l3982 0ECA                          l3958 0E3C                          l3986 19FE  
 __end_of_verificaAnoBissexto 149C                          STR_1 084B                          STR_2 081C  
                        STR_3 082D                          STR_4 083D                          STR_5 0844  
                        STR_6 080B                          STR_7 0837                          STR_8 0836  
                        u2430 14C8                          u2415 1614                          u2440 14F0  
                        u2437 14BE                          u3407 1A66                          u2447 14E6  
                        u3387 1A56                          _PEIE 007F96                          u3397 1A1E  
                        _RCIE 007CED                          _RCIF 007CF5                          _RCIP 007CFD  
                        _TMR0 000FD6                          _TXIF 007CF4                          _atoi 10BC  
                        _cont 002D                          _main 0C6A                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0049        __size_of_WriteDataXLCD 003E  
                        prodh 000FF4                          prodl 000FF3                          start 00F6  
           ??i1_WriteDataXLCD 0002        verificaCRCBUFFCOM@crc1 0074        verificaCRCBUFFCOM@crc2 0076  
                ___param_bank 000000                 _atualiza_Tela 0ED2                   _Delay10TCYx 1A62  
       _flagDespertadorLigado 002C                  _WriteCmdXLCD 17A8                   _Delay1KTCYx 1A52  
                       ?_atoi 001D                 ?_SetDDRamAddr 0001                         ?_main 0001  
             __end_of___awdiv 1350            _verificaCRCBUFFCOM 1350               __end_of___awmod 1440  
             ??_printaDisplay 0006               ___awdiv@divisor 0019               __end_of___lwdiv 15FE  
                       i1l122 0072                         i1l124 0080                         i1l128 00AE  
                       i1l309 18BE               __end_of___lwmod 172A               ___awdiv@counter 001B  
                       _RCREG 000FAE                         _RCSTA 000FAB                         _SPBRG 000FAF  
                       _PORTB 000F81                         _TRISB 000F93                         _TRISD 000F95  
                       _TXREG 000FAD         __size_of_Delay10KTCYx 0016                         _TXSTA 000FAC  
                       _crc16 0FEA           ?_verificaCRCBUFFCOM 0001                   ?i1_BusyXLCD 0001  
             __end_of_dpowers 080B               __end_of_isdigit 19DA               __end_of_pic_isr 00F6  
                       atoi@a 0022                         atoi@s 001D                         pclath 000FFA  
                       tablat 000FF5               __end_of_tx_data 190A                         status 000FD8  
             __end_of_sprintf 0C6A             ??_setaDespertador 0028               __initialization 1554  
              ?_atualiza_Tela 0001          ??_verificaCRCBUFFCOM 0024                  __end_of_atoi 118A  
                __end_of_main 0DA2         __end_ofi1_Delay10TCYx 1A82              __end_of_BusyXLCD 1898  
                _Delay10KTCYx 1A16                   i1_putrsXLCD 14F8         __size_of_DelayPORXLCD 0008  
              ??_SetDDRamAddr 0018    __end_of_trata_relogio_data 0ED2              __end_of_OpenXLCD 122E  
  __end_of_calculaCRCBUFFRESP 1996                        ??_atoi 001F                        ??_main 0028  
               __activetblptr 000002                 _WriteDataXLCD 176A      __size_ofi1_DelayFor18TCY 0008  
            _tempoDespertador 0029                        ?_crc16 0017                        _ADCON1 000FC1  
            ___awdiv@dividend 0017                        i1l4070 007C                        i1l3294 1A74  
                      i1l3872 14FA                        i1l3878 152C                        _TMR0IF 007F92  
                _DelayPORXLCD 1A82                        ___wmul 1996                     ??___awdiv 001B  
                      crc16@i 001F                     ??___awmod 001B        __size_of_maquinaEstado 0046  
                   ??___lwdiv 001B           __size_ofi1_BusyXLCD 003A                     ??___lwmod 0022  
                      _estado 0030                        _memcpy 172A                        clear_0 158C  
                      clear_1 1598              ___awdiv@quotient 001D               ___awmod@divisor 0019  
             ___awmod@counter 001B                        _versao 0093                ?_WriteDataXLCD 0001  
                      _strlen 1824     atualiza_Tela@troca_ou_nao 0085                  __pdataCOMRAM 0048  
                   ??_isdigit 0017                     ??_pic_isr 0006                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
           _converteAnoString 193E                     ??_tx_data 0017                     ??_sprintf 0023  
    verificaCRCBUFFCOM@CRC_OK 0078            ?_converteAnoString 0024                    __accesstop 0060  
     __end_of__initialization 159E               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
             ??_atualiza_Tela 0028         calculaCRCBUFFRESP@crc 0024           ??_converteAnoString 0026  
              __pcstackCOMRAM 0001                  __pidataBANK0 1A40                 __end_of_crc16 10BC  
                _data_horario 0060          i1SetDDRamAddr@DDaddr 0005     __end_of_converteAnoString 196C  
                     ??_crc16 001B               i1_WriteDataXLCD 17E6                 _maquinaEstado 16A2  
      __size_of_DelayFor18TCY 0008             ??i1_DelayFor18TCY 0002                    __pbssBANK0 0060  
          __size_of_enviaByte 001E                     ?_BusyXLCD 0001               WriteCmdXLCD@cmd 0018  
        __end_of_SetDDRamAddr 1650            __size_of_init_XLCD 001E                     ?_OpenXLCD 0001  
           WriteDataXLCD@data 0018                  ?_Delay10TCYx 0001                       ?___wmul 0017  
             ??_WriteDataXLCD 0018                  ?_Delay1KTCYx 0001                       ?_memcpy 001D  
      verificaAnoBissexto@ano 001D                       _BUFFCOM 0038                       ?_strlen 0017  
        converteAnoString@ano 0024                ?_maquinaEstado 0001                  ??i1_BusyXLCD 0002  
             _setaDespertador 122E            __size_of_putrsXLCD 005C                    ??_BusyXLCD 0018  
                  ??_OpenXLCD 001C  __size_of_verificaAnoBissexto 005C                       __Hparam 0000  
                     __Lparam 0000                       ___awdiv 12CC                 _DelayFor18TCY 1A8A  
                     ___awmod 13D0               __size_of___wmul 0026                       ___lwdiv 15AC  
                     ___lwmod 16E8                  ?i1_putrsXLCD 0003                  __psmallconst 0800  
          __end_ofi1_BusyXLCD 18D2             __end_of_enviaByte 19F8                       __pcinit 1554  
             __size_of_memcpy 0040               putrsXLCD@buffer 0026               Delay10TCYx@unit 0017  
                     __ramtop 0800                       __ptext0 0C6A                       __ptext1 0DA2  
                     __ptext2 1440                       __ptext3 122E                       __ptext4 16A2  
                     __ptext5 1350                       __ptext6 18D2                       __ptext7 0850  
                     __ptext8 1824                       __ptext9 172A             __end_of_init_XLCD 1A16  
                   _T0CONbits 000FD5       __end_ofi1_WriteDataXLCD 1824               __size_of_strlen 003A  
                     _dpowers 0801                       _isdigit 19BC                       _pic_isr 0018  
       __end_of_printaDisplay 1A40    __size_of_converteAnoString 002E              ___awmod@dividend 0017  
     __size_ofi1_SetDDRamAddr 0052                       _tx_data 18D2                       _sprintf 0AF0  
        end_of_initialization 159E            _trata_relogio_data 0DA2            _calculaCRCBUFFRESP 196C  
                     memcpy@d 0023                       memcpy@n 0021                       memcpy@s 0025  
               __Lmediumconst 0000                    _tela_atual 0028           ?_trata_relogio_data 0001  
         ?_calculaCRCBUFFRESP 0001                 enviaByte@BYTE 0017                ?_DelayFor18TCY 0001  
 __size_of_verificaCRCBUFFCOM 0080                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                       strlen@s 0017  
           __end_of_putrsXLCD 14F8                     _PORTCbits 000F82                     _PORTDbits 000F83  
        ??_trata_relogio_data 0021          ??_calculaCRCBUFFRESP 0024       __end_of_setaDespertador 12CC  
             ??_maquinaEstado 0028                     _TRISBbits 000F93                     _TRISCbits 000F94  
       __size_of_SetDDRamAddr 0052        __size_ofi1_Delay10TCYx 0010                 ?_trataComando 0001  
       verificaCRCBUFFCOM@crc 0079                __end_of___wmul 19BC          __size_of_Delay10TCYx 0010  
               __pidataCOMRAM 1A9A                __end_of_memcpy 176A                  _SetDDRamAddr 15FE  
             i1_DelayFor18TCY 1A92            _horarioDespertador 003F          __size_of_Delay1KTCYx 0010  
            ?i1_WriteDataXLCD 0001            SetDDRamAddr@DDaddr 001B                __end_of_strlen 185E  
         start_initialization 1554                ??_trataComando 0028             __size_of_BusyXLCD 003A  
                _pegaHoraData 0045               ??_DelayFor18TCY 0018         __end_of_atualiza_Tela 0FEA  
           __size_of_OpenXLCD 00A4                      ??___wmul 001B                 ?_WriteCmdXLCD 0001  
                 tx_data@cont 0017                 i1_Delay10TCYx 1A72                   __pdataBANK0 0087  
                    ??_memcpy 0023                   crc16@data_p 0017          __size_ofi1_putrsXLCD 005C  
                    ??_strlen 0019                   crc16@length 0019              ?_setaDespertador 0001  
              i1_SetDDRamAddr 1650                   __pbssCOMRAM 0028           _verificaAnoBissexto 1440  
               __pcstackBANK0 0074                  _isdigit$1098 0018               Delay1KTCYx@unit 0017  
                 sprintf@flag 007C                   sprintf@prec 007D                     crc16@data 0020  
        ?_verificaAnoBissexto 001D              ___lwdiv@dividend 0017       __end_ofi1_DelayFor18TCY 1A9A  
              ??_WriteCmdXLCD 0018                ?i1_Delay10TCYx 0001                      ?___awdiv 0017  
                    ?___awmod 0017                 ?_Delay10KTCYx 0001                      ?___lwdiv 0017  
                    ?___lwmod 001E                   __pintcodelo 0018                     _botaoHora 002B  
                 _flagSegundo 002E         __end_of_WriteDataXLCD 17A8        __end_ofi1_SetDDRamAddr 16A2  
                 __smallconst 0800                      ?_isdigit 0001                     _enviaByte 19DA  
                    ?_pic_isr 0001                     _init_XLCD 19F8                __size_of_crc16 00D2  
         i1WriteDataXLCD@data 0002              ___lwdiv@quotient 001C                      ?_tx_data 0001  
                    ?_sprintf 0074                      _BUFFRESP 0031             _acionaDespertador 190A  
          ?_acionaDespertador 0001                ___wmul@product 001B                      _LATBbits 000F8A  
       ??_verificaAnoBissexto 001F                 ?_DelayPORXLCD 0001                      i1u302_20 1524  
                    i1u302_27 151A                      i1u303_20 154C                      i1u303_27 1542  
                    i1u305_25 1666                      i1u341_27 1A76                      _PIR1bits 000F9E  
             OpenXLCD@lcdtype 001C           ??_acionaDespertador 0017                ??_Delay10KTCYx 0017  
           ___wmul@multiplier 0017               ?i1_SetDDRamAddr 0001          __end_of_trataComando 0AF0  
                   main@botao 0086                    ?_enviaByte 0001                     _putrsXLCD 149C  
            Delay10KTCYx@unit 0018                    ?_init_XLCD 0001     __end_of_acionaDespertador 193E  
                   copy_data0 1568                      _BusyXLCD 185E                ??_DelayPORXLCD 0018  
                    _OpenXLCD 118A    __end_of_verificaCRCBUFFCOM 13D0                      __Hrparam 0000  
             ??i1_Delay10TCYx 0001                      __Lrparam 0000        __size_of_printaDisplay 0014  
            ?i1_DelayFor18TCY 0001              __size_of___awdiv 0084              __size_of___awmod 0070  
            __size_of___lwdiv 0052              __size_of___lwmod 0042                    sprintf@val 007E  
                  ?_putrsXLCD 0026                      crc16@crc 0022   __size_of_trata_relogio_data 0130  
 __size_of_calculaCRCBUFFRESP 002A              __size_of_isdigit 001E              __size_of_pic_isr 00DE  
                    _dias_mes 0087               ___lwdiv@divisor 0019               ___lwdiv@counter 001B  
       __end_of_maquinaEstado 16E8                      __ptext10 196C                      __ptext11 0FEA  
                    __ptext20 10BC                      __ptext12 0ED2                      __ptext21 19BC  
                    __ptext13 149C                      __ptext30 1A82                      __ptext22 1996  
                    __ptext14 176A                      __ptext31 1A52                      __ptext23 13D0  
                    __ptext15 193E                      __ptext40 1898                      __ptext32 1A16  
                    __ptext24 12CC                      __ptext16 0AF0                      __ptext41 1650  
                    __ptext33 185E                      __ptext25 19DA                      __ptext17 16E8  
                    __ptext42 1A92                      __ptext34 1A8A                      __ptext26 19F8  
                    __ptext18 15AC                      __ptext43 1A72                      __ptext35 1A62  
                    __ptext27 118A                      __ptext19 190A                      __ptext28 17A8  
                    __ptext37 1A2C                      __ptext29 15FE                      __ptext38 14F8  
                    __ptext39 17E6                      _botaoMin 002A          __end_of_WriteCmdXLCD 17E6  
            __size_of_tx_data 0038              __size_of_sprintf 017A                 __size_of_atoi 00CE  
               __size_of_main 0138       converteAnoString@anoStr 0081                 ??_Delay10TCYx 0017  
                    int$flags 0049                      atoi@sign 0021                 ??_Delay1KTCYx 0017  
                    _virouDia 0048                   ??_enviaByte 0017                    _INTCONbits 000FF2  
                    memcpy@d1 001D                      memcpy@s1 001F                 _printaDisplay 1A2C  
                 ??_init_XLCD 001D    __size_of_acionaDespertador 0034                      isdigit@c 0019  
        __end_of_Delay10KTCYx 1A2C      __size_ofi1_WriteDataXLCD 003E                      intlevel1 0000  
                   sprintf@ap 007A                     sprintf@sp 0074              ___lwmod@dividend 001E  
       __end_of_DelayFor18TCY 1A92                 ??i1_putrsXLCD 0005         __size_of_trataComando 02A0  
         __end_of_Delay10TCYx 1A72                      sprintf@c 0080                      sprintf@f 0076  
        __end_of_DelayPORXLCD 1A8A                   ??_putrsXLCD 0028               ___lwmod@divisor 0020  
                    strlen@cp 001B                ?_printaDisplay 0001           __end_of_Delay1KTCYx 1A62  
             ___lwmod@counter 0022                    i1_BusyXLCD 1898        __size_of_atualiza_Tela 0118  
    __size_of_setaDespertador 009E                  _trataComando 0850  
