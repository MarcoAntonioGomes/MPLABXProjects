

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed May 23 10:46:22 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 1.41
    57                           ; Generated 25/01/2017 GMT
    58                           ; 
    59                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  001924                     __pidataCOMRAM:
    93                           	opt stack 0
    94                           
    95                           ;initializer for _virouDia
    96  001924  01                 	db	1
    97                           
    98                           ;initializer for _versao
    99  001925  30                 	db	48
   100  001926  31                 	db	49
   101  001927  2E                 	db	46
   102  001928  30                 	db	48
   103  001929  30                 	db	48
   104  00192A  00                 	db	0
   105                           
   106                           	psect	idataBANK0
   107  001908                     __pidataBANK0:
   108                           	opt stack 0
   109                           
   110                           ;initializer for _dias_mes
   111  001908  1F                 	db	31
   112  001909  1C                 	db	28
   113  00190A  1F                 	db	31
   114  00190B  1E                 	db	30
   115  00190C  1F                 	db	31
   116  00190D  1E                 	db	30
   117  00190E  1F                 	db	31
   118  00190F  1F                 	db	31
   119  001910  1E                 	db	30
   120  001911  1F                 	db	31
   121  001912  1E                 	db	30
   122  001913  1F                 	db	31
   123                           
   124                           	psect	smallconst
   125  000800                     __psmallconst:
   126                           	opt stack 0
   127  000800  00                 	db	0
   128  000801                     _dpowers:
   129                           	opt stack 0
   130  000801  0001               	dw	1
   131  000803  000A               	dw	10
   132  000805  0064               	dw	100
   133  000807  03E8               	dw	1000
   134  000809  2710               	dw	10000
   135  00080B                     __end_of_dpowers:
   136                           	opt stack 0
   137  0000                     _TMR0	set	4054
   138  0000                     _TRISBbits	set	3987
   139  0000                     _PORTB	set	3969
   140  0000                     _LATBbits	set	3978
   141  0000                     _T0CONbits	set	4053
   142  0000                     _TRISCbits	set	3988
   143  0000                     _TXSTA	set	4012
   144  0000                     _RCSTA	set	4011
   145  0000                     _SPBRG	set	4015
   146  0000                     _TRISC	set	3988
   147  0000                     _TRISD	set	3989
   148  0000                     _TRISB	set	3987
   149  0000                     _ADCON1	set	4033
   150  0000                     _TXREG	set	4013
   151  0000                     _PORTCbits	set	3970
   152  0000                     _PORTDbits	set	3971
   153  0000                     _RCREG	set	4014
   154  0000                     _PIR1bits	set	3998
   155  0000                     _INTCONbits	set	4082
   156  0000                     _PEIE	set	32662
   157  0000                     _RCIE	set	31981
   158  0000                     _RCIP	set	31997
   159  0000                     _TXIF	set	31988
   160  0000                     _RCIF	set	31989
   161  0000                     _TMR0IF	set	32658
   162  00080B                     STR_6:
   163  00080B  20                 	db	32
   164  00080C  20                 	db	32
   165  00080D  20                 	db	32
   166  00080E  20                 	db	32
   167  00080F  20                 	db	32
   168  000810  41                 	db	65	;'A'
   169  000811  4C                 	db	76	;'L'
   170  000812  41                 	db	65	;'A'
   171  000813  52                 	db	82	;'R'
   172  000814  4D                 	db	77	;'M'
   173  000815  45                 	db	69	;'E'
   174  000816  20                 	db	32
   175  000817  20                 	db	32
   176  000818  20                 	db	32
   177  000819  20                 	db	32
   178  00081A  20                 	db	32
   179  00081B  00                 	db	0
   180  00081C                     STR_2:
   181  00081C  44                 	db	68	;'D'
   182  00081D  65                 	db	101	;'e'
   183  00081E  73                 	db	115	;'s'
   184  00081F  70                 	db	112	;'p'
   185  000820  65                 	db	101	;'e'
   186  000821  72                 	db	114	;'r'
   187  000822  74                 	db	116	;'t'
   188  000823  61                 	db	97	;'a'
   189  000824  64                 	db	100	;'d'
   190  000825  6F                 	db	111	;'o'
   191  000826  72                 	db	114	;'r'
   192  000827  20                 	db	32
   193  000828  20                 	db	32
   194  000829  20                 	db	32
   195  00082A  20                 	db	32
   196  00082B  20                 	db	32
   197  00082C  00                 	db	0
   198  00082D                     STR_3:
   199  00082D  56                 	db	86	;'V'
   200  00082E  65                 	db	101	;'e'
   201  00082F  72                 	db	114	;'r'
   202  000830  73                 	db	115	;'s'
   203  000831  61                 	db	97	;'a'
   204  000832  6F                 	db	111	;'o'
   205  000833  3A                 	db	58	;':'
   206  000834  20                 	db	32
   207  000835  00                 	db	0
   208  000836                     STR_8:
   209  000836  20                 	db	32
   210  000837  20                 	db	32
   211  000838  20                 	db	32
   212  000839  20                 	db	32
   213  00083A  20                 	db	32
   214  00083B  20                 	db	32
   215  00083C  00                 	db	0
   216  00083D                     STR_4:
   217  00083D  48                 	db	72	;'H'
   218  00083E  6F                 	db	111	;'o'
   219  00083F  72                 	db	114	;'r'
   220  000840  61                 	db	97	;'a'
   221  000841  3A                 	db	58	;':'
   222  000842  20                 	db	32
   223  000843  00                 	db	0
   224  000844                     STR_5:
   225  000844  44                 	db	68	;'D'
   226  000845  61                 	db	97	;'a'
   227  000846  74                 	db	116	;'t'
   228  000847  61                 	db	97	;'a'
   229  000848  3A                 	db	58	;':'
   230  000849  20                 	db	32
   231  00084A  00                 	db	0
   232  00084B                     STR_1:
   233  00084B  25                 	db	37
   234  00084C  69                 	db	105	;'i'
   235  00084D  00                 	db	0
   236  0000                     
   237                           ; #config settings
   238  00084E  00                 	db	0	; dummy byte at the end
   239  0000                     
   240                           	psect	cinit
   241  0013CC                     __pcinit:
   242                           	opt stack 0
   243  0013CC                     start_initialization:
   244                           	opt stack 0
   245  0013CC                     __initialization:
   246                           	opt stack 0
   247                           
   248                           ; Initialize objects allocated to BANK0 (12 bytes)
   249                           ; load TBLPTR registers with __pidataBANK0
   250  0013CC  0E08               	movlw	low __pidataBANK0
   251  0013CE  6EF6               	movwf	tblptrl,c
   252  0013D0  0E19               	movlw	high __pidataBANK0
   253  0013D2  6EF7               	movwf	tblptrh,c
   254  0013D4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   255  0013D6  6EF8               	movwf	tblptru,c
   256  0013D8  EE00  F083         	lfsr	0,__pdataBANK0
   257  0013DC  EE10 F00C          	lfsr	1,12
   258  0013E0                     copy_data0:
   259  0013E0  0009               	tblrd		*+
   260  0013E2  CFF5 FFEE          	movff	tablat,postinc0
   261  0013E6  50E5               	movf	postdec1,w,c
   262  0013E8  50E1               	movf	fsr1l,w,c
   263  0013EA  E1FA               	bnz	copy_data0
   264                           
   265                           ; Initialize objects allocated to COMRAM (7 bytes)
   266                           ; load TBLPTR registers with __pidataCOMRAM
   267  0013EC  0E24               	movlw	low __pidataCOMRAM
   268  0013EE  6EF6               	movwf	tblptrl,c
   269  0013F0  0E19               	movlw	high __pidataCOMRAM
   270  0013F2  6EF7               	movwf	tblptrh,c
   271  0013F4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   272  0013F6  6EF8               	movwf	tblptru,c
   273  0013F8  EE00  F047         	lfsr	0,__pdataCOMRAM
   274  0013FC  EE10 F007          	lfsr	1,7
   275  001400                     copy_data1:
   276  001400  0009               	tblrd		*+
   277  001402  CFF5 FFEE          	movff	tablat,postinc0
   278  001406  50E5               	movf	postdec1,w,c
   279  001408  50E1               	movf	fsr1l,w,c
   280  00140A  E1FA               	bnz	copy_data1
   281                           
   282                           ; Clear objects allocated to BANK0 (20 bytes)
   283  00140C  EE00  F060         	lfsr	0,__pbssBANK0
   284  001410  0E14               	movlw	20
   285  001412                     clear_0:
   286  001412  6AEE               	clrf	postinc0,c
   287  001414  06E8               	decf	wreg,f,c
   288  001416  E1FD               	bnz	clear_0
   289                           
   290                           ; Clear objects allocated to COMRAM (32 bytes)
   291  001418  EE00  F027         	lfsr	0,__pbssCOMRAM
   292  00141C  0E20               	movlw	32
   293  00141E                     clear_1:
   294  00141E  6AEE               	clrf	postinc0,c
   295  001420  06E8               	decf	wreg,f,c
   296  001422  E1FD               	bnz	clear_1
   297  001424                     end_of_initialization:
   298                           	opt stack 0
   299  001424                     __end_of__initialization:
   300                           	opt stack 0
   301  001424  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   302  001426  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   303  001428  0E00               	movlw	low (__Lmediumconst shr (0+16))
   304  00142A  6EF8               	movwf	tblptru,c
   305  00142C  0100               	movlb	0
   306  00142E  EFC8  F006         	goto	_main	;jump to C main() function
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	bssCOMRAM
   317  000027                     __pbssCOMRAM:
   318                           	opt stack 0
   319  000027                     _tela_atual:
   320                           	opt stack 0
   321  000027                     	ds	1
   322  000028                     _tempoDespertador:
   323                           	opt stack 0
   324  000028                     	ds	1
   325  000029                     _botaoMin:
   326                           	opt stack 0
   327  000029                     	ds	1
   328  00002A                     _botaoHora:
   329                           	opt stack 0
   330  00002A                     	ds	1
   331  00002B                     _flagDespertadorLigado:
   332                           	opt stack 0
   333  00002B                     	ds	1
   334  00002C                     _cont:
   335                           	opt stack 0
   336  00002C                     	ds	1
   337  00002D                     _flagSegundo:
   338                           	opt stack 0
   339  00002D                     	ds	1
   340  00002E                     _i:
   341                           	opt stack 0
   342  00002E                     	ds	1
   343  00002F                     _estado:
   344                           	opt stack 0
   345  00002F                     	ds	1
   346  000030                     _BUFFRESP:
   347                           	opt stack 0
   348  000030                     	ds	7
   349  000037                     _BUFFCOM:
   350                           	opt stack 0
   351  000037                     	ds	7
   352  00003E                     _horarioDespertador:
   353                           	opt stack 0
   354  00003E                     	ds	6
   355  000044                     _pegaHoraData:
   356                           	opt stack 0
   357  000044                     	ds	3
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	dataCOMRAM
   368  000047                     __pdataCOMRAM:
   369                           	opt stack 0
   370  000047                     _virouDia:
   371                           	opt stack 0
   372  000047                     	ds	1
   373  000048                     _versao:
   374                           	opt stack 0
   375  000048                     	ds	6
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	bssBANK0
   386  000060                     __pbssBANK0:
   387                           	opt stack 0
   388  000060                     _data_horario:
   389                           	opt stack 0
   390  000060                     	ds	20
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postdec1	equ	0xFE5
   398                           fsr1l	equ	0xFE1
   399                           
   400                           	psect	dataBANK0
   401  000083                     __pdataBANK0:
   402                           	opt stack 0
   403  000083                     _dias_mes:
   404                           	opt stack 0
   405  000083                     	ds	12
   406                           tblptru	equ	0xFF8
   407                           tblptrh	equ	0xFF7
   408                           tblptrl	equ	0xFF6
   409                           tablat	equ	0xFF5
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           postdec1	equ	0xFE5
   413                           fsr1l	equ	0xFE1
   414                           
   415                           	psect	cstackBANK0
   416  000074                     __pcstackBANK0:
   417                           	opt stack 0
   418  000074                     sprintf@ap:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x0
   422  000074                     	ds	2
   423  000076                     sprintf@flag:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x2
   427  000076                     	ds	1
   428  000077                     sprintf@prec:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x3
   432  000077                     	ds	1
   433  000078                     sprintf@val:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x4
   437  000078                     	ds	2
   438  00007A                     sprintf@c:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x6
   442  00007A                     	ds	1
   443  00007B                     converteAnoString@anoStr:
   444                           	opt stack 0
   445                           
   446                           ; 4 bytes @ 0x7
   447  00007B                     	ds	4
   448  00007F                     putrsXLCD@buffer:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0xB
   452  00007F                     	ds	2
   453  000081                     atualiza_Tela@troca_ou_nao:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0xD
   457  000081                     	ds	1
   458  000082                     main@botao:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0xE
   462  000082                     	ds	1
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           
   472                           	psect	cstackCOMRAM
   473  000001                     __pcstackCOMRAM:
   474                           	opt stack 0
   475  000001                     ??_pic_isr:
   476  000001                     
   477                           ; 1 bytes @ 0x0
   478  000001                     	ds	17
   479  000012                     ??_Delay10KTCYx:
   480  000012                     ??_isdigit:
   481  000012                     ?_strlen:
   482                           	opt stack 0
   483  000012                     ?_crc16:
   484                           	opt stack 0
   485  000012                     ?___wmul:
   486                           	opt stack 0
   487  000012                     ?___awdiv:
   488                           	opt stack 0
   489  000012                     ?___awmod:
   490                           	opt stack 0
   491  000012                     ?___lwdiv:
   492                           	opt stack 0
   493  000012                     enviaByte@BYTE:
   494                           	opt stack 0
   495  000012                     Delay10TCYx@unit:
   496                           	opt stack 0
   497  000012                     Delay1KTCYx@unit:
   498                           	opt stack 0
   499  000012                     crc16@data_p:
   500                           	opt stack 0
   501  000012                     tx_data@cont:
   502                           	opt stack 0
   503  000012                     ___wmul@multiplier:
   504                           	opt stack 0
   505  000012                     ___awdiv@dividend:
   506                           	opt stack 0
   507  000012                     ___awmod@dividend:
   508                           	opt stack 0
   509  000012                     ___lwdiv@dividend:
   510                           	opt stack 0
   511  000012                     strlen@s:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x11
   515  000012                     	ds	1
   516  000013                     ??_SetDDRamAddr:
   517  000013                     WriteCmdXLCD@cmd:
   518                           	opt stack 0
   519  000013                     WriteDataXLCD@data:
   520                           	opt stack 0
   521  000013                     Delay10KTCYx@unit:
   522                           	opt stack 0
   523  000013                     _isdigit$1095:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x12
   527  000013                     	ds	1
   528  000014                     ??_strlen:
   529  000014                     isdigit@c:
   530                           	opt stack 0
   531  000014                     crc16@length:
   532                           	opt stack 0
   533  000014                     ___wmul@multiplicand:
   534                           	opt stack 0
   535  000014                     ___awdiv@divisor:
   536                           	opt stack 0
   537  000014                     ___awmod@divisor:
   538                           	opt stack 0
   539  000014                     ___lwdiv@divisor:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x13
   543  000014                     	ds	2
   544  000016                     ??_crc16:
   545  000016                     SetDDRamAddr@DDaddr:
   546                           	opt stack 0
   547  000016                     ___awdiv@counter:
   548                           	opt stack 0
   549  000016                     ___awmod@counter:
   550                           	opt stack 0
   551  000016                     ___lwdiv@counter:
   552                           	opt stack 0
   553  000016                     ___wmul@product:
   554                           	opt stack 0
   555  000016                     strlen@cp:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x15
   559  000016                     	ds	1
   560  000017                     OpenXLCD@lcdtype:
   561                           	opt stack 0
   562  000017                     ___awdiv@sign:
   563                           	opt stack 0
   564  000017                     ___awmod@sign:
   565                           	opt stack 0
   566  000017                     ___lwdiv@quotient:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x16
   570  000017                     	ds	1
   571  000018                     ?_atoi:
   572                           	opt stack 0
   573  000018                     verificaAnoBissexto@ano:
   574                           	opt stack 0
   575  000018                     atoi@s:
   576                           	opt stack 0
   577  000018                     ___awdiv@quotient:
   578                           	opt stack 0
   579  000018                     memcpy@d1:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x17
   583  000018                     	ds	1
   584  000019                     ?___lwmod:
   585                           	opt stack 0
   586  000019                     ___lwmod@dividend:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x18
   590  000019                     	ds	1
   591  00001A                     ??_atoi:
   592  00001A                     ??_verificaAnoBissexto:
   593  00001A                     crc16@i:
   594                           	opt stack 0
   595  00001A                     memcpy@s1:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x19
   599  00001A                     	ds	1
   600  00001B                     crc16@data:
   601                           	opt stack 0
   602  00001B                     ___lwmod@divisor:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x1A
   606  00001B                     	ds	1
   607  00001C                     ??_trata_relogio_data:
   608  00001C                     atoi@sign:
   609                           	opt stack 0
   610  00001C                     memcpy@n:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x1B
   614  00001C                     	ds	1
   615  00001D                     ___lwmod@counter:
   616                           	opt stack 0
   617  00001D                     crc16@crc:
   618                           	opt stack 0
   619  00001D                     atoi@a:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x1C
   623  00001D                     	ds	1
   624  00001E                     ?_sprintf:
   625                           	opt stack 0
   626  00001E                     sprintf@sp:
   627                           	opt stack 0
   628  00001E                     memcpy@d:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x1D
   632  00001E                     	ds	1
   633  00001F                     verificaCRCBUFFCOM@crc1:
   634                           	opt stack 0
   635  00001F                     calculaCRCBUFFRESP@crc:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x1E
   639  00001F                     	ds	1
   640  000020                     verificaCRCBUFFCOM@crc2:
   641                           	opt stack 0
   642  000020                     sprintf@f:
   643                           	opt stack 0
   644  000020                     memcpy@s:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x1F
   648  000020                     	ds	1
   649  000021                     verificaCRCBUFFCOM@CRC_OK:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x20
   653  000021                     	ds	1
   654  000022                     verificaCRCBUFFCOM@crc:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x21
   658  000022                     	ds	2
   659  000024                     ??_sprintf:
   660  000024                     
   661                           ; 1 bytes @ 0x23
   662  000024                     	ds	1
   663  000025                     ?_converteAnoString:
   664                           	opt stack 0
   665  000025                     converteAnoString@ano:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x24
   669  000025                     	ds	2
   670  000027                     tblptru	equ	0xFF8
   671                           tblptrh	equ	0xFF7
   672                           tblptrl	equ	0xFF6
   673                           tablat	equ	0xFF5
   674                           postinc0	equ	0xFEE
   675                           wreg	equ	0xFE8
   676                           postdec1	equ	0xFE5
   677                           fsr1l	equ	0xFE1
   678                           
   679                           ; 1 bytes @ 0x26
   680 ;;
   681 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   682 ;;
   683 ;; *************** function _main *****************
   684 ;; Defined at:
   685 ;;		line 584 in file "main.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  botao           1   14[BANK0 ] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   699 ;;      Params:         0       0       0       0       0       0       0       0       0
   700 ;;      Locals:         0       1       0       0       0       0       0       0       0
   701 ;;      Temps:          0       0       0       0       0       0       0       0       0
   702 ;;      Totals:         0       1       0       0       0       0       0       0       0
   703 ;;Total ram usage:        1 bytes
   704 ;; Hardware stack levels required when called:    7
   705 ;; This function calls:
   706 ;;		_Delay10KTCYx
   707 ;;		_atualiza_Tela
   708 ;;		_init_XLCD
   709 ;;		_maquinaEstado
   710 ;;		_setaDespertador
   711 ;;		_trata_relogio_data
   712 ;; This function is called by:
   713 ;;		Startup code after reset
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text0
   718  000D90                     __ptext0:
   719                           	opt stack 0
   720  000D90                     _main:
   721                           	opt stack 24
   722                           
   723                           ;main.c: 585: ADCON1 = 0x0F;
   724                           
   725                           ;incstack = 0
   726  000D90  0E0F               	movlw	15
   727  000D92  6EC1               	movwf	4033,c	;volatile
   728                           
   729                           ;main.c: 586: TRISB = 0x00;
   730  000D94  0E00               	movlw	0
   731  000D96  6E93               	movwf	3987,c	;volatile
   732                           
   733                           ;main.c: 587: TRISD = 0x00;
   734  000D98  0E00               	movlw	0
   735  000D9A  6E95               	movwf	3989,c	;volatile
   736                           
   737                           ;main.c: 588: TRISC = 0x01;
   738  000D9C  0E01               	movlw	1
   739  000D9E  6E94               	movwf	3988,c	;volatile
   740                           
   741                           ;main.c: 589: SPBRG=(((20000000/64)/9600)-1);
   742  000DA0  0E1F               	movlw	31
   743  000DA2  6EAF               	movwf	4015,c	;volatile
   744                           
   745                           ;main.c: 595: RCSTA = 0b10010000;
   746  000DA4  0E90               	movlw	144
   747  000DA6  6EAB               	movwf	4011,c	;volatile
   748                           
   749                           ;main.c: 596: TXSTA = 0b00100000;
   750  000DA8  0E20               	movlw	32
   751  000DAA  6EAC               	movwf	4012,c	;volatile
   752                           
   753                           ;main.c: 598: TRISCbits.RC6 = 0;
   754  000DAC  9C94               	bcf	3988,6,c	;volatile
   755                           
   756                           ;main.c: 599: TRISCbits.RC7 = 1;
   757  000DAE  8E94               	bsf	3988,7,c	;volatile
   758                           
   759                           ;main.c: 602: RCIF = 0;
   760  000DB0  9A9E               	bcf	3998,5,c	;volatile
   761                           
   762                           ;main.c: 603: RCIP = 0;
   763  000DB2  9A9F               	bcf	3999,5,c	;volatile
   764                           
   765                           ;main.c: 604: RCIE = 1;
   766  000DB4  8A9D               	bsf	3997,5,c	;volatile
   767                           
   768                           ;main.c: 605: PEIE = 1;
   769  000DB6  8CF2               	bsf	intcon,6,c	;volatile
   770                           
   771                           ;main.c: 606: char botao;
   772                           ;main.c: 610: data_horario.horario[0] = '2';
   773  000DB8  0E32               	movlw	50
   774  000DBA  0100               	movlb	0	; () banked
   775  000DBC  6F60               	movwf	_data_horario& (0+255),b
   776                           
   777                           ;main.c: 611: data_horario.horario[1] = '3';
   778  000DBE  0E33               	movlw	51
   779  000DC0  0100               	movlb	0	; () banked
   780  000DC2  6F61               	movwf	(_data_horario+1)& (0+255),b
   781                           
   782                           ;main.c: 612: data_horario.horario[2] = ':';
   783  000DC4  0E3A               	movlw	58
   784  000DC6  0100               	movlb	0	; () banked
   785  000DC8  6F62               	movwf	(_data_horario+2)& (0+255),b
   786                           
   787                           ;main.c: 613: data_horario.horario[3] = '5';
   788  000DCA  0E35               	movlw	53
   789  000DCC  0100               	movlb	0	; () banked
   790  000DCE  6F63               	movwf	(_data_horario+3)& (0+255),b
   791                           
   792                           ;main.c: 614: data_horario.horario[4] = '9';
   793  000DD0  0E39               	movlw	57
   794  000DD2  0100               	movlb	0	; () banked
   795  000DD4  6F64               	movwf	(_data_horario+4)& (0+255),b
   796                           
   797                           ;main.c: 615: data_horario.horario[5] = ':';
   798  000DD6  0E3A               	movlw	58
   799  000DD8  0100               	movlb	0	; () banked
   800  000DDA  6F65               	movwf	(_data_horario+5)& (0+255),b
   801                           
   802                           ;main.c: 616: data_horario.horario[6] = '5';
   803  000DDC  0E35               	movlw	53
   804  000DDE  0100               	movlb	0	; () banked
   805  000DE0  6F66               	movwf	(_data_horario+6)& (0+255),b
   806                           
   807                           ;main.c: 617: data_horario.horario[7] = '0';
   808  000DE2  0E30               	movlw	48
   809  000DE4  0100               	movlb	0	; () banked
   810  000DE6  6F67               	movwf	(_data_horario+7)& (0+255),b
   811                           
   812                           ;main.c: 618: data_horario.horario[8] = '\0';
   813  000DE8  0E00               	movlw	0
   814  000DEA  0100               	movlb	0	; () banked
   815  000DEC  6F68               	movwf	(_data_horario+8)& (0+255),b
   816                           
   817                           ;main.c: 620: data_horario.data[0] = '3';
   818  000DEE  0E33               	movlw	51
   819  000DF0  0100               	movlb	0	; () banked
   820  000DF2  6F69               	movwf	(_data_horario+9)& (0+255),b
   821                           
   822                           ;main.c: 621: data_horario.data[1] = '1';
   823  000DF4  0E31               	movlw	49
   824  000DF6  0100               	movlb	0	; () banked
   825  000DF8  6F6A               	movwf	(_data_horario+10)& (0+255),b
   826                           
   827                           ;main.c: 622: data_horario.data[2] = '/';
   828  000DFA  0E2F               	movlw	47
   829  000DFC  0100               	movlb	0	; () banked
   830  000DFE  6F6B               	movwf	(_data_horario+11)& (0+255),b
   831                           
   832                           ;main.c: 623: data_horario.data[3] = '1';
   833  000E00  0E31               	movlw	49
   834  000E02  0100               	movlb	0	; () banked
   835  000E04  6F6C               	movwf	(_data_horario+12)& (0+255),b
   836                           
   837                           ;main.c: 624: data_horario.data[4] = '2';
   838  000E06  0E32               	movlw	50
   839  000E08  0100               	movlb	0	; () banked
   840  000E0A  6F6D               	movwf	(_data_horario+13)& (0+255),b
   841                           
   842                           ;main.c: 625: data_horario.data[5] = '/';
   843  000E0C  0E2F               	movlw	47
   844  000E0E  0100               	movlb	0	; () banked
   845  000E10  6F6E               	movwf	(_data_horario+14)& (0+255),b
   846                           
   847                           ;main.c: 626: data_horario.data[6] = '\0';
   848  000E12  0E00               	movlw	0
   849  000E14  0100               	movlb	0	; () banked
   850  000E16  6F6F               	movwf	(_data_horario+15)& (0+255),b
   851                           
   852                           ;main.c: 627: data_horario.ano = 2018;
   853  000E18  0E07               	movlw	7
   854  000E1A  0100               	movlb	0	; () banked
   855  000E1C  6F73               	movwf	(_data_horario+19)& (0+255),b
   856  000E1E  0EE2               	movlw	226
   857  000E20  6F72               	movwf	(_data_horario+18)& (0+255),b
   858                           
   859                           ;main.c: 628: data_horario.dias = 31;
   860  000E22  0E1F               	movlw	31
   861  000E24  0100               	movlb	0	; () banked
   862  000E26  6F70               	movwf	(_data_horario+16)& (0+255),b
   863                           
   864                           ;main.c: 629: data_horario.mes_atual = 11;
   865  000E28  0E0B               	movlw	11
   866  000E2A  0100               	movlb	0	; () banked
   867  000E2C  6F71               	movwf	(_data_horario+17)& (0+255),b
   868                           
   869                           ;main.c: 631: horarioDespertador[0] = '0';
   870  000E2E  0E30               	movlw	48
   871  000E30  6E3E               	movwf	_horarioDespertador,c
   872                           
   873                           ;main.c: 632: horarioDespertador[1] = '0';
   874  000E32  0E30               	movlw	48
   875  000E34  6E3F               	movwf	_horarioDespertador+1,c
   876                           
   877                           ;main.c: 633: horarioDespertador[2] = ':';
   878  000E36  0E3A               	movlw	58
   879  000E38  6E40               	movwf	_horarioDespertador+2,c
   880                           
   881                           ;main.c: 634: horarioDespertador[3] = '0';
   882  000E3A  0E30               	movlw	48
   883  000E3C  6E41               	movwf	_horarioDespertador+3,c
   884                           
   885                           ;main.c: 635: horarioDespertador[4] = '1';
   886  000E3E  0E31               	movlw	49
   887  000E40  6E42               	movwf	_horarioDespertador+4,c
   888                           
   889                           ;main.c: 636: horarioDespertador[5] = '\0';
   890  000E42  0E00               	movlw	0
   891  000E44  6E43               	movwf	_horarioDespertador+5,c
   892                           
   893                           ; BSR set to: 0
   894                           ;main.c: 638: T0CONbits.TMR0ON = 0;
   895  000E46  9ED5               	bcf	4053,7,c	;volatile
   896                           
   897                           ; BSR set to: 0
   898                           ;main.c: 639: INTCONbits.TMR0IE = 1;
   899  000E48  8AF2               	bsf	intcon,5,c	;volatile
   900                           
   901                           ; BSR set to: 0
   902                           ;main.c: 640: INTCONbits.TMR0IF = 0;
   903  000E4A  94F2               	bcf	intcon,2,c	;volatile
   904                           
   905                           ; BSR set to: 0
   906                           ;main.c: 641: T0CONbits.T08BIT = 0;
   907  000E4C  9CD5               	bcf	4053,6,c	;volatile
   908                           
   909                           ; BSR set to: 0
   910                           ;main.c: 642: T0CONbits.PSA = 0;
   911  000E4E  96D5               	bcf	4053,3,c	;volatile
   912                           
   913                           ; BSR set to: 0
   914                           ;main.c: 643: T0CONbits.T0PS0 = 1;
   915  000E50  80D5               	bsf	4053,0,c	;volatile
   916                           
   917                           ; BSR set to: 0
   918                           ;main.c: 644: T0CONbits.T0PS1 = 0;
   919  000E52  92D5               	bcf	4053,1,c	;volatile
   920                           
   921                           ; BSR set to: 0
   922                           ;main.c: 645: T0CONbits.T0PS2 = 1;
   923  000E54  84D5               	bsf	4053,2,c	;volatile
   924                           
   925                           ; BSR set to: 0
   926                           ;main.c: 646: T0CONbits.T0CS = 0;
   927  000E56  9AD5               	bcf	4053,5,c	;volatile
   928                           
   929                           ;main.c: 647: TMR0 = 26474;
   930  000E58  0E67               	movlw	103
   931  000E5A  6ED7               	movwf	4055,c	;volatile
   932  000E5C  0E6A               	movlw	106
   933  000E5E  6ED6               	movwf	4054,c	;volatile
   934                           
   935                           ; BSR set to: 0
   936                           ;main.c: 648: T0CONbits.TMR0ON = 1;
   937  000E60  8ED5               	bsf	4053,7,c	;volatile
   938                           
   939                           ; BSR set to: 0
   940                           ;main.c: 649: INTCONbits.GIEH = 1;
   941  000E62  8EF2               	bsf	intcon,7,c	;volatile
   942                           
   943                           ; BSR set to: 0
   944                           ;main.c: 650: INTCONbits.GIEL = 1;
   945  000E64  8CF2               	bsf	intcon,6,c	;volatile
   946                           
   947                           ; BSR set to: 0
   948                           ;main.c: 653: init_XLCD();
   949  000E66  EC5A  F00C         	call	_init_XLCD	;wreg free
   950  000E6A                     l3726:
   951                           
   952                           ;main.c: 657: maquinaEstado();
   953  000E6A  ECEF  F00A         	call	_maquinaEstado	;wreg free
   954                           
   955                           ;main.c: 658: botao = PORTCbits.RC0;
   956  000E6E  0E00               	movlw	0
   957  000E70  B082               	btfsc	3970,0,c	;volatile
   958  000E72  0E01               	movlw	1
   959  000E74  0100               	movlb	0	; () banked
   960  000E76  6F82               	movwf	main@botao& (0+255),b
   961                           
   962                           ; BSR set to: 0
   963                           ;main.c: 659: if(botao){
   964  000E78  0100               	movlb	0	; () banked
   965  000E7A  5182               	movf	main@botao& (0+255),w,b
   966  000E7C  0100               	movlb	0	; () banked
   967  000E7E  B4D8               	btfsc	status,2,c
   968  000E80  D011               	goto	l3740
   969                           
   970                           ; BSR set to: 0
   971                           ;main.c: 660: Delay10KTCYx(180);
   972  000E82  0EB4               	movlw	180
   973  000E84  EC69  F00C         	call	_Delay10KTCYx
   974                           
   975                           ;main.c: 662: atualiza_Tela(1);
   976  000E88  0E01               	movlw	1
   977  000E8A  EC26  F006         	call	_atualiza_Tela
   978                           
   979                           ;main.c: 664: while(botao){
   980  000E8E  D005               	goto	l3738
   981  000E90                     l3736:
   982                           
   983                           ;main.c: 665: botao = PORTCbits.RC0;
   984  000E90  0E00               	movlw	0
   985  000E92  B082               	btfsc	3970,0,c	;volatile
   986  000E94  0E01               	movlw	1
   987  000E96  0100               	movlb	0	; () banked
   988  000E98  6F82               	movwf	main@botao& (0+255),b
   989  000E9A                     l3738:
   990  000E9A  0100               	movlb	0	; () banked
   991  000E9C  5182               	movf	main@botao& (0+255),w,b
   992  000E9E  0100               	movlb	0	; () banked
   993  000EA0  A4D8               	btfss	status,2,c
   994  000EA2  D7F6               	goto	l3736
   995  000EA4                     l3740:
   996                           
   997                           ; BSR set to: 0
   998                           ;main.c: 666: }
   999                           ;main.c: 667: }
  1000                           ;main.c: 669: if(flagSegundo){
  1001  000EA4  502D               	movf	_flagSegundo,w,c
  1002  000EA6  B4D8               	btfsc	status,2,c
  1003  000EA8  D007               	goto	l3748
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;main.c: 671: atualiza_Tela(0);
  1007  000EAA  0E00               	movlw	0
  1008  000EAC  EC26  F006         	call	_atualiza_Tela
  1009                           
  1010                           ;main.c: 672: trata_relogio_data();
  1011  000EB0  EC63  F007         	call	_trata_relogio_data	;wreg free
  1012                           
  1013                           ;main.c: 673: flagSegundo=0;
  1014  000EB4  0E00               	movlw	0
  1015  000EB6  6E2D               	movwf	_flagSegundo,c
  1016  000EB8                     l3748:
  1017                           
  1018                           ;main.c: 675: }
  1019                           ;main.c: 676: if(tela_atual == 2){
  1020  000EB8  0E02               	movlw	2
  1021  000EBA  1827               	xorwf	_tela_atual,w,c
  1022  000EBC  A4D8               	btfss	status,2,c
  1023  000EBE  D7D5               	goto	l3726
  1024                           
  1025                           ;main.c: 677: setaDespertador();
  1026  000EC0  EC1D  F009         	call	_setaDespertador	;wreg free
  1027  000EC4  D7D2               	goto	l3726
  1028  000EC6                     __end_of_main:
  1029                           	opt stack 0
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           intcon	equ	0xFF2
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           postdec1	equ	0xFE5
  1038                           fsr1l	equ	0xFE1
  1039                           status	equ	0xFD8
  1040                           
  1041 ;; *************** function _trata_relogio_data *****************
  1042 ;; Defined at:
  1043 ;;		line 159 in file "main.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1057 ;;      Params:         0       0       0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1059 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1060 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1061 ;;Total ram usage:        5 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    3
  1064 ;; This function calls:
  1065 ;;		_verificaAnoBissexto
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text1
  1072  000EC6                     __ptext1:
  1073                           	opt stack 0
  1074  000EC6                     _trata_relogio_data:
  1075                           	opt stack 27
  1076                           
  1077                           ;main.c: 160: data_horario.horario[7]++;
  1078                           
  1079                           ;incstack = 0
  1080  000EC6  0100               	movlb	0	; () banked
  1081  000EC8  2B67               	incf	(_data_horario+7)& (0+255),f,b
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;main.c: 161: if(data_horario.horario[7]>'9'){
  1085  000ECA  0E39               	movlw	57
  1086  000ECC  0100               	movlb	0	; () banked
  1087  000ECE  6567               	cpfsgt	(_data_horario+7)& (0+255),b
  1088  000ED0  0012               	return	
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;main.c: 162: data_horario.horario[7]='0';
  1092  000ED2  0E30               	movlw	48
  1093  000ED4  0100               	movlb	0	; () banked
  1094  000ED6  6F67               	movwf	(_data_horario+7)& (0+255),b
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;main.c: 163: data_horario.horario[6]++;
  1098  000ED8  0100               	movlb	0	; () banked
  1099  000EDA  2B66               	incf	(_data_horario+6)& (0+255),f,b
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;main.c: 164: if(data_horario.horario[6]>'5'){
  1103  000EDC  0E35               	movlw	53
  1104  000EDE  0100               	movlb	0	; () banked
  1105  000EE0  6566               	cpfsgt	(_data_horario+6)& (0+255),b
  1106  000EE2  0012               	return	
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;main.c: 165: data_horario.horario[6] ='0';
  1110  000EE4  0E30               	movlw	48
  1111  000EE6  0100               	movlb	0	; () banked
  1112  000EE8  6F66               	movwf	(_data_horario+6)& (0+255),b
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;main.c: 166: data_horario.horario[4]++;
  1116  000EEA  0100               	movlb	0	; () banked
  1117  000EEC  2B64               	incf	(_data_horario+4)& (0+255),f,b
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;main.c: 167: virouDia = 1;
  1121  000EEE  0E01               	movlw	1
  1122  000EF0  6E47               	movwf	_virouDia,c
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;main.c: 168: if(data_horario.horario[4]>'9'){
  1126  000EF2  0E39               	movlw	57
  1127  000EF4  0100               	movlb	0	; () banked
  1128  000EF6  6564               	cpfsgt	(_data_horario+4)& (0+255),b
  1129  000EF8  0012               	return	
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;main.c: 169: data_horario.horario[4] ='0';
  1133  000EFA  0E30               	movlw	48
  1134  000EFC  0100               	movlb	0	; () banked
  1135  000EFE  6F64               	movwf	(_data_horario+4)& (0+255),b
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;main.c: 170: data_horario.horario[3]++;
  1139  000F00  0100               	movlb	0	; () banked
  1140  000F02  2B63               	incf	(_data_horario+3)& (0+255),f,b
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;main.c: 171: if( data_horario.horario[3]>'5'){
  1144  000F04  0E35               	movlw	53
  1145  000F06  0100               	movlb	0	; () banked
  1146  000F08  6563               	cpfsgt	(_data_horario+3)& (0+255),b
  1147  000F0A  0012               	return	
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;main.c: 172: data_horario.horario[3] ='0';
  1151  000F0C  0E30               	movlw	48
  1152  000F0E  0100               	movlb	0	; () banked
  1153  000F10  6F63               	movwf	(_data_horario+3)& (0+255),b
  1154                           
  1155                           ; BSR set to: 0
  1156                           ;main.c: 173: data_horario.horario[1]++;
  1157  000F12  0100               	movlb	0	; () banked
  1158  000F14  2B61               	incf	(_data_horario+1)& (0+255),f,b
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;main.c: 174: if( data_horario.horario[1]> '9'){
  1162  000F16  0E39               	movlw	57
  1163  000F18  0100               	movlb	0	; () banked
  1164  000F1A  6561               	cpfsgt	(_data_horario+1)& (0+255),b
  1165  000F1C  D005               	goto	l3568
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;main.c: 175: data_horario.horario[1]= '0';
  1169  000F1E  0E30               	movlw	48
  1170  000F20  0100               	movlb	0	; () banked
  1171  000F22  6F61               	movwf	(_data_horario+1)& (0+255),b
  1172                           
  1173                           ; BSR set to: 0
  1174                           ;main.c: 176: data_horario.horario[0]++;
  1175  000F24  0100               	movlb	0	; () banked
  1176  000F26  2B60               	incf	_data_horario& (0+255),f,b
  1177  000F28                     l3568:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;main.c: 177: }
  1181                           ;main.c: 178: if( data_horario.horario[0] == '2' && data_horario.horario[1] > '3'){
  1182  000F28  0E32               	movlw	50
  1183  000F2A  0100               	movlb	0	; () banked
  1184  000F2C  1960               	xorwf	_data_horario& (0+255),w,b
  1185  000F2E  A4D8               	btfss	status,2,c
  1186  000F30  0012               	return	
  1187                           
  1188                           ; BSR set to: 0
  1189  000F32  0E33               	movlw	51
  1190  000F34  0100               	movlb	0	; () banked
  1191  000F36  6561               	cpfsgt	(_data_horario+1)& (0+255),b
  1192  000F38  0012               	return	
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;main.c: 179: data_horario.horario[0] = '0';
  1196  000F3A  0E30               	movlw	48
  1197  000F3C  0100               	movlb	0	; () banked
  1198  000F3E  6F60               	movwf	_data_horario& (0+255),b
  1199                           
  1200                           ;main.c: 180: data_horario.horario[1] = '0';
  1201  000F40  0E30               	movlw	48
  1202  000F42  0100               	movlb	0	; () banked
  1203  000F44  6F61               	movwf	(_data_horario+1)& (0+255),b
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;main.c: 181: data_horario.data[1]++;
  1207  000F46  0100               	movlb	0	; () banked
  1208  000F48  2B6A               	incf	(_data_horario+10)& (0+255),f,b
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;main.c: 182: data_horario.dias++;
  1212  000F4A  0100               	movlb	0	; () banked
  1213  000F4C  2B70               	incf	(_data_horario+16)& (0+255),f,b
  1214                           
  1215                           ; BSR set to: 0
  1216                           ;main.c: 183: if(data_horario.data[1]>'9'){
  1217  000F4E  0E39               	movlw	57
  1218  000F50  0100               	movlb	0	; () banked
  1219  000F52  656A               	cpfsgt	(_data_horario+10)& (0+255),b
  1220  000F54  D005               	goto	l3584
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;main.c: 184: data_horario.data[1]=0;
  1224  000F56  0E00               	movlw	0
  1225  000F58  0100               	movlb	0	; () banked
  1226  000F5A  6F6A               	movwf	(_data_horario+10)& (0+255),b
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;main.c: 185: data_horario.data[0]++;
  1230  000F5C  0100               	movlb	0	; () banked
  1231  000F5E  2B69               	incf	(_data_horario+9)& (0+255),f,b
  1232  000F60                     l3584:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;main.c: 186: }
  1236                           ;main.c: 187: if(data_horario.dias > dias_mes[data_horario.mes_atual-1]){
  1237  000F60  0EFF               	movlw	255
  1238  000F62  6E1C               	movwf	??_trata_relogio_data& (0+255),c
  1239  000F64  0EFF               	movlw	255
  1240  000F66  6E1D               	movwf	(??_trata_relogio_data+1)& (0+255),c
  1241  000F68  0100               	movlb	0	; () banked
  1242  000F6A  5171               	movf	(_data_horario+17)& (0+255),w,b
  1243  000F6C  6E1E               	movwf	(??_trata_relogio_data+2)& (0+255),c
  1244  000F6E  6A1F               	clrf	(??_trata_relogio_data+3)& (0+255),c
  1245  000F70  501C               	movf	??_trata_relogio_data,w,c
  1246  000F72  261E               	addwf	??_trata_relogio_data+2,f,c
  1247  000F74  501D               	movf	??_trata_relogio_data+1,w,c
  1248  000F76  221F               	addwfc	??_trata_relogio_data+3,f,c
  1249  000F78  0E83               	movlw	low _dias_mes
  1250  000F7A  241E               	addwf	??_trata_relogio_data+2,w,c
  1251  000F7C  6ED9               	movwf	fsr2l,c
  1252  000F7E  0E00               	movlw	high _dias_mes
  1253  000F80  201F               	addwfc	??_trata_relogio_data+3,w,c
  1254  000F82  6EDA               	movwf	fsr2h,c
  1255  000F84  0100               	movlb	0	; () banked
  1256  000F86  5170               	movf	(_data_horario+16)& (0+255),w,b
  1257  000F88  5CDE               	subwf	postinc2,w,c
  1258  000F8A  B0D8               	btfsc	status,0,c
  1259  000F8C  0012               	return	
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;main.c: 188: data_horario.data[1]= '1';
  1263  000F8E  0E31               	movlw	49
  1264  000F90  0100               	movlb	0	; () banked
  1265  000F92  6F6A               	movwf	(_data_horario+10)& (0+255),b
  1266                           
  1267                           ;main.c: 189: data_horario.data[0]='0';
  1268  000F94  0E30               	movlw	48
  1269  000F96  0100               	movlb	0	; () banked
  1270  000F98  6F69               	movwf	(_data_horario+9)& (0+255),b
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;main.c: 190: data_horario.mes_atual++;
  1274  000F9A  0100               	movlb	0	; () banked
  1275  000F9C  2B71               	incf	(_data_horario+17)& (0+255),f,b
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;main.c: 191: data_horario.data[4]++;
  1279  000F9E  0100               	movlb	0	; () banked
  1280  000FA0  2B6D               	incf	(_data_horario+13)& (0+255),f,b
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;main.c: 192: if( data_horario.data[4] >'9'){
  1284  000FA2  0E39               	movlw	57
  1285  000FA4  0100               	movlb	0	; () banked
  1286  000FA6  656D               	cpfsgt	(_data_horario+13)& (0+255),b
  1287  000FA8  D005               	goto	l3598
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;main.c: 193: data_horario.data[4] ='0';
  1291  000FAA  0E30               	movlw	48
  1292  000FAC  0100               	movlb	0	; () banked
  1293  000FAE  6F6D               	movwf	(_data_horario+13)& (0+255),b
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;main.c: 194: data_horario.data[3]++;
  1297  000FB0  0100               	movlb	0	; () banked
  1298  000FB2  2B6C               	incf	(_data_horario+12)& (0+255),f,b
  1299  000FB4                     l3598:
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;main.c: 195: }
  1303                           ;main.c: 196: if(data_horario.mes_atual >11){
  1304  000FB4  0E0B               	movlw	11
  1305  000FB6  0100               	movlb	0	; () banked
  1306  000FB8  6571               	cpfsgt	(_data_horario+17)& (0+255),b
  1307  000FBA  0012               	return	
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;main.c: 197: data_horario.data[4] ='1';
  1311  000FBC  0E31               	movlw	49
  1312  000FBE  0100               	movlb	0	; () banked
  1313  000FC0  6F6D               	movwf	(_data_horario+13)& (0+255),b
  1314                           
  1315                           ;main.c: 198: data_horario.data[3]='0';
  1316  000FC2  0E30               	movlw	48
  1317  000FC4  0100               	movlb	0	; () banked
  1318  000FC6  6F6C               	movwf	(_data_horario+12)& (0+255),b
  1319                           
  1320                           ;main.c: 199: data_horario.mes_atual =1;
  1321  000FC8  0E01               	movlw	1
  1322  000FCA  0100               	movlb	0	; () banked
  1323  000FCC  6F71               	movwf	(_data_horario+17)& (0+255),b
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;main.c: 200: data_horario.ano++;
  1327  000FCE  0100               	movlb	0	; () banked
  1328  000FD0  4B72               	infsnz	(_data_horario+18)& (0+255),f,b
  1329  000FD2  2B73               	incf	(_data_horario+19)& (0+255),f,b
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;main.c: 201: if(verificaAnoBissexto(data_horario.ano)){
  1333  000FD4  C072  F018         	movff	_data_horario+18,verificaAnoBissexto@ano
  1334  000FD8  C073  F019         	movff	_data_horario+19,verificaAnoBissexto@ano+1
  1335  000FDC  EC48  F00A         	call	_verificaAnoBissexto	;wreg free
  1336  000FE0  0900               	iorlw	0
  1337  000FE2  B4D8               	btfsc	status,2,c
  1338  000FE4  D004               	goto	l3608
  1339                           
  1340                           ;main.c: 202: dias_mes[1] = 29;
  1341  000FE6  0E1D               	movlw	29
  1342  000FE8  0100               	movlb	0	; () banked
  1343  000FEA  6F84               	movwf	(_dias_mes+1)& (0+255),b
  1344                           
  1345                           ;main.c: 203: }
  1346  000FEC  0012               	return	
  1347  000FEE                     l3608:
  1348                           
  1349                           ;main.c: 204: else
  1350                           ;main.c: 205: {
  1351                           ;main.c: 206: dias_mes[1] = 28;
  1352  000FEE  0E1C               	movlw	28
  1353  000FF0  0100               	movlb	0	; () banked
  1354  000FF2  6F84               	movwf	(_dias_mes+1)& (0+255),b
  1355                           
  1356                           ; BSR set to: 0
  1357                           
  1358                           ; BSR set to: 0
  1359                           
  1360                           ; BSR set to: 0
  1361                           
  1362                           ; BSR set to: 0
  1363                           
  1364                           ; BSR set to: 0
  1365                           
  1366                           ; BSR set to: 0
  1367                           
  1368                           ; BSR set to: 0
  1369  000FF4  0012               	return	
  1370  000FF6                     __end_of_trata_relogio_data:
  1371                           	opt stack 0
  1372                           tblptru	equ	0xFF8
  1373                           tblptrh	equ	0xFF7
  1374                           tblptrl	equ	0xFF6
  1375                           tablat	equ	0xFF5
  1376                           intcon	equ	0xFF2
  1377                           postinc0	equ	0xFEE
  1378                           wreg	equ	0xFE8
  1379                           postdec1	equ	0xFE5
  1380                           fsr1l	equ	0xFE1
  1381                           postinc2	equ	0xFDE
  1382                           fsr2h	equ	0xFDA
  1383                           fsr2l	equ	0xFD9
  1384                           status	equ	0xFD8
  1385                           
  1386 ;; *************** function _verificaAnoBissexto *****************
  1387 ;; Defined at:
  1388 ;;		line 131 in file "main.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  ano             2   23[COMRAM] int 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      unsigned char 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1402 ;;      Params:         2       0       0       0       0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1404 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1405 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1406 ;;Total ram usage:        4 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    2
  1409 ;; This function calls:
  1410 ;;		___awmod
  1411 ;; This function is called by:
  1412 ;;		_trata_relogio_data
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text2
  1417  001490                     __ptext2:
  1418                           	opt stack 0
  1419  001490                     _verificaAnoBissexto:
  1420                           	opt stack 27
  1421                           
  1422                           ;main.c: 132: if(ano % 4 == 0 ){
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;incstack = 0
  1426  001490  0E03               	movlw	3
  1427  001492  1418               	andwf	verificaAnoBissexto@ano,w,c
  1428  001494  6E1A               	movwf	??_verificaAnoBissexto& (0+255),c
  1429  001496  0E00               	movlw	0
  1430  001498  1419               	andwf	verificaAnoBissexto@ano+1,w,c
  1431  00149A  6E1B               	movwf	(??_verificaAnoBissexto+1)& (0+255),c
  1432  00149C  501A               	movf	??_verificaAnoBissexto,w,c
  1433  00149E  101B               	iorwf	??_verificaAnoBissexto+1,w,c
  1434  0014A0  A4D8               	btfss	status,2,c
  1435  0014A2  D022               	goto	l3328
  1436                           
  1437                           ;main.c: 133: if( ano % 100 != 0){
  1438  0014A4  C018  F012         	movff	verificaAnoBissexto@ano,___awmod@dividend
  1439  0014A8  C019  F013         	movff	verificaAnoBissexto@ano+1,___awmod@dividend+1
  1440  0014AC  0E00               	movlw	0
  1441  0014AE  6E15               	movwf	___awmod@divisor+1,c
  1442  0014B0  0E64               	movlw	100
  1443  0014B2  6E14               	movwf	___awmod@divisor,c
  1444  0014B4  ECAE  F009         	call	___awmod	;wreg free
  1445  0014B8  5012               	movf	?___awmod,w,c
  1446  0014BA  1013               	iorwf	?___awmod+1,w,c
  1447  0014BC  B4D8               	btfsc	status,2,c
  1448  0014BE  D002               	goto	l3316
  1449                           
  1450                           ;main.c: 134: return 1;
  1451  0014C0  0E01               	movlw	1
  1452                           
  1453                           ;main.c: 135: }
  1454  0014C2  0012               	return	
  1455  0014C4                     l3316:
  1456                           
  1457                           ;main.c: 136: else
  1458                           ;main.c: 137: {
  1459                           ;main.c: 138: if( ano % 400 != 0){
  1460  0014C4  C018  F012         	movff	verificaAnoBissexto@ano,___awmod@dividend
  1461  0014C8  C019  F013         	movff	verificaAnoBissexto@ano+1,___awmod@dividend+1
  1462  0014CC  0E01               	movlw	1
  1463  0014CE  6E15               	movwf	___awmod@divisor+1,c
  1464  0014D0  0E90               	movlw	144
  1465  0014D2  6E14               	movwf	___awmod@divisor,c
  1466  0014D4  ECAE  F009         	call	___awmod	;wreg free
  1467  0014D8  5012               	movf	?___awmod,w,c
  1468  0014DA  1013               	iorwf	?___awmod+1,w,c
  1469  0014DC  B4D8               	btfsc	status,2,c
  1470  0014DE  D002               	goto	l3324
  1471                           
  1472                           ;main.c: 139: return 0;
  1473  0014E0  0E00               	movlw	0
  1474                           
  1475                           ;main.c: 140: }
  1476  0014E2  0012               	return	
  1477  0014E4                     l3324:
  1478                           
  1479                           ;main.c: 141: else{
  1480                           ;main.c: 142: return 1;
  1481  0014E4  0E01               	movlw	1
  1482                           
  1483                           ;main.c: 143: }
  1484                           ;main.c: 144: }
  1485                           ;main.c: 145: }
  1486  0014E6  0012               	return	
  1487  0014E8                     l3328:
  1488                           
  1489                           ;main.c: 146: else{
  1490                           ;main.c: 147: return 0;
  1491  0014E8  0E00               	movlw	0
  1492  0014EA  0012               	return	
  1493  0014EC                     __end_of_verificaAnoBissexto:
  1494                           	opt stack 0
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           intcon	equ	0xFF2
  1500                           postinc0	equ	0xFEE
  1501                           wreg	equ	0xFE8
  1502                           postdec1	equ	0xFE5
  1503                           fsr1l	equ	0xFE1
  1504                           postinc2	equ	0xFDE
  1505                           fsr2h	equ	0xFDA
  1506                           fsr2l	equ	0xFD9
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _setaDespertador *****************
  1510 ;; Defined at:
  1511 ;;		line 286 in file "main.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1525 ;;      Params:         0       0       0       0       0       0       0       0       0
  1526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1528 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1529 ;;Total ram usage:        0 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    6
  1532 ;; This function calls:
  1533 ;;		_Delay10KTCYx
  1534 ;;		_atualiza_Tela
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text3
  1541  00123A                     __ptext3:
  1542                           	opt stack 0
  1543  00123A                     _setaDespertador:
  1544                           	opt stack 24
  1545                           
  1546                           ;main.c: 287: botaoHora = PORTCbits.RC1;
  1547                           
  1548                           ;incstack = 0
  1549  00123A  0E00               	movlw	0
  1550  00123C  B282               	btfsc	3970,1,c	;volatile
  1551  00123E  0E01               	movlw	1
  1552  001240  6E2A               	movwf	_botaoHora,c
  1553                           
  1554                           ;main.c: 288: botaoMin = PORTCbits.RC2;
  1555  001242  0E00               	movlw	0
  1556  001244  B482               	btfsc	3970,2,c	;volatile
  1557  001246  0E01               	movlw	1
  1558  001248  6E29               	movwf	_botaoMin,c
  1559                           
  1560                           ;main.c: 289: if(botaoHora){
  1561  00124A  502A               	movf	_botaoHora,w,c
  1562  00124C  B4D8               	btfsc	status,2,c
  1563  00124E  D020               	goto	l3642
  1564                           
  1565                           ;main.c: 290: Delay10KTCYx(180);
  1566  001250  0EB4               	movlw	180
  1567  001252  EC69  F00C         	call	_Delay10KTCYx
  1568                           
  1569                           ;main.c: 292: horarioDespertador[1]++;
  1570  001256  2A3F               	incf	_horarioDespertador+1,f,c
  1571                           
  1572                           ;main.c: 293: if(horarioDespertador[1]>'9'){
  1573  001258  0E39               	movlw	57
  1574  00125A  643F               	cpfsgt	_horarioDespertador+1,c
  1575  00125C  D003               	goto	l3630
  1576                           
  1577                           ;main.c: 294: horarioDespertador[1] ='0';
  1578  00125E  0E30               	movlw	48
  1579  001260  6E3F               	movwf	_horarioDespertador+1,c
  1580                           
  1581                           ;main.c: 295: horarioDespertador[0]++;
  1582  001262  2A3E               	incf	_horarioDespertador,f,c
  1583  001264                     l3630:
  1584                           
  1585                           ;main.c: 296: }
  1586                           ;main.c: 297: if(horarioDespertador[0] == '2' && horarioDespertador[1] >'3'){
  1587  001264  0E32               	movlw	50
  1588  001266  183E               	xorwf	_horarioDespertador,w,c
  1589  001268  A4D8               	btfss	status,2,c
  1590  00126A  D007               	goto	l3636
  1591  00126C  0E33               	movlw	51
  1592  00126E  643F               	cpfsgt	_horarioDespertador+1,c
  1593  001270  D004               	goto	l3636
  1594                           
  1595                           ;main.c: 298: horarioDespertador[1] ='0';
  1596  001272  0E30               	movlw	48
  1597  001274  6E3F               	movwf	_horarioDespertador+1,c
  1598                           
  1599                           ;main.c: 299: horarioDespertador[0] ='0';
  1600  001276  0E30               	movlw	48
  1601  001278  6E3E               	movwf	_horarioDespertador,c
  1602  00127A                     l3636:
  1603                           
  1604                           ;main.c: 300: }
  1605                           ;main.c: 302: atualiza_Tela(0);
  1606  00127A  0E00               	movlw	0
  1607  00127C  EC26  F006         	call	_atualiza_Tela
  1608                           
  1609                           ;main.c: 303: while(botaoHora){
  1610  001280  D004               	goto	l3640
  1611  001282                     l3638:
  1612                           
  1613                           ;main.c: 304: botaoHora = PORTCbits.RC1;
  1614  001282  0E00               	movlw	0
  1615  001284  B282               	btfsc	3970,1,c	;volatile
  1616  001286  0E01               	movlw	1
  1617  001288  6E2A               	movwf	_botaoHora,c
  1618  00128A                     l3640:
  1619  00128A  502A               	movf	_botaoHora,w,c
  1620  00128C  A4D8               	btfss	status,2,c
  1621  00128E  D7F9               	goto	l3638
  1622  001290                     l3642:
  1623                           
  1624                           ;main.c: 305: }
  1625                           ;main.c: 306: }
  1626                           ;main.c: 308: if(botaoMin){
  1627  001290  5029               	movf	_botaoMin,w,c
  1628  001292  B4D8               	btfsc	status,2,c
  1629  001294  0012               	return	
  1630                           
  1631                           ;main.c: 309: Delay10KTCYx(180);
  1632  001296  0EB4               	movlw	180
  1633  001298  EC69  F00C         	call	_Delay10KTCYx
  1634                           
  1635                           ;main.c: 311: horarioDespertador[4]++;
  1636  00129C  2A42               	incf	_horarioDespertador+4,f,c
  1637                           
  1638                           ;main.c: 312: if(horarioDespertador[4]>'9'){
  1639  00129E  0E39               	movlw	57
  1640  0012A0  6442               	cpfsgt	_horarioDespertador+4,c
  1641  0012A2  D003               	goto	l3654
  1642                           
  1643                           ;main.c: 313: horarioDespertador[4]='0';
  1644  0012A4  0E30               	movlw	48
  1645  0012A6  6E42               	movwf	_horarioDespertador+4,c
  1646                           
  1647                           ;main.c: 314: horarioDespertador[3]++;
  1648  0012A8  2A41               	incf	_horarioDespertador+3,f,c
  1649  0012AA                     l3654:
  1650                           
  1651                           ;main.c: 316: }
  1652                           ;main.c: 317: if(horarioDespertador[3] == '5' && horarioDespertador[4] > '9'){
  1653  0012AA  0E35               	movlw	53
  1654  0012AC  1841               	xorwf	_horarioDespertador+3,w,c
  1655  0012AE  A4D8               	btfss	status,2,c
  1656  0012B0  D007               	goto	l3660
  1657  0012B2  0E39               	movlw	57
  1658  0012B4  6442               	cpfsgt	_horarioDespertador+4,c
  1659  0012B6  D004               	goto	l3660
  1660                           
  1661                           ;main.c: 318: horarioDespertador[4] ='0';
  1662  0012B8  0E30               	movlw	48
  1663  0012BA  6E42               	movwf	_horarioDespertador+4,c
  1664                           
  1665                           ;main.c: 319: horarioDespertador[3] ='0';
  1666  0012BC  0E30               	movlw	48
  1667  0012BE  6E41               	movwf	_horarioDespertador+3,c
  1668  0012C0                     l3660:
  1669                           
  1670                           ;main.c: 320: }
  1671                           ;main.c: 321: atualiza_Tela(0);
  1672  0012C0  0E00               	movlw	0
  1673  0012C2  EC26  F006         	call	_atualiza_Tela
  1674                           
  1675                           ;main.c: 322: while(botaoMin){
  1676  0012C6  D004               	goto	l3664
  1677  0012C8                     l3662:
  1678                           
  1679                           ;main.c: 323: botaoMin = PORTCbits.RC2;
  1680  0012C8  0E00               	movlw	0
  1681  0012CA  B482               	btfsc	3970,2,c	;volatile
  1682  0012CC  0E01               	movlw	1
  1683  0012CE  6E29               	movwf	_botaoMin,c
  1684  0012D0                     l3664:
  1685  0012D0  5029               	movf	_botaoMin,w,c
  1686  0012D2  B4D8               	btfsc	status,2,c
  1687  0012D4  0012               	return	
  1688  0012D6  D7F8               	goto	l3662
  1689  0012D8                     __end_of_setaDespertador:
  1690                           	opt stack 0
  1691                           tblptru	equ	0xFF8
  1692                           tblptrh	equ	0xFF7
  1693                           tblptrl	equ	0xFF6
  1694                           tablat	equ	0xFF5
  1695                           intcon	equ	0xFF2
  1696                           postinc0	equ	0xFEE
  1697                           wreg	equ	0xFE8
  1698                           postdec1	equ	0xFE5
  1699                           fsr1l	equ	0xFE1
  1700                           postinc2	equ	0xFDE
  1701                           fsr2h	equ	0xFDA
  1702                           fsr2l	equ	0xFD9
  1703                           status	equ	0xFD8
  1704                           
  1705 ;; *************** function _atualiza_Tela *****************
  1706 ;; Defined at:
  1707 ;;		line 238 in file "main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  troca_ou_nao    1    wreg     unsigned char 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  troca_ou_nao    1   13[BANK0 ] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0
  1722 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1724 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1725 ;;Total ram usage:        1 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    5
  1728 ;; This function calls:
  1729 ;;		_SetDDRamAddr
  1730 ;;		_acionaDespertador
  1731 ;;		_converteAnoString
  1732 ;;		_putrsXLCD
  1733 ;; This function is called by:
  1734 ;;		_setaDespertador
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text4
  1740  000C4C                     __ptext4:
  1741                           	opt stack 0
  1742  000C4C                     _atualiza_Tela:
  1743                           	opt stack 24
  1744                           
  1745                           ;incstack = 0
  1746                           ;atualiza_Tela@troca_ou_nao stored from wreg
  1747  000C4C  0100               	movlb	0	; () banked
  1748  000C4E  6F81               	movwf	atualiza_Tela@troca_ou_nao& (0+255),b
  1749                           
  1750                           ;main.c: 240: if(troca_ou_nao == 1){
  1751  000C50  0100               	movlb	0	; () banked
  1752  000C52  0581               	decf	atualiza_Tela@troca_ou_nao& (0+255),w,b
  1753  000C54  A4D8               	btfss	status,2,c
  1754  000C56  D091               	goto	l3434
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;main.c: 241: tela_atual++;
  1758  000C58  2A27               	incf	_tela_atual,f,c
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;main.c: 242: if(tela_atual >2){
  1762  000C5A  0E02               	movlw	2
  1763  000C5C  6427               	cpfsgt	_tela_atual,c
  1764  000C5E  D08D               	goto	l3434
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;main.c: 243: tela_atual = 0;
  1768  000C60  0E00               	movlw	0
  1769  000C62  6E27               	movwf	_tela_atual,c
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;main.c: 244: }
  1773                           ;main.c: 245: }
  1774                           ;main.c: 246: switch(tela_atual){
  1775                           
  1776                           ; BSR set to: 0
  1777  000C64  D08A               	goto	l3434
  1778  000C66                     l3394:
  1779                           
  1780                           ;main.c: 248: SetDDRamAddr(0x00);
  1781  000C66  0E00               	movlw	0
  1782  000C68  EC9F  F00A         	call	_SetDDRamAddr
  1783                           
  1784                           ;main.c: 249: putrsXLCD("Despertador     ");
  1785  000C6C  0E1C               	movlw	low STR_2
  1786  000C6E  0100               	movlb	0	; () banked
  1787  000C70  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1788  000C72  0E08               	movlw	high STR_2
  1789  000C74  0100               	movlb	0	; () banked
  1790  000C76  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1791  000C78  EC19  F00A         	call	_putrsXLCD	;wreg free
  1792                           
  1793                           ;main.c: 250: SetDDRamAddr(0x40);
  1794  000C7C  0E40               	movlw	64
  1795  000C7E  EC9F  F00A         	call	_SetDDRamAddr
  1796                           
  1797                           ;main.c: 251: putrsXLCD("Versao: ");
  1798  000C82  0E2D               	movlw	low STR_3
  1799  000C84  0100               	movlb	0	; () banked
  1800  000C86  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1801  000C88  0E08               	movlw	high STR_3
  1802  000C8A  0100               	movlb	0	; () banked
  1803  000C8C  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1804  000C8E  EC19  F00A         	call	_putrsXLCD	;wreg free
  1805                           
  1806                           ;main.c: 252: putrsXLCD(versao);
  1807  000C92  0E48               	movlw	low _versao
  1808  000C94  0100               	movlb	0	; () banked
  1809  000C96  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1810  000C98  0E00               	movlw	high _versao
  1811  000C9A  0100               	movlb	0	; () banked
  1812  000C9C  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1813  000C9E  EC19  F00A         	call	_putrsXLCD	;wreg free
  1814                           
  1815                           ;main.c: 254: break;
  1816  000CA2  0012               	return	
  1817  000CA4                     l3400:
  1818                           
  1819                           ;main.c: 256: SetDDRamAddr(0x00);
  1820  000CA4  0E00               	movlw	0
  1821  000CA6  EC9F  F00A         	call	_SetDDRamAddr
  1822                           
  1823                           ;main.c: 257: putrsXLCD("Hora: ");
  1824  000CAA  0E3D               	movlw	low STR_4
  1825  000CAC  0100               	movlb	0	; () banked
  1826  000CAE  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1827  000CB0  0E08               	movlw	high STR_4
  1828  000CB2  0100               	movlb	0	; () banked
  1829  000CB4  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1830  000CB6  EC19  F00A         	call	_putrsXLCD	;wreg free
  1831                           
  1832                           ;main.c: 258: putrsXLCD(data_horario.horario);
  1833  000CBA  0E60               	movlw	low _data_horario
  1834  000CBC  0100               	movlb	0	; () banked
  1835  000CBE  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1836  000CC0  0E00               	movlw	high _data_horario
  1837  000CC2  0100               	movlb	0	; () banked
  1838  000CC4  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1839  000CC6  EC19  F00A         	call	_putrsXLCD	;wreg free
  1840                           
  1841                           ;main.c: 259: SetDDRamAddr(0x40);
  1842  000CCA  0E40               	movlw	64
  1843  000CCC  EC9F  F00A         	call	_SetDDRamAddr
  1844                           
  1845                           ;main.c: 260: putrsXLCD("Data: ");
  1846  000CD0  0E44               	movlw	low STR_5
  1847  000CD2  0100               	movlb	0	; () banked
  1848  000CD4  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1849  000CD6  0E08               	movlw	high STR_5
  1850  000CD8  0100               	movlb	0	; () banked
  1851  000CDA  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1852  000CDC  EC19  F00A         	call	_putrsXLCD	;wreg free
  1853                           
  1854                           ;main.c: 261: putrsXLCD(data_horario.data);
  1855  000CE0  0E69               	movlw	low (_data_horario+9)
  1856  000CE2  0100               	movlb	0	; () banked
  1857  000CE4  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1858  000CE6  0E00               	movlw	high (_data_horario+9)
  1859  000CE8  0100               	movlb	0	; () banked
  1860  000CEA  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1861  000CEC  EC19  F00A         	call	_putrsXLCD	;wreg free
  1862                           
  1863                           ;main.c: 262: putrsXLCD(converteAnoString(data_horario.ano));
  1864  000CF0  C072  F025         	movff	_data_horario+18,converteAnoString@ano
  1865  000CF4  C073  F026         	movff	_data_horario+19,converteAnoString@ano+1
  1866  000CF8  EC16  F00C         	call	_converteAnoString	;wreg free
  1867  000CFC  C025  F07F         	movff	?_converteAnoString,putrsXLCD@buffer
  1868  000D00  C026  F080         	movff	?_converteAnoString+1,putrsXLCD@buffer+1
  1869  000D04  EC19  F00A         	call	_putrsXLCD	;wreg free
  1870                           
  1871                           ;main.c: 263: acionaDespertador();
  1872  000D08  ECE7  F00B         	call	_acionaDespertador	;wreg free
  1873                           
  1874                           ;main.c: 264: if(flagDespertadorLigado){
  1875  000D0C  502B               	movf	_flagDespertadorLigado,w,c
  1876  000D0E  B4D8               	btfsc	status,2,c
  1877  000D10  0012               	return	
  1878                           
  1879                           ;main.c: 265: PORTDbits.RD0 = 1;
  1880  000D12  8083               	bsf	3971,0,c	;volatile
  1881                           
  1882                           ;main.c: 266: tempoDespertador++;
  1883  000D14  2A28               	incf	_tempoDespertador,f,c
  1884                           
  1885                           ;main.c: 267: if(tempoDespertador > 5){
  1886  000D16  0E05               	movlw	5
  1887  000D18  6428               	cpfsgt	_tempoDespertador,c
  1888  000D1A  0012               	return	
  1889                           
  1890                           ;main.c: 268: tempoDespertador = 0;
  1891  000D1C  0E00               	movlw	0
  1892  000D1E  6E28               	movwf	_tempoDespertador,c
  1893                           
  1894                           ;main.c: 269: flagDespertadorLigado =0;
  1895  000D20  0E00               	movlw	0
  1896  000D22  6E2B               	movwf	_flagDespertadorLigado,c
  1897                           
  1898                           ;main.c: 270: PORTDbits.RD0 = 0;
  1899  000D24  9083               	bcf	3971,0,c	;volatile
  1900                           
  1901                           ;main.c: 271: virouDia = 0;
  1902  000D26  0E00               	movlw	0
  1903  000D28  6E47               	movwf	_virouDia,c
  1904                           
  1905                           ;main.c: 272: }
  1906                           ;main.c: 273: }
  1907                           ;main.c: 274: break;
  1908  000D2A  0012               	return	
  1909  000D2C                     l3426:
  1910                           
  1911                           ;main.c: 276: SetDDRamAddr(0x00);
  1912  000D2C  0E00               	movlw	0
  1913  000D2E  EC9F  F00A         	call	_SetDDRamAddr
  1914                           
  1915                           ;main.c: 277: putrsXLCD("     ALARME     ");
  1916  000D32  0E0B               	movlw	low STR_6
  1917  000D34  0100               	movlb	0	; () banked
  1918  000D36  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1919  000D38  0E08               	movlw	high STR_6
  1920  000D3A  0100               	movlb	0	; () banked
  1921  000D3C  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1922  000D3E  EC19  F00A         	call	_putrsXLCD	;wreg free
  1923                           
  1924                           ;main.c: 278: SetDDRamAddr(0x40);
  1925  000D42  0E40               	movlw	64
  1926  000D44  EC9F  F00A         	call	_SetDDRamAddr
  1927                           
  1928                           ;main.c: 279: putrsXLCD("     ");
  1929  000D48  0E37               	movlw	low (STR_8+1)
  1930  000D4A  0100               	movlb	0	; () banked
  1931  000D4C  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1932  000D4E  0E08               	movlw	high (STR_8+1)
  1933  000D50  0100               	movlb	0	; () banked
  1934  000D52  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1935  000D54  EC19  F00A         	call	_putrsXLCD	;wreg free
  1936                           
  1937                           ;main.c: 280: putrsXLCD(horarioDespertador);
  1938  000D58  0E3E               	movlw	low _horarioDespertador
  1939  000D5A  0100               	movlb	0	; () banked
  1940  000D5C  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1941  000D5E  0E00               	movlw	high _horarioDespertador
  1942  000D60  0100               	movlb	0	; () banked
  1943  000D62  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1944  000D64  EC19  F00A         	call	_putrsXLCD	;wreg free
  1945                           
  1946                           ;main.c: 281: putrsXLCD("      ");
  1947  000D68  0E36               	movlw	low STR_8
  1948  000D6A  0100               	movlb	0	; () banked
  1949  000D6C  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1950  000D6E  0E08               	movlw	high STR_8
  1951  000D70  0100               	movlb	0	; () banked
  1952  000D72  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1953  000D74  EC19  F00A         	call	_putrsXLCD	;wreg free
  1954                           
  1955                           ;main.c: 283: }
  1956                           
  1957                           ;main.c: 282: break;
  1958  000D78  0012               	return	
  1959  000D7A                     l3434:
  1960  000D7A  5027               	movf	_tela_atual,w,c
  1961                           
  1962                           ; Switch size 1, requested type "space"
  1963                           ; Number of cases is 3, Range of values is 0 to 2
  1964                           ; switch strategies available:
  1965                           ; Name         Instructions Cycles
  1966                           ; simple_byte           10     6 (average)
  1967                           ;	Chosen strategy is simple_byte
  1968  000D7C  0A00               	xorlw	0	; case 0
  1969  000D7E  B4D8               	btfsc	status,2,c
  1970  000D80  D772               	goto	l3394
  1971  000D82  0A01               	xorlw	1	; case 1
  1972  000D84  B4D8               	btfsc	status,2,c
  1973  000D86  D78E               	goto	l3400
  1974  000D88  0A03               	xorlw	3	; case 2
  1975  000D8A  A4D8               	btfss	status,2,c
  1976  000D8C  0012               	return	
  1977  000D8E  D7CE               	goto	l3426
  1978  000D90                     __end_of_atualiza_Tela:
  1979                           	opt stack 0
  1980                           tblptru	equ	0xFF8
  1981                           tblptrh	equ	0xFF7
  1982                           tblptrl	equ	0xFF6
  1983                           tablat	equ	0xFF5
  1984                           intcon	equ	0xFF2
  1985                           postinc0	equ	0xFEE
  1986                           wreg	equ	0xFE8
  1987                           postdec1	equ	0xFE5
  1988                           fsr1l	equ	0xFE1
  1989                           postinc2	equ	0xFDE
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _putrsXLCD *****************
  1995 ;; Defined at:
  1996 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  buffer          2   11[BANK0 ] PTR const unsigned char 
  1999 ;;		 -> STR_8(7), STR_7(6), STR_6(17), STR_5(7), 
  2000 ;;		 -> STR_4(7), versao(6), STR_3(9), STR_2(17), 
  2001 ;;		 -> horarioDespertador(6), data_horario.data(7), data_horario.horario(9), data_horario(20), 
  2002 ;;		 -> converteAnoString@anoStr(4), 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2014 ;;      Params:         0       2       0       0       0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2017 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2018 ;;Total ram usage:        2 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    4
  2021 ;; This function calls:
  2022 ;;		_BusyXLCD
  2023 ;;		_WriteDataXLCD
  2024 ;; This function is called by:
  2025 ;;		_atualiza_Tela
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text5
  2030  001432                     __ptext5:
  2031                           	opt stack 0
  2032  001432                     _putrsXLCD:
  2033                           	opt stack 24
  2034                           
  2035                           ;incstack = 0
  2036  001432  D01A               	goto	l3164
  2037  001434                     l3158:
  2038  001434  ECAE  F00B         	call	_BusyXLCD	;wreg free
  2039  001438  0900               	iorlw	0
  2040  00143A  A4D8               	btfss	status,2,c
  2041  00143C  D7FB               	goto	l3158
  2042  00143E  C07F  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2043  001442  C080  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2044  001446  6AF8               	clrf	tblptru,c
  2045  001448  0E07               	movlw	(high __ramtop+-1)
  2046  00144A  64F7               	cpfsgt	tblptrh,c
  2047  00144C  D003               	bra	u2377
  2048  00144E  0008               	tblrd		*
  2049  001450  50F5               	movf	tablat,w,c
  2050  001452  D005               	bra	u2370
  2051  001454                     u2377:
  2052  001454  CFF6 FFE1          	movff	tblptrl,fsr1l
  2053  001458  CFF7 FFE2          	movff	tblptrh,fsr1h
  2054  00145C  50E7               	movf	indf1,w,c
  2055  00145E                     u2370:
  2056  00145E  EC53  F00B         	call	_WriteDataXLCD
  2057  001462  0100               	movlb	0	; () banked
  2058  001464  4B7F               	infsnz	putrsXLCD@buffer& (0+255),f,b
  2059  001466  2B80               	incf	(putrsXLCD@buffer+1)& (0+255),f,b
  2060  001468                     l3164:
  2061  001468  C07F  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2062  00146C  C080  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2063  001470  6AF8               	clrf	tblptru,c
  2064  001472  0E07               	movlw	(high __ramtop+-1)
  2065  001474  64F7               	cpfsgt	tblptrh,c
  2066  001476  D003               	bra	u2387
  2067  001478  0008               	tblrd		*
  2068  00147A  50F5               	movf	tablat,w,c
  2069  00147C  D005               	bra	u2380
  2070  00147E                     u2387:
  2071  00147E  CFF6 FFE1          	movff	tblptrl,fsr1l
  2072  001482  CFF7 FFE2          	movff	tblptrh,fsr1h
  2073  001486  50E7               	movf	indf1,w,c
  2074  001488                     u2380:
  2075  001488  0900               	iorlw	0
  2076  00148A  B4D8               	btfsc	status,2,c
  2077  00148C  0012               	return	
  2078  00148E  D7D2               	goto	l3158
  2079  001490                     __end_of_putrsXLCD:
  2080                           	opt stack 0
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           intcon	equ	0xFF2
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           indf1	equ	0xFE7
  2089                           postdec1	equ	0xFE5
  2090                           fsr1h	equ	0xFE2
  2091                           fsr1l	equ	0xFE1
  2092                           postinc2	equ	0xFDE
  2093                           fsr2h	equ	0xFDA
  2094                           fsr2l	equ	0xFD9
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _WriteDataXLCD *****************
  2098 ;; Defined at:
  2099 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  data            1    wreg     unsigned char 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  data            1   18[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0
  2114 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2116 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2117 ;;Total ram usage:        1 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    3
  2120 ;; This function calls:
  2121 ;;		_DelayFor18TCY
  2122 ;; This function is called by:
  2123 ;;		_putrsXLCD
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text6
  2128  0016A6                     __ptext6:
  2129                           	opt stack 0
  2130  0016A6                     _WriteDataXLCD:
  2131                           	opt stack 24
  2132                           
  2133                           ;incstack = 0
  2134                           ;WriteDataXLCD@data stored from wreg
  2135  0016A6  6E13               	movwf	WriteDataXLCD@data,c
  2136  0016A8  0EF0               	movlw	240
  2137  0016AA  1693               	andwf	3987,f,c	;volatile
  2138  0016AC  0EF0               	movlw	240
  2139  0016AE  1681               	andwf	3969,f,c	;volatile
  2140  0016B0  3813               	swapf	WriteDataXLCD@data,w,c
  2141  0016B2  0B0F               	andlw	15
  2142  0016B4  0B0F               	andlw	15
  2143  0016B6  1281               	iorwf	3969,f,c	;volatile
  2144  0016B8  8A8A               	bsf	3978,5,c	;volatile
  2145  0016BA  9C8A               	bcf	3978,6,c	;volatile
  2146  0016BC  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  2147  0016C0  888A               	bsf	3978,4,c	;volatile
  2148  0016C2  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  2149  0016C6  988A               	bcf	3978,4,c	;volatile
  2150  0016C8  0EF0               	movlw	240
  2151  0016CA  1681               	andwf	3969,f,c	;volatile
  2152  0016CC  5013               	movf	WriteDataXLCD@data,w,c
  2153  0016CE  0B0F               	andlw	15
  2154  0016D0  1281               	iorwf	3969,f,c	;volatile
  2155  0016D2  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  2156  0016D6  888A               	bsf	3978,4,c	;volatile
  2157  0016D8  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  2158  0016DC  988A               	bcf	3978,4,c	;volatile
  2159  0016DE  0E0F               	movlw	15
  2160  0016E0  1293               	iorwf	3987,f,c	;volatile
  2161  0016E2  0012               	return	
  2162  0016E4                     __end_of_WriteDataXLCD:
  2163                           	opt stack 0
  2164                           tblptru	equ	0xFF8
  2165                           tblptrh	equ	0xFF7
  2166                           tblptrl	equ	0xFF6
  2167                           tablat	equ	0xFF5
  2168                           intcon	equ	0xFF2
  2169                           postinc0	equ	0xFEE
  2170                           wreg	equ	0xFE8
  2171                           indf1	equ	0xFE7
  2172                           postdec1	equ	0xFE5
  2173                           fsr1h	equ	0xFE2
  2174                           fsr1l	equ	0xFE1
  2175                           postinc2	equ	0xFDE
  2176                           fsr2h	equ	0xFDA
  2177                           fsr2l	equ	0xFD9
  2178                           status	equ	0xFD8
  2179                           
  2180 ;; *************** function _converteAnoString *****************
  2181 ;; Defined at:
  2182 ;;		line 153 in file "main.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  ano             2   36[COMRAM] int 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  anoStr          4    7[BANK0 ] unsigned char [4]
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  2   36[COMRAM] PTR unsigned char 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2196 ;;      Params:         2       0       0       0       0       0       0       0       0
  2197 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2199 ;;      Totals:         2       4       0       0       0       0       0       0       0
  2200 ;;Total ram usage:        6 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    3
  2203 ;; This function calls:
  2204 ;;		_sprintf
  2205 ;; This function is called by:
  2206 ;;		_atualiza_Tela
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text7
  2211  00182C                     __ptext7:
  2212                           	opt stack 0
  2213  00182C                     _converteAnoString:
  2214                           	opt stack 25
  2215                           
  2216                           ;main.c: 154: char anoStr[4];
  2217                           ;main.c: 155: sprintf(anoStr,"%i",ano);
  2218                           
  2219                           ;incstack = 0
  2220  00182C  0E7B               	movlw	low converteAnoString@anoStr
  2221  00182E  6E1E               	movwf	sprintf@sp,c
  2222  001830  0E00               	movlw	high converteAnoString@anoStr
  2223  001832  6E1F               	movwf	sprintf@sp+1,c
  2224  001834  0E4B               	movlw	low STR_1
  2225  001836  6E20               	movwf	sprintf@f,c
  2226  001838  0E08               	movlw	high STR_1
  2227  00183A  6E21               	movwf	sprintf@f+1,c
  2228  00183C  C025  F022         	movff	converteAnoString@ano,?_sprintf+4
  2229  001840  C026  F023         	movff	converteAnoString@ano+1,?_sprintf+5
  2230  001844  EC6E  F005         	call	_sprintf	;wreg free
  2231                           
  2232                           ;main.c: 156: return anoStr;
  2233  001848  0E7B               	movlw	low converteAnoString@anoStr
  2234  00184A  6E25               	movwf	?_converteAnoString,c
  2235  00184C  0E00               	movlw	high converteAnoString@anoStr
  2236  00184E  6E26               	movwf	?_converteAnoString+1,c
  2237  001850  0012               	return	
  2238  001852                     __end_of_converteAnoString:
  2239                           	opt stack 0
  2240                           tblptru	equ	0xFF8
  2241                           tblptrh	equ	0xFF7
  2242                           tblptrl	equ	0xFF6
  2243                           tablat	equ	0xFF5
  2244                           intcon	equ	0xFF2
  2245                           postinc0	equ	0xFEE
  2246                           wreg	equ	0xFE8
  2247                           indf1	equ	0xFE7
  2248                           postdec1	equ	0xFE5
  2249                           fsr1h	equ	0xFE2
  2250                           fsr1l	equ	0xFE1
  2251                           postinc2	equ	0xFDE
  2252                           fsr2h	equ	0xFDA
  2253                           fsr2l	equ	0xFD9
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function _sprintf *****************
  2257 ;; Defined at:
  2258 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  sp              2   29[COMRAM] PTR unsigned char 
  2261 ;;		 -> converteAnoString@anoStr(4), 
  2262 ;;  f               2   31[COMRAM] PTR const unsigned char 
  2263 ;;		 -> STR_1(3), 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  tmpval          4    0        struct .
  2266 ;;  cp              3    0        PTR const unsigned char 
  2267 ;;  val             2    4[BANK0 ] unsigned int 
  2268 ;;  ap              2    0[BANK0 ] PTR void [1]
  2269 ;;		 -> ?_sprintf(2), 
  2270 ;;  len             2    0        unsigned int 
  2271 ;;  c               1    6[BANK0 ] char 
  2272 ;;  prec            1    3[BANK0 ] char 
  2273 ;;  flag            1    2[BANK0 ] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  2   29[COMRAM] int 
  2276 ;; Registers used:
  2277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2283 ;;      Params:         6       0       0       0       0       0       0       0       0
  2284 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2285 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2286 ;;      Totals:         7       7       0       0       0       0       0       0       0
  2287 ;;Total ram usage:       14 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    2
  2290 ;; This function calls:
  2291 ;;		___lwdiv
  2292 ;;		___lwmod
  2293 ;; This function is called by:
  2294 ;;		_converteAnoString
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text8
  2299  000ADC                     __ptext8:
  2300                           	opt stack 0
  2301  000ADC                     _sprintf:
  2302                           	opt stack 25
  2303                           
  2304                           ;doprnt.c: 494: va_list ap;
  2305                           ;doprnt.c: 499: signed char c;
  2306                           ;doprnt.c: 506: signed char prec;
  2307                           ;doprnt.c: 508: unsigned char flag;
  2308                           ;doprnt.c: 523: union {
  2309                           ;doprnt.c: 524: unsigned long vd;
  2310                           ;doprnt.c: 525: double integ;
  2311                           ;doprnt.c: 526: } tmpval;
  2312                           ;doprnt.c: 528: unsigned int val;
  2313                           ;doprnt.c: 529: unsigned len;
  2314                           ;doprnt.c: 530: const char * cp;
  2315                           ;doprnt.c: 533: *ap = __va_start();
  2316                           
  2317                           ;incstack = 0
  2318  000ADC  0E22               	movlw	low (?_sprintf+4)
  2319  000ADE  0100               	movlb	0	; () banked
  2320  000AE0  6F74               	movwf	sprintf@ap& (0+255),b
  2321  000AE2  0E00               	movlw	high (?_sprintf+4)
  2322  000AE4  0100               	movlb	0	; () banked
  2323  000AE6  6F75               	movwf	(sprintf@ap+1)& (0+255),b
  2324                           
  2325                           ;doprnt.c: 536: while(c = *f++) {
  2326  000AE8  D09D               	goto	l2964
  2327  000AEA                     l2912:
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;doprnt.c: 538: if(c != '%')
  2331  000AEA  0E25               	movlw	37
  2332  000AEC  0100               	movlb	0	; () banked
  2333  000AEE  197A               	xorwf	sprintf@c& (0+255),w,b
  2334  000AF0  B4D8               	btfsc	status,2,c
  2335  000AF2  D009               	goto	l2918
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;doprnt.c: 540: {
  2339                           ;doprnt.c: 541: ((*sp++ = (c)));
  2340  000AF4  C01E  FFD9         	movff	sprintf@sp,fsr2l
  2341  000AF8  C01F  FFDA         	movff	sprintf@sp+1,fsr2h
  2342  000AFC  C07A  FFDF         	movff	sprintf@c,indf2
  2343                           
  2344                           ; BSR set to: 0
  2345  000B00  4A1E               	infsnz	sprintf@sp,f,c
  2346  000B02  2A1F               	incf	sprintf@sp+1,f,c
  2347                           
  2348                           ;doprnt.c: 542: continue;
  2349  000B04  D08F               	goto	l2964
  2350  000B06                     l2918:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;doprnt.c: 543: }
  2354                           ;doprnt.c: 548: flag = 0;
  2355  000B06  0E00               	movlw	0
  2356  000B08  0100               	movlb	0	; () banked
  2357  000B0A  6F76               	movwf	sprintf@flag& (0+255),b
  2358                           
  2359                           ; BSR set to: 0
  2360                           
  2361                           ; BSR set to: 0
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;doprnt.c: 822: }
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;doprnt.c: 813: continue;
  2368                           
  2369                           ;doprnt.c: 802: default:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;doprnt.c: 698: case 'i':
  2373                           ;doprnt.c: 699: break;
  2374                           
  2375                           ; BSR set to: 0
  2376                           
  2377                           ;doprnt.c: 697: case 'd':
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;doprnt.c: 638: goto alldone;
  2381                           
  2382                           ;doprnt.c: 637: case 0:
  2383                           
  2384                           ;doprnt.c: 635: switch(c = *f++) {
  2385  000B0C  C020  FFF6         	movff	sprintf@f,tblptrl
  2386  000B10  C021  FFF7         	movff	sprintf@f+1,tblptrh
  2387  000B14  4A20               	infsnz	sprintf@f,f,c
  2388  000B16  2A21               	incf	sprintf@f+1,f,c
  2389  000B18                     	if	0	;tblptru may be non-zero
  2390  000B18                     	endif
  2391  000B18                     	if	0	;tblptru may be non-zero
  2392  000B18                     	endif
  2393  000B18  0008               	tblrd		*
  2394  000B1A  CFF5 F07A          	movff	tablat,sprintf@c
  2395  000B1E  0100               	movlb	0	; () banked
  2396  000B20  517A               	movf	sprintf@c& (0+255),w,b
  2397                           
  2398                           ; Switch size 1, requested type "space"
  2399                           ; Number of cases is 3, Range of values is 0 to 105
  2400                           ; switch strategies available:
  2401                           ; Name         Instructions Cycles
  2402                           ; simple_byte           10     6 (average)
  2403                           ;	Chosen strategy is simple_byte
  2404  000B22  0A00               	xorlw	0	; case 0
  2405  000B24  B4D8               	btfsc	status,2,c
  2406  000B26  D08B               	goto	l2966
  2407  000B28  0A64               	xorlw	100	; case 100
  2408  000B2A  B4D8               	btfsc	status,2,c
  2409  000B2C  D003               	goto	l2924
  2410  000B2E  0A0D               	xorlw	13	; case 105
  2411  000B30  A4D8               	btfss	status,2,c
  2412  000B32  D078               	goto	l2964
  2413  000B34                     l2924:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;doprnt.c: 1253: {
  2417                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2418  000B34  C074  FFD9         	movff	sprintf@ap,fsr2l
  2419  000B38  C075  FFDA         	movff	sprintf@ap+1,fsr2h
  2420  000B3C  CFDE F078          	movff	postinc2,sprintf@val
  2421  000B40  CFDD F079          	movff	postdec2,sprintf@val+1
  2422                           
  2423                           ; BSR set to: 0
  2424  000B44  0E02               	movlw	2
  2425  000B46  0100               	movlb	0	; () banked
  2426  000B48  2774               	addwf	sprintf@ap& (0+255),f,b
  2427  000B4A  0E00               	movlw	0
  2428  000B4C  2375               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;doprnt.c: 1261: if((int)val < 0) {
  2432  000B4E  0100               	movlb	0	; () banked
  2433  000B50  AF79               	btfss	(sprintf@val+1)& (0+255),7,b
  2434  000B52  D008               	goto	l2934
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;doprnt.c: 1262: flag |= 0x03;
  2438  000B54  0E03               	movlw	3
  2439  000B56  0100               	movlb	0	; () banked
  2440  000B58  1376               	iorwf	sprintf@flag& (0+255),f,b
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;doprnt.c: 1263: val = -val;
  2444  000B5A  0100               	movlb	0	; () banked
  2445  000B5C  6D78               	negf	sprintf@val& (0+255),b
  2446  000B5E  1F79               	comf	(sprintf@val+1)& (0+255),f,b
  2447  000B60  B0D8               	btfsc	status,0,c
  2448  000B62  2B79               	incf	(sprintf@val+1)& (0+255),f,b
  2449  000B64                     l2934:
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;doprnt.c: 1264: }
  2453                           ;doprnt.c: 1266: }
  2454                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2455  000B64  0E01               	movlw	1
  2456  000B66  0100               	movlb	0	; () banked
  2457  000B68  6F7A               	movwf	sprintf@c& (0+255),b
  2458  000B6A                     l2936:
  2459                           
  2460                           ; BSR set to: 0
  2461  000B6A  0E05               	movlw	5
  2462  000B6C  0100               	movlb	0	; () banked
  2463  000B6E  197A               	xorwf	sprintf@c& (0+255),w,b
  2464  000B70  B4D8               	btfsc	status,2,c
  2465  000B72  D016               	goto	l2948
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;doprnt.c: 1306: if(val < dpowers[c])
  2469                           
  2470                           ; BSR set to: 0
  2471                           
  2472                           ; BSR set to: 0
  2473  000B74  0100               	movlb	0	; () banked
  2474  000B76  517A               	movf	sprintf@c& (0+255),w,b
  2475  000B78  0D02               	mullw	2
  2476  000B7A  0E01               	movlw	low _dpowers
  2477  000B7C  24F3               	addwf	prodl,w,c
  2478  000B7E  6EF6               	movwf	tblptrl,c
  2479  000B80  0E08               	movlw	high _dpowers
  2480  000B82  20F4               	addwfc	prodh,w,c
  2481  000B84  6EF7               	movwf	tblptrh,c
  2482  000B86                     	if	0	;There are less than 3 active tblptr bytes
  2483  000B86                     	endif
  2484  000B86  0009               	tblrd		*+
  2485  000B88  50F5               	movf	tablat,w,c
  2486  000B8A  0100               	movlb	0	; () banked
  2487  000B8C  5D78               	subwf	sprintf@val& (0+255),w,b
  2488  000B8E  0009               	tblrd		*+
  2489  000B90  50F5               	movf	tablat,w,c
  2490  000B92  0100               	movlb	0	; () banked
  2491  000B94  5979               	subwfb	(sprintf@val+1)& (0+255),w,b
  2492  000B96  A0D8               	btfss	status,0,c
  2493  000B98  D003               	goto	l2948
  2494                           
  2495                           ; BSR set to: 0
  2496                           
  2497                           ; BSR set to: 0
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;doprnt.c: 1307: break;
  2501  000B9A  0100               	movlb	0	; () banked
  2502  000B9C  2B7A               	incf	sprintf@c& (0+255),f,b
  2503  000B9E  D7E5               	goto	l2936
  2504  000BA0                     l2948:
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;doprnt.c: 1422: {
  2508                           ;doprnt.c: 1438: if(flag & 0x03)
  2509  000BA0  C076  F024         	movff	sprintf@flag,??_sprintf
  2510  000BA4  0E03               	movlw	3
  2511  000BA6  1624               	andwf	??_sprintf,f,c
  2512  000BA8  B4D8               	btfsc	status,2,c
  2513  000BAA  D008               	goto	l2954
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2517  000BAC  C01E  FFD9         	movff	sprintf@sp,fsr2l
  2518  000BB0  C01F  FFDA         	movff	sprintf@sp+1,fsr2h
  2519  000BB4  0E2D               	movlw	45
  2520  000BB6  6EDF               	movwf	indf2,c
  2521                           
  2522                           ; BSR set to: 0
  2523  000BB8  4A1E               	infsnz	sprintf@sp,f,c
  2524  000BBA  2A1F               	incf	sprintf@sp+1,f,c
  2525  000BBC                     l2954:
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;doprnt.c: 1469: }
  2529                           ;doprnt.c: 1472: prec = c;
  2530  000BBC  C07A  F077         	movff	sprintf@c,sprintf@prec
  2531                           
  2532                           ;doprnt.c: 1474: while(prec--) {
  2533  000BC0  D02B               	goto	l2962
  2534  000BC2                     l2956:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;doprnt.c: 1478: {
  2538                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2539  000BC2  0100               	movlb	0	; () banked
  2540  000BC4  5177               	movf	sprintf@prec& (0+255),w,b
  2541  000BC6  0D02               	mullw	2
  2542  000BC8  0E01               	movlw	low _dpowers
  2543  000BCA  24F3               	addwf	prodl,w,c
  2544  000BCC  6EF6               	movwf	tblptrl,c
  2545  000BCE  0E08               	movlw	high _dpowers
  2546  000BD0  20F4               	addwfc	prodh,w,c
  2547  000BD2  6EF7               	movwf	tblptrh,c
  2548  000BD4                     	if	0	;There are less than 3 active tblptr bytes
  2549  000BD4                     	endif
  2550  000BD4  0009               	tblrd		*+
  2551  000BD6  CFF5 F014          	movff	tablat,___lwdiv@divisor
  2552  000BDA  000A               	tblrd		*-
  2553  000BDC  CFF5 F015          	movff	tablat,___lwdiv@divisor+1
  2554  000BE0  C078  F012         	movff	sprintf@val,___lwdiv@dividend
  2555  000BE4  C079  F013         	movff	sprintf@val+1,___lwdiv@dividend+1
  2556  000BE8  EC76  F00A         	call	___lwdiv	;wreg free
  2557  000BEC  C012  F019         	movff	?___lwdiv,___lwmod@dividend
  2558  000BF0  C013  F01A         	movff	?___lwdiv+1,___lwmod@dividend+1
  2559  000BF4  0E00               	movlw	0
  2560  000BF6  6E1C               	movwf	___lwmod@divisor+1,c
  2561  000BF8  0E0A               	movlw	10
  2562  000BFA  6E1B               	movwf	___lwmod@divisor,c
  2563  000BFC  EC12  F00B         	call	___lwmod	;wreg free
  2564  000C00  5019               	movf	?___lwmod,w,c
  2565  000C02  0F30               	addlw	48
  2566  000C04  0100               	movlb	0	; () banked
  2567  000C06  6F7A               	movwf	sprintf@c& (0+255),b
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;doprnt.c: 1523: }
  2571                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2572  000C08  C01E  FFD9         	movff	sprintf@sp,fsr2l
  2573  000C0C  C01F  FFDA         	movff	sprintf@sp+1,fsr2h
  2574  000C10  C07A  FFDF         	movff	sprintf@c,indf2
  2575                           
  2576                           ; BSR set to: 0
  2577  000C14  4A1E               	infsnz	sprintf@sp,f,c
  2578  000C16  2A1F               	incf	sprintf@sp+1,f,c
  2579  000C18                     l2962:
  2580                           
  2581                           ; BSR set to: 0
  2582  000C18  0100               	movlb	0	; () banked
  2583  000C1A  0777               	decf	sprintf@prec& (0+255),f,b
  2584  000C1C  0100               	movlb	0	; () banked
  2585  000C1E  2977               	incf	sprintf@prec& (0+255),w,b
  2586  000C20  A4D8               	btfss	status,2,c
  2587  000C22  D7CF               	goto	l2956
  2588  000C24                     l2964:
  2589                           
  2590                           ; BSR set to: 0
  2591  000C24  C020  FFF6         	movff	sprintf@f,tblptrl
  2592  000C28  C021  FFF7         	movff	sprintf@f+1,tblptrh
  2593  000C2C  4A20               	infsnz	sprintf@f,f,c
  2594  000C2E  2A21               	incf	sprintf@f+1,f,c
  2595  000C30                     	if	0	;tblptru may be non-zero
  2596  000C30                     	endif
  2597  000C30                     	if	0	;tblptru may be non-zero
  2598  000C30                     	endif
  2599  000C30  0008               	tblrd		*
  2600  000C32  CFF5 F07A          	movff	tablat,sprintf@c
  2601  000C36  0100               	movlb	0	; () banked
  2602  000C38  517A               	movf	sprintf@c& (0+255),w,b
  2603  000C3A  A4D8               	btfss	status,2,c
  2604  000C3C  D756               	goto	l2912
  2605  000C3E                     l2966:
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;doprnt.c: 1538: *sp = 0;
  2609  000C3E  C01E  FFD9         	movff	sprintf@sp,fsr2l
  2610  000C42  C01F  FFDA         	movff	sprintf@sp+1,fsr2h
  2611  000C46  0E00               	movlw	0
  2612  000C48  6EDF               	movwf	indf2,c
  2613  000C4A  0012               	return	
  2614  000C4C                     __end_of_sprintf:
  2615                           	opt stack 0
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           prodh	equ	0xFF4
  2621                           prodl	equ	0xFF3
  2622                           intcon	equ	0xFF2
  2623                           postinc0	equ	0xFEE
  2624                           wreg	equ	0xFE8
  2625                           indf1	equ	0xFE7
  2626                           postdec1	equ	0xFE5
  2627                           fsr1h	equ	0xFE2
  2628                           fsr1l	equ	0xFE1
  2629                           indf2	equ	0xFDF
  2630                           postinc2	equ	0xFDE
  2631                           postdec2	equ	0xFDD
  2632                           fsr2h	equ	0xFDA
  2633                           fsr2l	equ	0xFD9
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function ___lwmod *****************
  2637 ;; Defined at:
  2638 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  dividend        2   24[COMRAM] unsigned int 
  2641 ;;  divisor         2   26[COMRAM] unsigned int 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  counter         1   28[COMRAM] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2   24[COMRAM] unsigned int 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2653 ;;      Params:         4       0       0       0       0       0       0       0       0
  2654 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2656 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2657 ;;Total ram usage:        5 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:    1
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_sprintf
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text9
  2668  001624                     __ptext9:
  2669                           	opt stack 0
  2670  001624                     ___lwmod:
  2671                           	opt stack 25
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;incstack = 0
  2675  001624  501B               	movf	___lwmod@divisor,w,c
  2676  001626  101C               	iorwf	___lwmod@divisor+1,w,c
  2677  001628  B4D8               	btfsc	status,2,c
  2678  00162A  D018               	goto	l847
  2679  00162C  0E01               	movlw	1
  2680  00162E  6E1D               	movwf	___lwmod@counter,c
  2681  001630  D004               	goto	l2896
  2682  001632                     l2894:
  2683  001632  90D8               	bcf	status,0,c
  2684  001634  361B               	rlcf	___lwmod@divisor,f,c
  2685  001636  361C               	rlcf	___lwmod@divisor+1,f,c
  2686  001638  2A1D               	incf	___lwmod@counter,f,c
  2687  00163A                     l2896:
  2688  00163A  AE1C               	btfss	___lwmod@divisor+1,7,c
  2689  00163C  D7FA               	goto	l2894
  2690  00163E                     l2898:
  2691  00163E  501B               	movf	___lwmod@divisor,w,c
  2692  001640  5C19               	subwf	___lwmod@dividend,w,c
  2693  001642  501C               	movf	___lwmod@divisor+1,w,c
  2694  001644  581A               	subwfb	___lwmod@dividend+1,w,c
  2695  001646  A0D8               	btfss	status,0,c
  2696  001648  D004               	goto	l2902
  2697  00164A  501B               	movf	___lwmod@divisor,w,c
  2698  00164C  5E19               	subwf	___lwmod@dividend,f,c
  2699  00164E  501C               	movf	___lwmod@divisor+1,w,c
  2700  001650  5A1A               	subwfb	___lwmod@dividend+1,f,c
  2701  001652                     l2902:
  2702  001652  90D8               	bcf	status,0,c
  2703  001654  321C               	rrcf	___lwmod@divisor+1,f,c
  2704  001656  321B               	rrcf	___lwmod@divisor,f,c
  2705  001658  2E1D               	decfsz	___lwmod@counter,f,c
  2706  00165A  D7F1               	goto	l2898
  2707  00165C                     l847:
  2708  00165C  C019  F019         	movff	___lwmod@dividend,?___lwmod
  2709  001660  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  2710  001664  0012               	return		;funcret
  2711  001666                     __end_of___lwmod:
  2712                           	opt stack 0
  2713                           tblptru	equ	0xFF8
  2714                           tblptrh	equ	0xFF7
  2715                           tblptrl	equ	0xFF6
  2716                           tablat	equ	0xFF5
  2717                           prodh	equ	0xFF4
  2718                           prodl	equ	0xFF3
  2719                           intcon	equ	0xFF2
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           indf1	equ	0xFE7
  2723                           postdec1	equ	0xFE5
  2724                           fsr1h	equ	0xFE2
  2725                           fsr1l	equ	0xFE1
  2726                           indf2	equ	0xFDF
  2727                           postinc2	equ	0xFDE
  2728                           postdec2	equ	0xFDD
  2729                           fsr2h	equ	0xFDA
  2730                           fsr2l	equ	0xFD9
  2731                           status	equ	0xFD8
  2732                           
  2733 ;; *************** function ___lwdiv *****************
  2734 ;; Defined at:
  2735 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  dividend        2   17[COMRAM] unsigned int 
  2738 ;;  divisor         2   19[COMRAM] unsigned int 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  quotient        2   22[COMRAM] unsigned int 
  2741 ;;  counter         1   21[COMRAM] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  2   17[COMRAM] unsigned int 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2751 ;;      Params:         4       0       0       0       0       0       0       0       0
  2752 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2754 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2755 ;;Total ram usage:        7 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_sprintf
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text10
  2766  0014EC                     __ptext10:
  2767                           	opt stack 0
  2768  0014EC                     ___lwdiv:
  2769                           	opt stack 25
  2770                           
  2771                           ;incstack = 0
  2772  0014EC  0E00               	movlw	0
  2773  0014EE  6E18               	movwf	___lwdiv@quotient+1,c
  2774  0014F0  0E00               	movlw	0
  2775  0014F2  6E17               	movwf	___lwdiv@quotient,c
  2776  0014F4  5014               	movf	___lwdiv@divisor,w,c
  2777  0014F6  1015               	iorwf	___lwdiv@divisor+1,w,c
  2778  0014F8  B4D8               	btfsc	status,2,c
  2779  0014FA  D01C               	goto	l837
  2780  0014FC  0E01               	movlw	1
  2781  0014FE  6E16               	movwf	___lwdiv@counter,c
  2782  001500  D004               	goto	l2876
  2783  001502                     l2874:
  2784  001502  90D8               	bcf	status,0,c
  2785  001504  3614               	rlcf	___lwdiv@divisor,f,c
  2786  001506  3615               	rlcf	___lwdiv@divisor+1,f,c
  2787  001508  2A16               	incf	___lwdiv@counter,f,c
  2788  00150A                     l2876:
  2789  00150A  AE15               	btfss	___lwdiv@divisor+1,7,c
  2790  00150C  D7FA               	goto	l2874
  2791  00150E                     l2878:
  2792  00150E  90D8               	bcf	status,0,c
  2793  001510  3617               	rlcf	___lwdiv@quotient,f,c
  2794  001512  3618               	rlcf	___lwdiv@quotient+1,f,c
  2795  001514  5014               	movf	___lwdiv@divisor,w,c
  2796  001516  5C12               	subwf	___lwdiv@dividend,w,c
  2797  001518  5015               	movf	___lwdiv@divisor+1,w,c
  2798  00151A  5813               	subwfb	___lwdiv@dividend+1,w,c
  2799  00151C  A0D8               	btfss	status,0,c
  2800  00151E  D005               	goto	l2886
  2801  001520  5014               	movf	___lwdiv@divisor,w,c
  2802  001522  5E12               	subwf	___lwdiv@dividend,f,c
  2803  001524  5015               	movf	___lwdiv@divisor+1,w,c
  2804  001526  5A13               	subwfb	___lwdiv@dividend+1,f,c
  2805  001528  8017               	bsf	___lwdiv@quotient,0,c
  2806  00152A                     l2886:
  2807  00152A  90D8               	bcf	status,0,c
  2808  00152C  3215               	rrcf	___lwdiv@divisor+1,f,c
  2809  00152E  3214               	rrcf	___lwdiv@divisor,f,c
  2810  001530  2E16               	decfsz	___lwdiv@counter,f,c
  2811  001532  D7ED               	goto	l2878
  2812  001534                     l837:
  2813  001534  C017  F012         	movff	___lwdiv@quotient,?___lwdiv
  2814  001538  C018  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2815  00153C  0012               	return		;funcret
  2816  00153E                     __end_of___lwdiv:
  2817                           	opt stack 0
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           prodh	equ	0xFF4
  2823                           prodl	equ	0xFF3
  2824                           intcon	equ	0xFF2
  2825                           postinc0	equ	0xFEE
  2826                           wreg	equ	0xFE8
  2827                           indf1	equ	0xFE7
  2828                           postdec1	equ	0xFE5
  2829                           fsr1h	equ	0xFE2
  2830                           fsr1l	equ	0xFE1
  2831                           indf2	equ	0xFDF
  2832                           postinc2	equ	0xFDE
  2833                           postdec2	equ	0xFDD
  2834                           fsr2h	equ	0xFDA
  2835                           fsr2l	equ	0xFD9
  2836                           status	equ	0xFD8
  2837                           
  2838 ;; *************** function _acionaDespertador *****************
  2839 ;; Defined at:
  2840 ;;		line 229 in file "main.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    1
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_atualiza_Tela
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text11
  2869  0017CE                     __ptext11:
  2870                           	opt stack 0
  2871  0017CE                     _acionaDespertador:
  2872                           	opt stack 27
  2873                           
  2874                           ;main.c: 230: if(virouDia){
  2875                           
  2876                           ;incstack = 0
  2877  0017CE  5047               	movf	_virouDia,w,c
  2878  0017D0  B4D8               	btfsc	status,2,c
  2879  0017D2  0012               	return	
  2880                           
  2881                           ;main.c: 231: if((data_horario.horario[0] == horarioDespertador[0]) && (data_horario.hor
      +                          ario[1] == horarioDespertador[1]) && (data_horario.horario[3] == horarioDespertador[3]) 
      +                          && (data_horario.horario[4] == horarioDespertador[4])){
  2882  0017D4  503E               	movf	_horarioDespertador,w,c
  2883  0017D6  0100               	movlb	0	; () banked
  2884  0017D8  1960               	xorwf	_data_horario& (0+255),w,b
  2885  0017DA  A4D8               	btfss	status,2,c
  2886  0017DC  0012               	return	
  2887                           
  2888                           ; BSR set to: 0
  2889  0017DE  503F               	movf	_horarioDespertador+1,w,c
  2890  0017E0  0100               	movlb	0	; () banked
  2891  0017E2  1961               	xorwf	(_data_horario+1)& (0+255),w,b
  2892  0017E4  A4D8               	btfss	status,2,c
  2893  0017E6  0012               	return	
  2894                           
  2895                           ; BSR set to: 0
  2896  0017E8  5041               	movf	_horarioDespertador+3,w,c
  2897  0017EA  0100               	movlb	0	; () banked
  2898  0017EC  1963               	xorwf	(_data_horario+3)& (0+255),w,b
  2899  0017EE  A4D8               	btfss	status,2,c
  2900  0017F0  0012               	return	
  2901                           
  2902                           ; BSR set to: 0
  2903  0017F2  5042               	movf	_horarioDespertador+4,w,c
  2904  0017F4  0100               	movlb	0	; () banked
  2905  0017F6  1964               	xorwf	(_data_horario+4)& (0+255),w,b
  2906  0017F8  A4D8               	btfss	status,2,c
  2907  0017FA  0012               	return	
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;main.c: 232: flagDespertadorLigado = 1;
  2911  0017FC  0E01               	movlw	1
  2912  0017FE  6E2B               	movwf	_flagDespertadorLigado,c
  2913                           
  2914                           ; BSR set to: 0
  2915  001800  0012               	return	
  2916  001802                     __end_of_acionaDespertador:
  2917                           	opt stack 0
  2918                           tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           prodh	equ	0xFF4
  2923                           prodl	equ	0xFF3
  2924                           intcon	equ	0xFF2
  2925                           postinc0	equ	0xFEE
  2926                           wreg	equ	0xFE8
  2927                           indf1	equ	0xFE7
  2928                           postdec1	equ	0xFE5
  2929                           fsr1h	equ	0xFE2
  2930                           fsr1l	equ	0xFE1
  2931                           indf2	equ	0xFDF
  2932                           postinc2	equ	0xFDE
  2933                           postdec2	equ	0xFDD
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function _maquinaEstado *****************
  2939 ;; Defined at:
  2940 ;;		line 546 in file "main.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2957 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    4
  2961 ;; This function calls:
  2962 ;;		_enviaByte
  2963 ;;		_trataComando
  2964 ;;		_tx_data
  2965 ;;		_verificaCRCBUFFCOM
  2966 ;; This function is called by:
  2967 ;;		_main
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text12
  2972  0015DE                     __ptext12:
  2973                           	opt stack 0
  2974  0015DE                     _maquinaEstado:
  2975                           	opt stack 26
  2976                           
  2977                           ;main.c: 548: switch(estado){
  2978                           
  2979                           ;incstack = 0
  2980  0015DE  D011               	goto	l3680
  2981  0015E0                     l3668:
  2982                           
  2983                           ;main.c: 551: verificaCRCBUFFCOM();
  2984  0015E0  ECC8  F00A         	call	_verificaCRCBUFFCOM	;wreg free
  2985                           
  2986                           ;main.c: 553: break;
  2987  0015E4  0012               	return	
  2988  0015E6                     l3670:
  2989                           
  2990                           ;main.c: 557: trataComando();
  2991  0015E6  EC28  F004         	call	_trataComando	;wreg free
  2992                           
  2993                           ;main.c: 559: break;
  2994  0015EA  0012               	return	
  2995  0015EC                     l3672:
  2996                           
  2997                           ;main.c: 562: tx_data();
  2998  0015EC  ECCB  F00B         	call	_tx_data	;wreg free
  2999                           
  3000                           ;main.c: 563: break;
  3001  0015F0  0012               	return	
  3002  0015F2                     l3674:
  3003                           
  3004                           ;main.c: 566: enviaByte(0x05);
  3005  0015F2  0E05               	movlw	5
  3006  0015F4  EC4B  F00C         	call	_enviaByte
  3007                           
  3008                           ;main.c: 568: break;
  3009  0015F8  0012               	return	
  3010  0015FA                     l3676:
  3011                           
  3012                           ;main.c: 571: enviaByte(0x15);
  3013  0015FA  0E15               	movlw	21
  3014  0015FC  EC4B  F00C         	call	_enviaByte
  3015                           
  3016                           ;main.c: 580: }
  3017                           
  3018                           ;main.c: 577: break;
  3019                           
  3020                           ;main.c: 575: default:
  3021                           
  3022                           ;main.c: 573: break;
  3023  001600  0012               	return	
  3024  001602                     l3680:
  3025  001602  502F               	movf	_estado,w,c
  3026                           
  3027                           ; Switch size 1, requested type "space"
  3028                           ; Number of cases is 5, Range of values is 1 to 5
  3029                           ; switch strategies available:
  3030                           ; Name         Instructions Cycles
  3031                           ; simple_byte           16     9 (average)
  3032                           ;	Chosen strategy is simple_byte
  3033  001604  0A01               	xorlw	1	; case 1
  3034  001606  B4D8               	btfsc	status,2,c
  3035  001608  D7EB               	goto	l3668
  3036  00160A  0A03               	xorlw	3	; case 2
  3037  00160C  B4D8               	btfsc	status,2,c
  3038  00160E  D7EB               	goto	l3670
  3039  001610  0A01               	xorlw	1	; case 3
  3040  001612  B4D8               	btfsc	status,2,c
  3041  001614  D7EB               	goto	l3672
  3042  001616  0A07               	xorlw	7	; case 4
  3043  001618  B4D8               	btfsc	status,2,c
  3044  00161A  D7EB               	goto	l3674
  3045  00161C  0A01               	xorlw	1	; case 5
  3046  00161E  A4D8               	btfss	status,2,c
  3047  001620  0012               	return	
  3048  001622  D7EB               	goto	l3676
  3049  001624                     __end_of_maquinaEstado:
  3050                           	opt stack 0
  3051                           tblptru	equ	0xFF8
  3052                           tblptrh	equ	0xFF7
  3053                           tblptrl	equ	0xFF6
  3054                           tablat	equ	0xFF5
  3055                           prodh	equ	0xFF4
  3056                           prodl	equ	0xFF3
  3057                           intcon	equ	0xFF2
  3058                           postinc0	equ	0xFEE
  3059                           wreg	equ	0xFE8
  3060                           indf1	equ	0xFE7
  3061                           postdec1	equ	0xFE5
  3062                           fsr1h	equ	0xFE2
  3063                           fsr1l	equ	0xFE1
  3064                           indf2	equ	0xFDF
  3065                           postinc2	equ	0xFDE
  3066                           postdec2	equ	0xFDD
  3067                           fsr2h	equ	0xFDA
  3068                           fsr2l	equ	0xFD9
  3069                           status	equ	0xFD8
  3070                           
  3071 ;; *************** function _verificaCRCBUFFCOM *****************
  3072 ;; Defined at:
  3073 ;;		line 515 in file "main.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  crc             2   33[COMRAM] unsigned short 
  3078 ;;  CRC_OK          1   32[COMRAM] unsigned char 
  3079 ;;  crc2            1   31[COMRAM] unsigned char 
  3080 ;;  crc1            1   30[COMRAM] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3090 ;;      Params:         0       0       0       0       0       0       0       0       0
  3091 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3093 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3094 ;;Total ram usage:        5 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    2
  3097 ;; This function calls:
  3098 ;;		_crc16
  3099 ;; This function is called by:
  3100 ;;		_maquinaEstado
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text13
  3105  001590                     __ptext13:
  3106                           	opt stack 0
  3107  001590                     _verificaCRCBUFFCOM:
  3108                           	opt stack 27
  3109                           
  3110                           ;main.c: 518: char CRC_OK =0;
  3111                           
  3112                           ;incstack = 0
  3113  001590  0E00               	movlw	0
  3114  001592  6E21               	movwf	verificaCRCBUFFCOM@CRC_OK,c
  3115                           
  3116                           ;main.c: 519: unsigned short crc;
  3117                           ;main.c: 520: unsigned char crc1, crc2;
  3118                           ;main.c: 522: crc = crc16(BUFFCOM,5);
  3119  001594  0E37               	movlw	low _BUFFCOM
  3120  001596  6E12               	movwf	crc16@data_p,c
  3121  001598  0E00               	movlw	high _BUFFCOM
  3122  00159A  6E13               	movwf	crc16@data_p+1,c
  3123  00159C  0E00               	movlw	0
  3124  00159E  6E15               	movwf	crc16@length+1,c
  3125  0015A0  0E05               	movlw	5
  3126  0015A2  6E14               	movwf	crc16@length,c
  3127  0015A4  ECFB  F007         	call	_crc16	;wreg free
  3128  0015A8  C012  F022         	movff	?_crc16,verificaCRCBUFFCOM@crc
  3129  0015AC  C013  F023         	movff	?_crc16+1,verificaCRCBUFFCOM@crc+1
  3130                           
  3131                           ;main.c: 523: crc1 = crc >> 8;
  3132  0015B0  5023               	movf	verificaCRCBUFFCOM@crc+1,w,c
  3133  0015B2  6E1F               	movwf	verificaCRCBUFFCOM@crc1,c
  3134                           
  3135                           ;main.c: 524: crc2 = crc & 0xFF;
  3136  0015B4  C022  F020         	movff	verificaCRCBUFFCOM@crc,verificaCRCBUFFCOM@crc2
  3137                           
  3138                           ;main.c: 526: if(BUFFCOM[5] == crc1 && BUFFCOM[6] == crc2){
  3139  0015B8  501F               	movf	verificaCRCBUFFCOM@crc1,w,c
  3140  0015BA  183C               	xorwf	_BUFFCOM+5,w,c
  3141  0015BC  A4D8               	btfss	status,2,c
  3142  0015BE  D006               	goto	l3528
  3143  0015C0  5020               	movf	verificaCRCBUFFCOM@crc2,w,c
  3144  0015C2  183D               	xorwf	_BUFFCOM+6,w,c
  3145  0015C4  A4D8               	btfss	status,2,c
  3146  0015C6  D002               	goto	l3528
  3147                           
  3148                           ;main.c: 527: CRC_OK = 1;
  3149  0015C8  0E01               	movlw	1
  3150  0015CA  6E21               	movwf	verificaCRCBUFFCOM@CRC_OK,c
  3151  0015CC                     l3528:
  3152                           
  3153                           ;main.c: 528: }
  3154                           ;main.c: 533: if (CRC_OK == 1)
  3155  0015CC  0421               	decf	verificaCRCBUFFCOM@CRC_OK,w,c
  3156  0015CE  A4D8               	btfss	status,2,c
  3157  0015D0  D003               	goto	l3532
  3158                           
  3159                           ;main.c: 534: {
  3160                           ;main.c: 535: estado = 4;
  3161  0015D2  0E04               	movlw	4
  3162  0015D4  6E2F               	movwf	_estado,c
  3163                           
  3164                           ;main.c: 536: }
  3165  0015D6  0012               	return	
  3166  0015D8                     l3532:
  3167                           
  3168                           ;main.c: 537: else{
  3169                           ;main.c: 540: estado = 5;
  3170  0015D8  0E05               	movlw	5
  3171  0015DA  6E2F               	movwf	_estado,c
  3172  0015DC  0012               	return	
  3173  0015DE                     __end_of_verificaCRCBUFFCOM:
  3174                           	opt stack 0
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           intcon	equ	0xFF2
  3182                           postinc0	equ	0xFEE
  3183                           wreg	equ	0xFE8
  3184                           indf1	equ	0xFE7
  3185                           postdec1	equ	0xFE5
  3186                           fsr1h	equ	0xFE2
  3187                           fsr1l	equ	0xFE1
  3188                           indf2	equ	0xFDF
  3189                           postinc2	equ	0xFDE
  3190                           postdec2	equ	0xFDD
  3191                           fsr2h	equ	0xFDA
  3192                           fsr2l	equ	0xFD9
  3193                           status	equ	0xFD8
  3194                           
  3195 ;; *************** function _tx_data *****************
  3196 ;; Defined at:
  3197 ;;		line 360 in file "main.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  cont            2   17[COMRAM] int 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0
  3212 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3214 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3215 ;;Total ram usage:        2 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_maquinaEstado
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text14
  3226  001796                     __ptext14:
  3227                           	opt stack 0
  3228  001796                     _tx_data:
  3229                           	opt stack 28
  3230                           
  3231                           ;main.c: 362: int cont;
  3232                           ;main.c: 364: for(cont=0;cont<7;cont++)
  3233                           
  3234                           ;incstack = 0
  3235  001796  0E00               	movlw	0
  3236  001798  6E13               	movwf	tx_data@cont+1,c
  3237  00179A  0E00               	movlw	0
  3238  00179C  6E12               	movwf	tx_data@cont,c
  3239  00179E                     l3438:
  3240  00179E  BE13               	btfsc	tx_data@cont+1,7,c
  3241  0017A0  D006               	goto	l202
  3242  0017A2  5013               	movf	tx_data@cont+1,w,c
  3243  0017A4  E111               	bnz	l3448
  3244  0017A6  0E07               	movlw	7
  3245  0017A8  5C12               	subwf	tx_data@cont,w,c
  3246  0017AA  B0D8               	btfsc	status,0,c
  3247  0017AC  D00D               	goto	l3448
  3248  0017AE                     l202:
  3249  0017AE  A89E               	btfss	3998,4,c	;volatile
  3250  0017B0  D7FE               	goto	l202
  3251                           
  3252                           ;main.c: 367: TXREG = BUFFRESP[cont];
  3253  0017B2  0E30               	movlw	low _BUFFRESP
  3254  0017B4  2412               	addwf	tx_data@cont,w,c
  3255  0017B6  6ED9               	movwf	fsr2l,c
  3256  0017B8  0E00               	movlw	high _BUFFRESP
  3257  0017BA  2013               	addwfc	tx_data@cont+1,w,c
  3258  0017BC  6EDA               	movwf	fsr2h,c
  3259  0017BE  50DF               	movf	indf2,w,c
  3260  0017C0  6EAD               	movwf	4013,c	;volatile
  3261  0017C2  4A12               	infsnz	tx_data@cont,f,c
  3262  0017C4  2A13               	incf	tx_data@cont+1,f,c
  3263  0017C6  D7EB               	goto	l3438
  3264  0017C8                     l3448:
  3265                           
  3266                           ;main.c: 368: }
  3267                           ;main.c: 370: estado = 0;
  3268  0017C8  0E00               	movlw	0
  3269  0017CA  6E2F               	movwf	_estado,c
  3270  0017CC  0012               	return		;funcret
  3271  0017CE                     __end_of_tx_data:
  3272                           	opt stack 0
  3273                           tblptru	equ	0xFF8
  3274                           tblptrh	equ	0xFF7
  3275                           tblptrl	equ	0xFF6
  3276                           tablat	equ	0xFF5
  3277                           prodh	equ	0xFF4
  3278                           prodl	equ	0xFF3
  3279                           intcon	equ	0xFF2
  3280                           postinc0	equ	0xFEE
  3281                           wreg	equ	0xFE8
  3282                           indf1	equ	0xFE7
  3283                           postdec1	equ	0xFE5
  3284                           fsr1h	equ	0xFE2
  3285                           fsr1l	equ	0xFE1
  3286                           indf2	equ	0xFDF
  3287                           postinc2	equ	0xFDE
  3288                           postdec2	equ	0xFDD
  3289                           fsr2h	equ	0xFDA
  3290                           fsr2l	equ	0xFD9
  3291                           status	equ	0xFD8
  3292                           
  3293 ;; *************** function _trataComando *****************
  3294 ;; Defined at:
  3295 ;;		line 399 in file "main.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3312 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    3
  3316 ;; This function calls:
  3317 ;;		___awdiv
  3318 ;;		___awmod
  3319 ;;		_atoi
  3320 ;;		_calculaCRCBUFFRESP
  3321 ;;		_memcpy
  3322 ;;		_strlen
  3323 ;; This function is called by:
  3324 ;;		_maquinaEstado
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text15
  3329  000850                     __ptext15:
  3330                           	opt stack 0
  3331  000850                     _trataComando:
  3332                           	opt stack 26
  3333                           
  3334                           ;main.c: 402: switch(BUFFCOM[0])
  3335                           
  3336                           ;incstack = 0
  3337  000850  D13B               	goto	l3510
  3338  000852                     l220:
  3339                           
  3340                           ;main.c: 406: BUFFRESP[0] = BUFFCOM[0];
  3341  000852  C037  F030         	movff	_BUFFCOM,_BUFFRESP
  3342                           
  3343                           ;main.c: 407: BUFFRESP[1] = BUFFCOM[1];
  3344  000856  C038  F031         	movff	_BUFFCOM+1,_BUFFRESP+1
  3345                           
  3346                           ;main.c: 410: switch(BUFFCOM[1])
  3347  00085A  D060               	goto	l3490
  3348  00085C                     l222:
  3349                           
  3350                           ;main.c: 415: BUFFRESP[2] = versao[1];
  3351  00085C  C049  F032         	movff	_versao+1,_BUFFRESP+2
  3352                           
  3353                           ;main.c: 416: BUFFRESP[3] = versao[4];
  3354  000860  C04C  F033         	movff	_versao+4,_BUFFRESP+3
  3355  000864  D059               	goto	l3486
  3356  000866                     l224:
  3357                           
  3358                           ;main.c: 423: pegaHoraData[0] = data_horario.horario[0];
  3359  000866  C060  F044         	movff	_data_horario,_pegaHoraData
  3360                           
  3361                           ;main.c: 424: pegaHoraData[1] = data_horario.horario[1];
  3362  00086A  C061  F045         	movff	_data_horario+1,_pegaHoraData+1
  3363                           
  3364                           ;main.c: 425: BUFFRESP[2] = atoi(pegaHoraData);
  3365  00086E  0E44               	movlw	low _pegaHoraData
  3366  000870  6E18               	movwf	atoi@s,c
  3367  000872  0E00               	movlw	high _pegaHoraData
  3368  000874  6E19               	movwf	atoi@s+1,c
  3369  000876  EC64  F008         	call	_atoi	;wreg free
  3370  00087A  5018               	movf	?_atoi,w,c
  3371  00087C  6E32               	movwf	_BUFFRESP+2,c
  3372                           
  3373                           ;main.c: 426: pegaHoraData[0] = data_horario.horario[3];
  3374  00087E  C063  F044         	movff	_data_horario+3,_pegaHoraData
  3375                           
  3376                           ;main.c: 427: pegaHoraData[1] = data_horario.horario[4];
  3377  000882  C064  F045         	movff	_data_horario+4,_pegaHoraData+1
  3378                           
  3379                           ;main.c: 428: BUFFRESP[3] = atoi(pegaHoraData);
  3380  000886  0E44               	movlw	low _pegaHoraData
  3381  000888  6E18               	movwf	atoi@s,c
  3382  00088A  0E00               	movlw	high _pegaHoraData
  3383  00088C  6E19               	movwf	atoi@s+1,c
  3384  00088E  EC64  F008         	call	_atoi	;wreg free
  3385  000892  5018               	movf	?_atoi,w,c
  3386  000894  6E33               	movwf	_BUFFRESP+3,c
  3387                           
  3388                           ;main.c: 429: pegaHoraData[0] = data_horario.horario[6];
  3389  000896  C066  F044         	movff	_data_horario+6,_pegaHoraData
  3390                           
  3391                           ;main.c: 430: pegaHoraData[1] = data_horario.horario[7];
  3392  00089A  C067  F045         	movff	_data_horario+7,_pegaHoraData+1
  3393                           
  3394                           ;main.c: 431: BUFFRESP[4] = atoi(pegaHoraData);
  3395  00089E  0E44               	movlw	low _pegaHoraData
  3396  0008A0  6E18               	movwf	atoi@s,c
  3397  0008A2  0E00               	movlw	high _pegaHoraData
  3398  0008A4  6E19               	movwf	atoi@s+1,c
  3399  0008A6  EC64  F008         	call	_atoi	;wreg free
  3400  0008AA  5018               	movf	?_atoi,w,c
  3401  0008AC  D01B               	goto	L1
  3402  0008AE                     l225:
  3403                           
  3404                           ;main.c: 435: pegaHoraData[0] = data_horario.data[0];
  3405  0008AE  C069  F044         	movff	_data_horario+9,_pegaHoraData
  3406                           
  3407                           ;main.c: 436: pegaHoraData[1] = data_horario.data[1];
  3408  0008B2  C06A  F045         	movff	_data_horario+10,_pegaHoraData+1
  3409                           
  3410                           ;main.c: 437: BUFFRESP[2] = atoi(pegaHoraData);
  3411  0008B6  0E44               	movlw	low _pegaHoraData
  3412  0008B8  6E18               	movwf	atoi@s,c
  3413  0008BA  0E00               	movlw	high _pegaHoraData
  3414  0008BC  6E19               	movwf	atoi@s+1,c
  3415  0008BE  EC64  F008         	call	_atoi	;wreg free
  3416  0008C2  5018               	movf	?_atoi,w,c
  3417  0008C4  6E32               	movwf	_BUFFRESP+2,c
  3418                           
  3419                           ;main.c: 438: pegaHoraData[0] = data_horario.data[3];
  3420  0008C6  C06C  F044         	movff	_data_horario+12,_pegaHoraData
  3421                           
  3422                           ;main.c: 439: pegaHoraData[1] = data_horario.data[4];
  3423  0008CA  C06D  F045         	movff	_data_horario+13,_pegaHoraData+1
  3424                           
  3425                           ;main.c: 440: BUFFRESP[3] = atoi(pegaHoraData);
  3426  0008CE  0E44               	movlw	low _pegaHoraData
  3427  0008D0  6E18               	movwf	atoi@s,c
  3428  0008D2  0E00               	movlw	high _pegaHoraData
  3429  0008D4  6E19               	movwf	atoi@s+1,c
  3430  0008D6  EC64  F008         	call	_atoi	;wreg free
  3431  0008DA  5018               	movf	?_atoi,w,c
  3432  0008DC  6E33               	movwf	_BUFFRESP+3,c
  3433                           
  3434                           ;main.c: 441: BUFFRESP[4] = data_horario.ano - 2000;
  3435  0008DE  0100               	movlb	0	; () banked
  3436  0008E0  5172               	movf	(_data_horario+18)& (0+255),w,b
  3437  0008E2  0F30               	addlw	48
  3438  0008E4                     L1:
  3439  0008E4  6E34               	movwf	_BUFFRESP+4,c
  3440                           
  3441                           ;main.c: 443: break;
  3442  0008E6  D0F7               	goto	l3512
  3443  0008E8                     l226:
  3444                           
  3445                           ;main.c: 445: pegaHoraData[0] = horarioDespertador[0];
  3446  0008E8  C03E  F044         	movff	_horarioDespertador,_pegaHoraData
  3447                           
  3448                           ;main.c: 446: pegaHoraData[1] = horarioDespertador[1];
  3449  0008EC  C03F  F045         	movff	_horarioDespertador+1,_pegaHoraData+1
  3450                           
  3451                           ;main.c: 447: BUFFRESP[2] = atoi(pegaHoraData);
  3452  0008F0  0E44               	movlw	low _pegaHoraData
  3453  0008F2  6E18               	movwf	atoi@s,c
  3454  0008F4  0E00               	movlw	high _pegaHoraData
  3455  0008F6  6E19               	movwf	atoi@s+1,c
  3456  0008F8  EC64  F008         	call	_atoi	;wreg free
  3457  0008FC  5018               	movf	?_atoi,w,c
  3458  0008FE  6E32               	movwf	_BUFFRESP+2,c
  3459                           
  3460                           ;main.c: 448: pegaHoraData[0] = horarioDespertador[3];
  3461  000900  C041  F044         	movff	_horarioDespertador+3,_pegaHoraData
  3462                           
  3463                           ;main.c: 449: pegaHoraData[1] = horarioDespertador[4];
  3464  000904  C042  F045         	movff	_horarioDespertador+4,_pegaHoraData+1
  3465                           
  3466                           ;main.c: 450: BUFFRESP[3] = atoi(pegaHoraData);
  3467  000908  0E44               	movlw	low _pegaHoraData
  3468  00090A  6E18               	movwf	atoi@s,c
  3469  00090C  0E00               	movlw	high _pegaHoraData
  3470  00090E  6E19               	movwf	atoi@s+1,c
  3471  000910  EC64  F008         	call	_atoi	;wreg free
  3472  000914  5018               	movf	?_atoi,w,c
  3473  000916  6E33               	movwf	_BUFFRESP+3,c
  3474  000918                     l3486:
  3475                           
  3476                           ;main.c: 451: BUFFRESP[4] = 0xFF;
  3477  000918  6834               	setf	_BUFFRESP+4,c
  3478                           
  3479                           ;main.c: 457: }
  3480                           
  3481                           ;main.c: 455: break;
  3482                           
  3483                           ;main.c: 454: default:
  3484                           
  3485                           ;main.c: 452: break;
  3486  00091A  D0DD               	goto	l3512
  3487  00091C                     l3490:
  3488  00091C  5038               	movf	_BUFFCOM+1,w,c
  3489                           
  3490                           ; Switch size 1, requested type "space"
  3491                           ; Number of cases is 4, Range of values is 0 to 3
  3492                           ; switch strategies available:
  3493                           ; Name         Instructions Cycles
  3494                           ; simple_byte           13     7 (average)
  3495                           ;	Chosen strategy is simple_byte
  3496  00091E  0A00               	xorlw	0	; case 0
  3497  000920  B4D8               	btfsc	status,2,c
  3498  000922  D79C               	goto	l222
  3499  000924  0A01               	xorlw	1	; case 1
  3500  000926  B4D8               	btfsc	status,2,c
  3501  000928  D79E               	goto	l224
  3502  00092A  0A03               	xorlw	3	; case 2
  3503  00092C  B4D8               	btfsc	status,2,c
  3504  00092E  D7BF               	goto	l225
  3505  000930  0A01               	xorlw	1	; case 3
  3506  000932  B4D8               	btfsc	status,2,c
  3507  000934  D7D9               	goto	l226
  3508                           
  3509                           ;main.c: 459: break;
  3510  000936  D0CF               	goto	l3512
  3511  000938                     l3492:
  3512                           
  3513                           ;main.c: 466: memcpy(BUFFRESP,BUFFCOM,strlen(BUFFCOM));
  3514  000938  0E30               	movlw	low _BUFFRESP
  3515  00093A  6E18               	movwf	memcpy@d1,c
  3516  00093C  0E00               	movlw	high _BUFFRESP
  3517  00093E  6E19               	movwf	memcpy@d1+1,c
  3518  000940  0E37               	movlw	low _BUFFCOM
  3519  000942  6E1A               	movwf	memcpy@s1,c
  3520  000944  0E00               	movlw	high _BUFFCOM
  3521  000946  6E1B               	movwf	memcpy@s1+1,c
  3522  000948  0E37               	movlw	low _BUFFCOM
  3523  00094A  6E12               	movwf	strlen@s,c
  3524  00094C  0E00               	movlw	high _BUFFCOM
  3525  00094E  6E13               	movwf	strlen@s+1,c
  3526  000950  EC91  F00B         	call	_strlen	;wreg free
  3527  000954  C012  F01C         	movff	?_strlen,memcpy@n
  3528  000958  C013  F01D         	movff	?_strlen+1,memcpy@n+1
  3529  00095C  EC33  F00B         	call	_memcpy	;wreg free
  3530                           
  3531                           ;main.c: 470: switch(BUFFCOM[1])
  3532  000960  D0A5               	goto	l3506
  3533  000962                     l231:
  3534                           
  3535                           ;main.c: 475: versao[1] = BUFFCOM[2];
  3536  000962  C039  F049         	movff	_BUFFCOM+2,_versao+1
  3537                           
  3538                           ;main.c: 476: versao[4] = BUFFCOM[3];
  3539  000966  C03A  F04C         	movff	_BUFFCOM+3,_versao+4
  3540                           
  3541                           ;main.c: 477: break;
  3542  00096A  D0B5               	goto	l3512
  3543  00096C                     l3494:
  3544                           
  3545                           ;main.c: 480: data_horario.data[0] = ((BUFFCOM[2]/10) + '0');
  3546  00096C  C039  F012         	movff	_BUFFCOM+2,___awdiv@dividend
  3547  000970  6A13               	clrf	___awdiv@dividend+1,c
  3548  000972  0E00               	movlw	0
  3549  000974  6E15               	movwf	___awdiv@divisor+1,c
  3550  000976  0E0A               	movlw	10
  3551  000978  6E14               	movwf	___awdiv@divisor,c
  3552  00097A  EC6C  F009         	call	___awdiv	;wreg free
  3553  00097E  5012               	movf	?___awdiv,w,c
  3554  000980  0F30               	addlw	48
  3555  000982  0100               	movlb	0	; () banked
  3556  000984  6F69               	movwf	(_data_horario+9)& (0+255),b
  3557                           
  3558                           ;main.c: 481: data_horario.data[1] = ((BUFFCOM[2]%10) + '0');
  3559  000986  C039  F012         	movff	_BUFFCOM+2,___awmod@dividend
  3560  00098A  6A13               	clrf	___awmod@dividend+1,c
  3561  00098C  0E00               	movlw	0
  3562  00098E  6E15               	movwf	___awmod@divisor+1,c
  3563  000990  0E0A               	movlw	10
  3564  000992  6E14               	movwf	___awmod@divisor,c
  3565  000994  ECAE  F009         	call	___awmod	;wreg free
  3566  000998  5012               	movf	?___awmod,w,c
  3567  00099A  0F30               	addlw	48
  3568  00099C  0100               	movlb	0	; () banked
  3569  00099E  6F6A               	movwf	(_data_horario+10)& (0+255),b
  3570                           
  3571                           ;main.c: 482: data_horario.data[3] = ((BUFFCOM[3]/10) + '0');
  3572  0009A0  C03A  F012         	movff	_BUFFCOM+3,___awdiv@dividend
  3573  0009A4  6A13               	clrf	___awdiv@dividend+1,c
  3574  0009A6  0E00               	movlw	0
  3575  0009A8  6E15               	movwf	___awdiv@divisor+1,c
  3576  0009AA  0E0A               	movlw	10
  3577  0009AC  6E14               	movwf	___awdiv@divisor,c
  3578  0009AE  EC6C  F009         	call	___awdiv	;wreg free
  3579  0009B2  5012               	movf	?___awdiv,w,c
  3580  0009B4  0F30               	addlw	48
  3581  0009B6  0100               	movlb	0	; () banked
  3582  0009B8  6F6C               	movwf	(_data_horario+12)& (0+255),b
  3583                           
  3584                           ;main.c: 483: data_horario.data[4] = ((BUFFCOM[3]%10) + '0');
  3585  0009BA  C03A  F012         	movff	_BUFFCOM+3,___awmod@dividend
  3586  0009BE  6A13               	clrf	___awmod@dividend+1,c
  3587  0009C0  0E00               	movlw	0
  3588  0009C2  6E15               	movwf	___awmod@divisor+1,c
  3589  0009C4  0E0A               	movlw	10
  3590  0009C6  6E14               	movwf	___awmod@divisor,c
  3591  0009C8  ECAE  F009         	call	___awmod	;wreg free
  3592  0009CC  D039               	goto	L2
  3593  0009CE                     l3496:
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;main.c: 484: data_horario.ano = BUFFCOM[4] + 2000;
  3597  0009CE  0ED0               	movlw	208
  3598  0009D0  243B               	addwf	_BUFFCOM+4,w,c
  3599  0009D2  0100               	movlb	0	; () banked
  3600  0009D4  6F72               	movwf	(_data_horario+18)& (0+255),b
  3601  0009D6  0100               	movlb	0	; () banked
  3602  0009D8  6B73               	clrf	(_data_horario+19)& (0+255),b
  3603  0009DA  0E07               	movlw	7
  3604  0009DC  2373               	addwfc	(_data_horario+19)& (0+255),f,b
  3605                           
  3606                           ;main.c: 486: break;
  3607  0009DE  D07B               	goto	l3512
  3608  0009E0                     l3498:
  3609                           
  3610                           ;main.c: 489: data_horario.data[0] = ((BUFFCOM[2]/10) + '0');
  3611  0009E0  C039  F012         	movff	_BUFFCOM+2,___awdiv@dividend
  3612  0009E4  6A13               	clrf	___awdiv@dividend+1,c
  3613  0009E6  0E00               	movlw	0
  3614  0009E8  6E15               	movwf	___awdiv@divisor+1,c
  3615  0009EA  0E0A               	movlw	10
  3616  0009EC  6E14               	movwf	___awdiv@divisor,c
  3617  0009EE  EC6C  F009         	call	___awdiv	;wreg free
  3618  0009F2  5012               	movf	?___awdiv,w,c
  3619  0009F4  0F30               	addlw	48
  3620  0009F6  0100               	movlb	0	; () banked
  3621  0009F8  6F69               	movwf	(_data_horario+9)& (0+255),b
  3622                           
  3623                           ;main.c: 490: data_horario.data[1] = ((BUFFCOM[2]%10) + '0');
  3624  0009FA  C039  F012         	movff	_BUFFCOM+2,___awmod@dividend
  3625  0009FE  6A13               	clrf	___awmod@dividend+1,c
  3626  000A00  0E00               	movlw	0
  3627  000A02  6E15               	movwf	___awmod@divisor+1,c
  3628  000A04  0E0A               	movlw	10
  3629  000A06  6E14               	movwf	___awmod@divisor,c
  3630  000A08  ECAE  F009         	call	___awmod	;wreg free
  3631  000A0C  5012               	movf	?___awmod,w,c
  3632  000A0E  0F30               	addlw	48
  3633  000A10  0100               	movlb	0	; () banked
  3634  000A12  6F6A               	movwf	(_data_horario+10)& (0+255),b
  3635                           
  3636                           ;main.c: 491: data_horario.data[3] = ((BUFFCOM[3]/10) + '0');
  3637  000A14  C03A  F012         	movff	_BUFFCOM+3,___awdiv@dividend
  3638  000A18  6A13               	clrf	___awdiv@dividend+1,c
  3639  000A1A  0E00               	movlw	0
  3640  000A1C  6E15               	movwf	___awdiv@divisor+1,c
  3641  000A1E  0E0A               	movlw	10
  3642  000A20  6E14               	movwf	___awdiv@divisor,c
  3643  000A22  EC6C  F009         	call	___awdiv	;wreg free
  3644  000A26  5012               	movf	?___awdiv,w,c
  3645  000A28  0F30               	addlw	48
  3646  000A2A  0100               	movlb	0	; () banked
  3647  000A2C  6F6C               	movwf	(_data_horario+12)& (0+255),b
  3648                           
  3649                           ;main.c: 492: data_horario.data[4] = ((BUFFCOM[3]%10) + '0');
  3650  000A2E  C03A  F012         	movff	_BUFFCOM+3,___awmod@dividend
  3651  000A32  6A13               	clrf	___awmod@dividend+1,c
  3652  000A34  0E00               	movlw	0
  3653  000A36  6E15               	movwf	___awmod@divisor+1,c
  3654  000A38  0E0A               	movlw	10
  3655  000A3A  6E14               	movwf	___awmod@divisor,c
  3656  000A3C  ECAE  F009         	call	___awmod	;wreg free
  3657  000A40                     L2:
  3658  000A40  5012               	movf	?___awmod,w,c
  3659  000A42  0F30               	addlw	48
  3660  000A44  0100               	movlb	0	; () banked
  3661  000A46  6F6D               	movwf	(_data_horario+13)& (0+255),b
  3662  000A48  D7C2               	goto	l3496
  3663  000A4A                     l3502:
  3664                           
  3665                           ;main.c: 496: horarioDespertador[0] = ((BUFFCOM[2]/10) + '0');
  3666  000A4A  C039  F012         	movff	_BUFFCOM+2,___awdiv@dividend
  3667  000A4E  6A13               	clrf	___awdiv@dividend+1,c
  3668  000A50  0E00               	movlw	0
  3669  000A52  6E15               	movwf	___awdiv@divisor+1,c
  3670  000A54  0E0A               	movlw	10
  3671  000A56  6E14               	movwf	___awdiv@divisor,c
  3672  000A58  EC6C  F009         	call	___awdiv	;wreg free
  3673  000A5C  5012               	movf	?___awdiv,w,c
  3674  000A5E  0F30               	addlw	48
  3675  000A60  6E3E               	movwf	_horarioDespertador,c
  3676                           
  3677                           ;main.c: 497: horarioDespertador[1] = ((BUFFCOM[2]%10) + '0');
  3678  000A62  C039  F012         	movff	_BUFFCOM+2,___awmod@dividend
  3679  000A66  6A13               	clrf	___awmod@dividend+1,c
  3680  000A68  0E00               	movlw	0
  3681  000A6A  6E15               	movwf	___awmod@divisor+1,c
  3682  000A6C  0E0A               	movlw	10
  3683  000A6E  6E14               	movwf	___awmod@divisor,c
  3684  000A70  ECAE  F009         	call	___awmod	;wreg free
  3685  000A74  5012               	movf	?___awmod,w,c
  3686  000A76  0F30               	addlw	48
  3687  000A78  6E3F               	movwf	_horarioDespertador+1,c
  3688                           
  3689                           ;main.c: 498: horarioDespertador[3] = ((BUFFCOM[3]/10) + '0');
  3690  000A7A  C03A  F012         	movff	_BUFFCOM+3,___awdiv@dividend
  3691  000A7E  6A13               	clrf	___awdiv@dividend+1,c
  3692  000A80  0E00               	movlw	0
  3693  000A82  6E15               	movwf	___awdiv@divisor+1,c
  3694  000A84  0E0A               	movlw	10
  3695  000A86  6E14               	movwf	___awdiv@divisor,c
  3696  000A88  EC6C  F009         	call	___awdiv	;wreg free
  3697  000A8C  5012               	movf	?___awdiv,w,c
  3698  000A8E  0F30               	addlw	48
  3699  000A90  6E41               	movwf	_horarioDespertador+3,c
  3700                           
  3701                           ;main.c: 499: horarioDespertador[4] = ((BUFFCOM[3]%10) + '0');
  3702  000A92  C03A  F012         	movff	_BUFFCOM+3,___awmod@dividend
  3703  000A96  6A13               	clrf	___awmod@dividend+1,c
  3704  000A98  0E00               	movlw	0
  3705  000A9A  6E15               	movwf	___awmod@divisor+1,c
  3706  000A9C  0E0A               	movlw	10
  3707  000A9E  6E14               	movwf	___awmod@divisor,c
  3708  000AA0  ECAE  F009         	call	___awmod	;wreg free
  3709  000AA4  5012               	movf	?___awmod,w,c
  3710  000AA6  0F30               	addlw	48
  3711  000AA8  6E42               	movwf	_horarioDespertador+4,c
  3712                           
  3713                           ;main.c: 504: }
  3714                           
  3715                           ;main.c: 502: break;
  3716                           
  3717                           ;main.c: 501: default:
  3718                           
  3719                           ;main.c: 500: break;
  3720  000AAA  D015               	goto	l3512
  3721  000AAC                     l3506:
  3722  000AAC  5038               	movf	_BUFFCOM+1,w,c
  3723                           
  3724                           ; Switch size 1, requested type "space"
  3725                           ; Number of cases is 4, Range of values is 0 to 3
  3726                           ; switch strategies available:
  3727                           ; Name         Instructions Cycles
  3728                           ; simple_byte           13     7 (average)
  3729                           ;	Chosen strategy is simple_byte
  3730  000AAE  0A00               	xorlw	0	; case 0
  3731  000AB0  B4D8               	btfsc	status,2,c
  3732  000AB2  D757               	goto	l231
  3733  000AB4  0A01               	xorlw	1	; case 1
  3734  000AB6  B4D8               	btfsc	status,2,c
  3735  000AB8  D759               	goto	l3494
  3736  000ABA  0A03               	xorlw	3	; case 2
  3737  000ABC  B4D8               	btfsc	status,2,c
  3738  000ABE  D790               	goto	l3498
  3739  000AC0  0A01               	xorlw	1	; case 3
  3740  000AC2  B4D8               	btfsc	status,2,c
  3741  000AC4  D7C2               	goto	l3502
  3742                           
  3743                           ;main.c: 508: }
  3744                           
  3745                           ;main.c: 507: break;
  3746  000AC6  D007               	goto	l3512
  3747  000AC8                     l3510:
  3748  000AC8  5037               	movf	_BUFFCOM,w,c
  3749                           
  3750                           ; Switch size 1, requested type "space"
  3751                           ; Number of cases is 2, Range of values is 1 to 2
  3752                           ; switch strategies available:
  3753                           ; Name         Instructions Cycles
  3754                           ; simple_byte            7     4 (average)
  3755                           ;	Chosen strategy is simple_byte
  3756  000ACA  0A01               	xorlw	1	; case 1
  3757  000ACC  B4D8               	btfsc	status,2,c
  3758  000ACE  D6C1               	goto	l220
  3759  000AD0  0A03               	xorlw	3	; case 2
  3760  000AD2  B4D8               	btfsc	status,2,c
  3761  000AD4  D731               	goto	l3492
  3762  000AD6                     l3512:
  3763                           
  3764                           ;main.c: 512: calculaCRCBUFFRESP();
  3765  000AD6  EC01  F00C         	call	_calculaCRCBUFFRESP	;wreg free
  3766  000ADA  0012               	return		;funcret
  3767  000ADC                     __end_of_trataComando:
  3768                           	opt stack 0
  3769                           tblptru	equ	0xFF8
  3770                           tblptrh	equ	0xFF7
  3771                           tblptrl	equ	0xFF6
  3772                           tablat	equ	0xFF5
  3773                           prodh	equ	0xFF4
  3774                           prodl	equ	0xFF3
  3775                           intcon	equ	0xFF2
  3776                           postinc0	equ	0xFEE
  3777                           wreg	equ	0xFE8
  3778                           indf1	equ	0xFE7
  3779                           postdec1	equ	0xFE5
  3780                           fsr1h	equ	0xFE2
  3781                           fsr1l	equ	0xFE1
  3782                           indf2	equ	0xFDF
  3783                           postinc2	equ	0xFDE
  3784                           postdec2	equ	0xFDD
  3785                           fsr2h	equ	0xFDA
  3786                           fsr2l	equ	0xFD9
  3787                           status	equ	0xFD8
  3788                           
  3789 ;; *************** function _strlen *****************
  3790 ;; Defined at:
  3791 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  s               2   17[COMRAM] PTR const unsigned char 
  3794 ;;		 -> BUFFCOM(7), 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  cp              2   21[COMRAM] PTR const unsigned char 
  3797 ;;		 -> BUFFCOM(7), 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  2   17[COMRAM] unsigned int 
  3800 ;; Registers used:
  3801 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3807 ;;      Params:         2       0       0       0       0       0       0       0       0
  3808 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3809 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3810 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3811 ;;Total ram usage:        6 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    1
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_trataComando
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text16
  3822  001722                     __ptext16:
  3823                           	opt stack 0
  3824  001722                     _strlen:
  3825                           	opt stack 27
  3826                           
  3827                           ;incstack = 0
  3828  001722  C012  F016         	movff	strlen@s,strlen@cp
  3829  001726  C013  F017         	movff	strlen@s+1,strlen@cp+1
  3830  00172A  D002               	goto	l3210
  3831  00172C                     l3208:
  3832  00172C  4A16               	infsnz	strlen@cp,f,c
  3833  00172E  2A17               	incf	strlen@cp+1,f,c
  3834  001730                     l3210:
  3835  001730  C016  FFD9         	movff	strlen@cp,fsr2l
  3836  001734  C017  FFDA         	movff	strlen@cp+1,fsr2h
  3837  001738  50DF               	movf	indf2,w,c
  3838  00173A  A4D8               	btfss	status,2,c
  3839  00173C  D7F7               	goto	l3208
  3840  00173E  C012  F014         	movff	strlen@s,??_strlen
  3841  001742  C013  F015         	movff	strlen@s+1,??_strlen+1
  3842  001746  1E14               	comf	??_strlen,f,c
  3843  001748  1E15               	comf	??_strlen+1,f,c
  3844  00174A  4A14               	infsnz	??_strlen,f,c
  3845  00174C  2A15               	incf	??_strlen+1,f,c
  3846  00174E  5016               	movf	strlen@cp,w,c
  3847  001750  2414               	addwf	??_strlen,w,c
  3848  001752  6E12               	movwf	?_strlen,c
  3849  001754  5017               	movf	strlen@cp+1,w,c
  3850  001756  2015               	addwfc	??_strlen+1,w,c
  3851  001758  6E13               	movwf	?_strlen+1,c
  3852  00175A  0012               	return	
  3853  00175C                     __end_of_strlen:
  3854                           	opt stack 0
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           prodh	equ	0xFF4
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           indf1	equ	0xFE7
  3865                           postdec1	equ	0xFE5
  3866                           fsr1h	equ	0xFE2
  3867                           fsr1l	equ	0xFE1
  3868                           indf2	equ	0xFDF
  3869                           postinc2	equ	0xFDE
  3870                           postdec2	equ	0xFDD
  3871                           fsr2h	equ	0xFDA
  3872                           fsr2l	equ	0xFD9
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function _memcpy *****************
  3876 ;; Defined at:
  3877 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  d1              2   23[COMRAM] PTR void 
  3880 ;;		 -> BUFFRESP(7), 
  3881 ;;  s1              2   25[COMRAM] PTR const void 
  3882 ;;		 -> BUFFCOM(7), 
  3883 ;;  n               2   27[COMRAM] unsigned int 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  s               2   31[COMRAM] PTR const unsigned char 
  3886 ;;		 -> BUFFCOM(7), 
  3887 ;;  d               2   29[COMRAM] PTR unsigned char 
  3888 ;;		 -> BUFFRESP(7), 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  2   23[COMRAM] PTR void 
  3891 ;; Registers used:
  3892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3898 ;;      Params:         6       0       0       0       0       0       0       0       0
  3899 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3901 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3902 ;;Total ram usage:       10 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    1
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_trataComando
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text17
  3913  001666                     __ptext17:
  3914                           	opt stack 0
  3915  001666                     _memcpy:
  3916                           	opt stack 27
  3917                           
  3918                           ;incstack = 0
  3919  001666  C01A  F020         	movff	memcpy@s1,memcpy@s
  3920  00166A  C01B  F021         	movff	memcpy@s1+1,memcpy@s+1
  3921  00166E  C018  F01E         	movff	memcpy@d1,memcpy@d
  3922  001672  C019  F01F         	movff	memcpy@d1+1,memcpy@d+1
  3923  001676  D00E               	goto	l3224
  3924  001678                     l3218:
  3925  001678  C020  FFD9         	movff	memcpy@s,fsr2l
  3926  00167C  C021  FFDA         	movff	memcpy@s+1,fsr2h
  3927  001680  C01E  FFE1         	movff	memcpy@d,fsr1l
  3928  001684  C01F  FFE2         	movff	memcpy@d+1,fsr1h
  3929  001688  CFDF FFE7          	movff	indf2,indf1
  3930  00168C  4A20               	infsnz	memcpy@s,f,c
  3931  00168E  2A21               	incf	memcpy@s+1,f,c
  3932  001690  4A1E               	infsnz	memcpy@d,f,c
  3933  001692  2A1F               	incf	memcpy@d+1,f,c
  3934  001694                     l3224:
  3935  001694  061C               	decf	memcpy@n,f,c
  3936  001696  A0D8               	btfss	status,0,c
  3937  001698  061D               	decf	memcpy@n+1,f,c
  3938  00169A  281C               	incf	memcpy@n,w,c
  3939  00169C  E1ED               	bnz	l3218
  3940  00169E  281D               	incf	memcpy@n+1,w,c
  3941  0016A0  B4D8               	btfsc	status,2,c
  3942  0016A2  0012               	return	
  3943  0016A4  D7E9               	goto	l3218
  3944  0016A6                     __end_of_memcpy:
  3945                           	opt stack 0
  3946                           tblptru	equ	0xFF8
  3947                           tblptrh	equ	0xFF7
  3948                           tblptrl	equ	0xFF6
  3949                           tablat	equ	0xFF5
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           intcon	equ	0xFF2
  3953                           postinc0	equ	0xFEE
  3954                           wreg	equ	0xFE8
  3955                           indf1	equ	0xFE7
  3956                           postdec1	equ	0xFE5
  3957                           fsr1h	equ	0xFE2
  3958                           fsr1l	equ	0xFE1
  3959                           indf2	equ	0xFDF
  3960                           postinc2	equ	0xFDE
  3961                           postdec2	equ	0xFDD
  3962                           fsr2h	equ	0xFDA
  3963                           fsr2l	equ	0xFD9
  3964                           status	equ	0xFD8
  3965                           
  3966 ;; *************** function _calculaCRCBUFFRESP *****************
  3967 ;; Defined at:
  3968 ;;		line 387 in file "main.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  crc             2   30[COMRAM] unsigned short 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3982 ;;      Params:         0       0       0       0       0       0       0       0       0
  3983 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3985 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3986 ;;Total ram usage:        2 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    2
  3989 ;; This function calls:
  3990 ;;		_crc16
  3991 ;; This function is called by:
  3992 ;;		_trataComando
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text18
  3997  001802                     __ptext18:
  3998                           	opt stack 0
  3999  001802                     _calculaCRCBUFFRESP:
  4000                           	opt stack 26
  4001                           
  4002                           ;main.c: 389: unsigned short crc;
  4003                           ;main.c: 391: crc = crc16(BUFFRESP,5);
  4004                           
  4005                           ;incstack = 0
  4006  001802  0E30               	movlw	low _BUFFRESP
  4007  001804  6E12               	movwf	crc16@data_p,c
  4008  001806  0E00               	movlw	high _BUFFRESP
  4009  001808  6E13               	movwf	crc16@data_p+1,c
  4010  00180A  0E00               	movlw	0
  4011  00180C  6E15               	movwf	crc16@length+1,c
  4012  00180E  0E05               	movlw	5
  4013  001810  6E14               	movwf	crc16@length,c
  4014  001812  ECFB  F007         	call	_crc16	;wreg free
  4015  001816  C012  F01F         	movff	?_crc16,calculaCRCBUFFRESP@crc
  4016  00181A  C013  F020         	movff	?_crc16+1,calculaCRCBUFFRESP@crc+1
  4017                           
  4018                           ;main.c: 393: BUFFRESP[5] = crc >> 8;
  4019  00181E  5020               	movf	calculaCRCBUFFRESP@crc+1,w,c
  4020  001820  6E35               	movwf	_BUFFRESP+5,c
  4021                           
  4022                           ;main.c: 394: BUFFRESP[6] = crc & 0xFF;
  4023  001822  C01F  F036         	movff	calculaCRCBUFFRESP@crc,_BUFFRESP+6
  4024                           
  4025                           ;main.c: 396: estado = 3;
  4026  001826  0E03               	movlw	3
  4027  001828  6E2F               	movwf	_estado,c
  4028  00182A  0012               	return		;funcret
  4029  00182C                     __end_of_calculaCRCBUFFRESP:
  4030                           	opt stack 0
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           intcon	equ	0xFF2
  4038                           postinc0	equ	0xFEE
  4039                           wreg	equ	0xFE8
  4040                           indf1	equ	0xFE7
  4041                           postdec1	equ	0xFE5
  4042                           fsr1h	equ	0xFE2
  4043                           fsr1l	equ	0xFE1
  4044                           indf2	equ	0xFDF
  4045                           postinc2	equ	0xFDE
  4046                           postdec2	equ	0xFDD
  4047                           fsr2h	equ	0xFDA
  4048                           fsr2l	equ	0xFD9
  4049                           status	equ	0xFD8
  4050                           
  4051 ;; *************** function _crc16 *****************
  4052 ;; Defined at:
  4053 ;;		line 332 in file "main.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  data_p          2   17[COMRAM] PTR unsigned char 
  4056 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  4057 ;;  length          2   19[COMRAM] unsigned short 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  crc             2   28[COMRAM] unsigned int 
  4060 ;;  data            2   26[COMRAM] unsigned int 
  4061 ;;  i               1   25[COMRAM] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  2   17[COMRAM] unsigned short 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4071 ;;      Params:         4       0       0       0       0       0       0       0       0
  4072 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4073 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4074 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4075 ;;Total ram usage:       13 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    1
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_calculaCRCBUFFRESP
  4082 ;;		_verificaCRCBUFFCOM
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text19
  4087  000FF6                     __ptext19:
  4088                           	opt stack 0
  4089  000FF6                     _crc16:
  4090                           	opt stack 27
  4091                           
  4092                           ;main.c: 334: unsigned char i;
  4093                           ;main.c: 335: unsigned int data;
  4094                           ;main.c: 336: unsigned int crc = 0xffff;
  4095                           
  4096                           ;incstack = 0
  4097  000FF6  681D               	setf	crc16@crc,c
  4098  000FF8  681E               	setf	crc16@crc+1,c
  4099                           
  4100                           ;main.c: 338: if (length == 0)
  4101  000FFA  5014               	movf	crc16@length,w,c
  4102  000FFC  1015               	iorwf	crc16@length+1,w,c
  4103  000FFE  A4D8               	btfss	status,2,c
  4104  001000  D005               	goto	l3014
  4105                           
  4106                           ;main.c: 339: return (~crc);
  4107  001002  1C1D               	comf	crc16@crc,w,c
  4108  001004  6E12               	movwf	?_crc16,c
  4109  001006  1C1E               	comf	crc16@crc+1,w,c
  4110  001008  6E13               	movwf	?_crc16+1,c
  4111  00100A  0012               	return	
  4112  00100C                     l3014:
  4113                           
  4114                           ;main.c: 342: {
  4115                           ;main.c: 343: for (i=0, data=(unsigned int)0xff & *data_p++;
  4116  00100C  0E00               	movlw	0
  4117  00100E  6E1A               	movwf	crc16@i,c
  4118  001010  C012  FFD9         	movff	crc16@data_p,fsr2l
  4119  001014  C013  FFDA         	movff	crc16@data_p+1,fsr2h
  4120  001018  50DF               	movf	indf2,w,c
  4121  00101A  6E16               	movwf	??_crc16& (0+255),c
  4122  00101C  5016               	movf	??_crc16,w,c
  4123  00101E  6E1B               	movwf	crc16@data,c
  4124  001020  6A1C               	clrf	crc16@data+1,c
  4125  001022  4A12               	infsnz	crc16@data_p,f,c
  4126  001024  2A13               	incf	crc16@data_p+1,f,c
  4127  001026                     l3020:
  4128                           
  4129                           ;main.c: 344: i < 8;
  4130                           ;main.c: 345: i++, data >>= 1)
  4131  001026  0E07               	movlw	7
  4132  001028  641A               	cpfsgt	crc16@i,c
  4133  00102A  D001               	goto	l3024
  4134  00102C  D028               	goto	l3032
  4135  00102E                     l3024:
  4136                           
  4137                           ;main.c: 346: {
  4138                           ;main.c: 347: if ((crc & 0x0001) ^ (data & 0x0001))
  4139  00102E  0E01               	movlw	1
  4140  001030  141B               	andwf	crc16@data,w,c
  4141  001032  6E16               	movwf	??_crc16& (0+255),c
  4142  001034  0E00               	movlw	0
  4143  001036  141C               	andwf	crc16@data+1,w,c
  4144  001038  6E17               	movwf	(??_crc16+1)& (0+255),c
  4145  00103A  0E01               	movlw	1
  4146  00103C  141D               	andwf	crc16@crc,w,c
  4147  00103E  6E18               	movwf	(??_crc16+2)& (0+255),c
  4148  001040  0E00               	movlw	0
  4149  001042  141E               	andwf	crc16@crc+1,w,c
  4150  001044  6E19               	movwf	(??_crc16+3)& (0+255),c
  4151  001046  5016               	movf	??_crc16,w,c
  4152  001048  1A18               	xorwf	??_crc16+2,f,c
  4153  00104A  5017               	movf	??_crc16+1,w,c
  4154  00104C  1A19               	xorwf	??_crc16+3,f,c
  4155  00104E  5018               	movf	??_crc16+2,w,c
  4156  001050  1019               	iorwf	??_crc16+3,w,c
  4157  001052  B4D8               	btfsc	status,2,c
  4158  001054  D00C               	goto	l3028
  4159                           
  4160                           ;main.c: 348: crc = (crc >> 1) ^ 0x8408;
  4161  001056  90D8               	bcf	status,0,c
  4162  001058  301E               	rrcf	crc16@crc+1,w,c
  4163  00105A  6E17               	movwf	(??_crc16+1)& (0+255),c
  4164  00105C  301D               	rrcf	crc16@crc,w,c
  4165  00105E  6E16               	movwf	??_crc16& (0+255),c
  4166  001060  0E08               	movlw	8
  4167  001062  1816               	xorwf	??_crc16,w,c
  4168  001064  6E1D               	movwf	crc16@crc,c
  4169  001066  0E84               	movlw	132
  4170  001068  1817               	xorwf	??_crc16+1,w,c
  4171  00106A  6E1E               	movwf	crc16@crc+1,c
  4172  00106C  D003               	goto	l196
  4173  00106E                     l3028:
  4174                           
  4175                           ;main.c: 349: else crc >>= 1;
  4176  00106E  90D8               	bcf	status,0,c
  4177  001070  321E               	rrcf	crc16@crc+1,f,c
  4178  001072  321D               	rrcf	crc16@crc,f,c
  4179  001074                     l196:
  4180  001074  2A1A               	incf	crc16@i,f,c
  4181  001076  90D8               	bcf	status,0,c
  4182  001078  321C               	rrcf	crc16@data+1,f,c
  4183  00107A  321B               	rrcf	crc16@data,f,c
  4184  00107C  D7D4               	goto	l3020
  4185  00107E                     l3032:
  4186                           
  4187                           ;main.c: 350: }
  4188                           ;main.c: 351: } while (--length);
  4189  00107E  0614               	decf	crc16@length,f,c
  4190  001080  A0D8               	btfss	status,0,c
  4191  001082  0615               	decf	crc16@length+1,f,c
  4192  001084  5014               	movf	crc16@length,w,c
  4193  001086  1015               	iorwf	crc16@length+1,w,c
  4194  001088  A4D8               	btfss	status,2,c
  4195  00108A  D7C0               	goto	l3014
  4196                           
  4197                           ;main.c: 353: crc = ~crc;
  4198  00108C  1E1D               	comf	crc16@crc,f,c
  4199  00108E  1E1E               	comf	crc16@crc+1,f,c
  4200                           
  4201                           ;main.c: 354: data = crc;
  4202  001090  C01D  F01B         	movff	crc16@crc,crc16@data
  4203  001094  C01E  F01C         	movff	crc16@crc+1,crc16@data+1
  4204                           
  4205                           ;main.c: 355: crc = (crc << 8) | (data >> 8 & 0xff);
  4206  001098  C01B  F016         	movff	crc16@data,??_crc16
  4207  00109C  C01C  F017         	movff	crc16@data+1,??_crc16+1
  4208  0010A0  C017  F016         	movff	??_crc16+1,??_crc16
  4209  0010A4  6A17               	clrf	??_crc16+1,c
  4210  0010A6  5016               	movf	??_crc16,w,c
  4211  0010A8  C01D  F018         	movff	crc16@crc,??_crc16+2
  4212  0010AC  C01E  F019         	movff	crc16@crc+1,??_crc16+3
  4213  0010B0  C018  F019         	movff	??_crc16+2,??_crc16+3
  4214  0010B4  6A18               	clrf	??_crc16+2,c
  4215  0010B6  1018               	iorwf	??_crc16+2,w,c
  4216  0010B8  6E1D               	movwf	crc16@crc,c
  4217  0010BA  5019               	movf	??_crc16+3,w,c
  4218  0010BC  6E1E               	movwf	crc16@crc+1,c
  4219                           
  4220                           ;main.c: 357: return (crc);
  4221  0010BE  C01D  F012         	movff	crc16@crc,?_crc16
  4222  0010C2  C01E  F013         	movff	crc16@crc+1,?_crc16+1
  4223  0010C6  0012               	return	
  4224  0010C8                     __end_of_crc16:
  4225                           	opt stack 0
  4226                           tblptru	equ	0xFF8
  4227                           tblptrh	equ	0xFF7
  4228                           tblptrl	equ	0xFF6
  4229                           tablat	equ	0xFF5
  4230                           prodh	equ	0xFF4
  4231                           prodl	equ	0xFF3
  4232                           intcon	equ	0xFF2
  4233                           postinc0	equ	0xFEE
  4234                           wreg	equ	0xFE8
  4235                           indf1	equ	0xFE7
  4236                           postdec1	equ	0xFE5
  4237                           fsr1h	equ	0xFE2
  4238                           fsr1l	equ	0xFE1
  4239                           indf2	equ	0xFDF
  4240                           postinc2	equ	0xFDE
  4241                           postdec2	equ	0xFDD
  4242                           fsr2h	equ	0xFDA
  4243                           fsr2l	equ	0xFD9
  4244                           status	equ	0xFD8
  4245                           
  4246 ;; *************** function _atoi *****************
  4247 ;; Defined at:
  4248 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atoi.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  s               2   23[COMRAM] PTR const unsigned char 
  4251 ;;		 -> pegaHoraData(3), 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  a               2   28[COMRAM] int 
  4254 ;;  sign            1   27[COMRAM] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  2   23[COMRAM] int 
  4257 ;; Registers used:
  4258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4264 ;;      Params:         2       0       0       0       0       0       0       0       0
  4265 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4266 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4267 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4268 ;;Total ram usage:        7 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    2
  4271 ;; This function calls:
  4272 ;;		___wmul
  4273 ;;		_isdigit
  4274 ;; This function is called by:
  4275 ;;		_trataComando
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text20
  4280  0010C8                     __ptext20:
  4281                           	opt stack 0
  4282  0010C8                     _atoi:
  4283                           	opt stack 26
  4284                           
  4285                           ;incstack = 0
  4286  0010C8  D002               	goto	l3182
  4287  0010CA                     l3180:
  4288  0010CA  4A18               	infsnz	atoi@s,f,c
  4289  0010CC  2A19               	incf	atoi@s+1,f,c
  4290  0010CE                     l3182:
  4291  0010CE  C018  FFD9         	movff	atoi@s,fsr2l
  4292  0010D2  C019  FFDA         	movff	atoi@s+1,fsr2h
  4293  0010D6  0E20               	movlw	32
  4294  0010D8  18DE               	xorwf	postinc2,w,c
  4295  0010DA  B4D8               	btfsc	status,2,c
  4296  0010DC  D7F6               	goto	l3180
  4297  0010DE  C018  FFD9         	movff	atoi@s,fsr2l
  4298  0010E2  C019  FFDA         	movff	atoi@s+1,fsr2h
  4299  0010E6  0E09               	movlw	9
  4300  0010E8  18DE               	xorwf	postinc2,w,c
  4301  0010EA  B4D8               	btfsc	status,2,c
  4302  0010EC  D7EE               	goto	l3180
  4303  0010EE  0E00               	movlw	0
  4304  0010F0  6E1E               	movwf	atoi@a+1,c
  4305  0010F2  0E00               	movlw	0
  4306  0010F4  6E1D               	movwf	atoi@a,c
  4307  0010F6  0E00               	movlw	0
  4308  0010F8  6E1C               	movwf	atoi@sign,c
  4309  0010FA  C018  FFD9         	movff	atoi@s,fsr2l
  4310  0010FE  C019  FFDA         	movff	atoi@s+1,fsr2h
  4311  001102  0E2D               	movlw	45
  4312  001104  18DE               	xorwf	postinc2,w,c
  4313  001106  A4D8               	btfss	status,2,c
  4314  001108  D002               	goto	l3192
  4315  00110A  2A1C               	incf	atoi@sign,f,c
  4316  00110C  D024               	goto	l3198
  4317  00110E                     l3192:
  4318  00110E  C018  FFD9         	movff	atoi@s,fsr2l
  4319  001112  C019  FFDA         	movff	atoi@s+1,fsr2h
  4320  001116  0E2B               	movlw	43
  4321  001118  18DE               	xorwf	postinc2,w,c
  4322  00111A  A4D8               	btfss	status,2,c
  4323  00111C  D01E               	goto	l3200
  4324  00111E  D01B               	goto	l3198
  4325  001120                     l3196:
  4326  001120  C01D  F012         	movff	atoi@a,___wmul@multiplier
  4327  001124  C01E  F013         	movff	atoi@a+1,___wmul@multiplier+1
  4328  001128  0E00               	movlw	0
  4329  00112A  6E15               	movwf	___wmul@multiplicand+1,c
  4330  00112C  0E0A               	movlw	10
  4331  00112E  6E14               	movwf	___wmul@multiplicand,c
  4332  001130  EC29  F00C         	call	___wmul	;wreg free
  4333  001134  C018  FFD9         	movff	atoi@s,fsr2l
  4334  001138  C019  FFDA         	movff	atoi@s+1,fsr2h
  4335  00113C  50DF               	movf	indf2,w,c
  4336  00113E  6E1A               	movwf	??_atoi& (0+255),c
  4337  001140  6A1B               	clrf	(??_atoi+1)& (0+255),c
  4338  001142  5012               	movf	?___wmul,w,c
  4339  001144  261A               	addwf	??_atoi,f,c
  4340  001146  5013               	movf	?___wmul+1,w,c
  4341  001148  221B               	addwfc	??_atoi+1,f,c
  4342  00114A  0ED0               	movlw	208
  4343  00114C  241A               	addwf	??_atoi,w,c
  4344  00114E  6E1D               	movwf	atoi@a,c
  4345  001150  0EFF               	movlw	255
  4346  001152  201B               	addwfc	??_atoi+1,w,c
  4347  001154  6E1E               	movwf	atoi@a+1,c
  4348  001156                     l3198:
  4349  001156  4A18               	infsnz	atoi@s,f,c
  4350  001158  2A19               	incf	atoi@s+1,f,c
  4351  00115A                     l3200:
  4352  00115A  C018  FFD9         	movff	atoi@s,fsr2l
  4353  00115E  C019  FFDA         	movff	atoi@s+1,fsr2h
  4354  001162  50DF               	movf	indf2,w,c
  4355  001164  EC3C  F00C         	call	_isdigit
  4356  001168  B0D8               	btfsc	status,0,c
  4357  00116A  D7DA               	goto	l3196
  4358  00116C  501C               	movf	atoi@sign,w,c
  4359  00116E  B4D8               	btfsc	status,2,c
  4360  001170  D00D               	goto	l566
  4361  001172  C01D  F01A         	movff	atoi@a,??_atoi
  4362  001176  C01E  F01B         	movff	atoi@a+1,??_atoi+1
  4363  00117A  1E1A               	comf	??_atoi,f,c
  4364  00117C  1E1B               	comf	??_atoi+1,f,c
  4365  00117E  4A1A               	infsnz	??_atoi,f,c
  4366  001180  2A1B               	incf	??_atoi+1,f,c
  4367  001182  C01A  F018         	movff	??_atoi,?_atoi
  4368  001186  C01B  F019         	movff	??_atoi+1,?_atoi+1
  4369  00118A  0012               	return	
  4370  00118C                     l566:
  4371  00118C  C01D  F018         	movff	atoi@a,?_atoi
  4372  001190  C01E  F019         	movff	atoi@a+1,?_atoi+1
  4373  001194  0012               	return		;funcret
  4374  001196                     __end_of_atoi:
  4375                           	opt stack 0
  4376                           tblptru	equ	0xFF8
  4377                           tblptrh	equ	0xFF7
  4378                           tblptrl	equ	0xFF6
  4379                           tablat	equ	0xFF5
  4380                           prodh	equ	0xFF4
  4381                           prodl	equ	0xFF3
  4382                           intcon	equ	0xFF2
  4383                           postinc0	equ	0xFEE
  4384                           wreg	equ	0xFE8
  4385                           indf1	equ	0xFE7
  4386                           postdec1	equ	0xFE5
  4387                           fsr1h	equ	0xFE2
  4388                           fsr1l	equ	0xFE1
  4389                           indf2	equ	0xFDF
  4390                           postinc2	equ	0xFDE
  4391                           postdec2	equ	0xFDD
  4392                           fsr2h	equ	0xFDA
  4393                           fsr2l	equ	0xFD9
  4394                           status	equ	0xFD8
  4395                           
  4396 ;; *************** function _isdigit *****************
  4397 ;; Defined at:
  4398 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  c               1    wreg     unsigned char 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  c               1   19[COMRAM] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;		None               void
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4412 ;;      Params:         0       0       0       0       0       0       0       0       0
  4413 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4414 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4415 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4416 ;;Total ram usage:        3 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    1
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_atoi
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text21
  4427  001878                     __ptext21:
  4428                           	opt stack 0
  4429  001878                     _isdigit:
  4430                           	opt stack 26
  4431                           
  4432                           ;incstack = 0
  4433                           ;isdigit@c stored from wreg
  4434  001878  6E14               	movwf	isdigit@c,c
  4435  00187A  0E00               	movlw	0
  4436  00187C  6E13               	movwf	_isdigit$1095,c
  4437  00187E  0E3A               	movlw	58
  4438  001880  6014               	cpfslt	isdigit@c,c
  4439  001882  D005               	goto	l3082
  4440  001884  0E2F               	movlw	47
  4441  001886  6414               	cpfsgt	isdigit@c,c
  4442  001888  D002               	goto	l3082
  4443  00188A  0E01               	movlw	1
  4444  00188C  6E13               	movwf	_isdigit$1095,c
  4445  00188E                     l3082:
  4446  00188E  C013  F012         	movff	_isdigit$1095,??_isdigit
  4447  001892  3012               	rrcf	??_isdigit,w,c
  4448  001894  0012               	return	
  4449  001896                     __end_of_isdigit:
  4450                           	opt stack 0
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           prodh	equ	0xFF4
  4456                           prodl	equ	0xFF3
  4457                           intcon	equ	0xFF2
  4458                           postinc0	equ	0xFEE
  4459                           wreg	equ	0xFE8
  4460                           indf1	equ	0xFE7
  4461                           postdec1	equ	0xFE5
  4462                           fsr1h	equ	0xFE2
  4463                           fsr1l	equ	0xFE1
  4464                           indf2	equ	0xFDF
  4465                           postinc2	equ	0xFDE
  4466                           postdec2	equ	0xFDD
  4467                           fsr2h	equ	0xFDA
  4468                           fsr2l	equ	0xFD9
  4469                           status	equ	0xFD8
  4470                           
  4471 ;; *************** function ___wmul *****************
  4472 ;; Defined at:
  4473 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  multiplier      2   17[COMRAM] unsigned int 
  4476 ;;  multiplicand    2   19[COMRAM] unsigned int 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  product         2   21[COMRAM] unsigned int 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  2   17[COMRAM] unsigned int 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0, prodl, prodh
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4488 ;;      Params:         4       0       0       0       0       0       0       0       0
  4489 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4491 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4492 ;;Total ram usage:        6 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:    1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_atoi
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text22
  4503  001852                     __ptext22:
  4504                           	opt stack 0
  4505  001852                     ___wmul:
  4506                           	opt stack 26
  4507                           
  4508                           ;incstack = 0
  4509  001852  5012               	movf	___wmul@multiplier,w,c
  4510  001854  0214               	mulwf	___wmul@multiplicand,c
  4511  001856  CFF3 F016          	movff	prodl,___wmul@product
  4512  00185A  CFF4 F017          	movff	prodh,___wmul@product+1
  4513  00185E  5012               	movf	___wmul@multiplier,w,c
  4514  001860  0215               	mulwf	___wmul@multiplicand+1,c
  4515  001862  50F3               	movf	prodl,w,c
  4516  001864  2617               	addwf	___wmul@product+1,f,c
  4517  001866  5013               	movf	___wmul@multiplier+1,w,c
  4518  001868  0214               	mulwf	___wmul@multiplicand,c
  4519  00186A  50F3               	movf	prodl,w,c
  4520  00186C  2617               	addwf	___wmul@product+1,f,c
  4521  00186E  C016  F012         	movff	___wmul@product,?___wmul
  4522  001872  C017  F013         	movff	___wmul@product+1,?___wmul+1
  4523  001876  0012               	return	
  4524  001878                     __end_of___wmul:
  4525                           	opt stack 0
  4526                           tblptru	equ	0xFF8
  4527                           tblptrh	equ	0xFF7
  4528                           tblptrl	equ	0xFF6
  4529                           tablat	equ	0xFF5
  4530                           prodh	equ	0xFF4
  4531                           prodl	equ	0xFF3
  4532                           intcon	equ	0xFF2
  4533                           postinc0	equ	0xFEE
  4534                           wreg	equ	0xFE8
  4535                           indf1	equ	0xFE7
  4536                           postdec1	equ	0xFE5
  4537                           fsr1h	equ	0xFE2
  4538                           fsr1l	equ	0xFE1
  4539                           indf2	equ	0xFDF
  4540                           postinc2	equ	0xFDE
  4541                           postdec2	equ	0xFDD
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function ___awmod *****************
  4547 ;; Defined at:
  4548 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  dividend        2   17[COMRAM] int 
  4551 ;;  divisor         2   19[COMRAM] int 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  sign            1   22[COMRAM] unsigned char 
  4554 ;;  counter         1   21[COMRAM] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  2   17[COMRAM] int 
  4557 ;; Registers used:
  4558 ;;		wreg, status,2, status,0
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4564 ;;      Params:         4       0       0       0       0       0       0       0       0
  4565 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4567 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4568 ;;Total ram usage:        6 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; Hardware stack levels required when called:    1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_verificaAnoBissexto
  4575 ;;		_trataComando
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text23
  4580  00135C                     __ptext23:
  4581                           	opt stack 0
  4582  00135C                     ___awmod:
  4583                           	opt stack 27
  4584                           
  4585                           ;incstack = 0
  4586  00135C  0E00               	movlw	0
  4587  00135E  6E17               	movwf	___awmod@sign,c
  4588  001360  AE13               	btfss	___awmod@dividend+1,7,c
  4589  001362  D006               	goto	l3278
  4590  001364  6C12               	negf	___awmod@dividend,c
  4591  001366  1E13               	comf	___awmod@dividend+1,f,c
  4592  001368  B0D8               	btfsc	status,0,c
  4593  00136A  2A13               	incf	___awmod@dividend+1,f,c
  4594  00136C  0E01               	movlw	1
  4595  00136E  6E17               	movwf	___awmod@sign,c
  4596  001370                     l3278:
  4597  001370  AE15               	btfss	___awmod@divisor+1,7,c
  4598  001372  D004               	goto	l3282
  4599  001374  6C14               	negf	___awmod@divisor,c
  4600  001376  1E15               	comf	___awmod@divisor+1,f,c
  4601  001378  B0D8               	btfsc	status,0,c
  4602  00137A  2A15               	incf	___awmod@divisor+1,f,c
  4603  00137C                     l3282:
  4604  00137C  5014               	movf	___awmod@divisor,w,c
  4605  00137E  1015               	iorwf	___awmod@divisor+1,w,c
  4606  001380  B4D8               	btfsc	status,2,c
  4607  001382  D018               	goto	l3298
  4608  001384  0E01               	movlw	1
  4609  001386  6E16               	movwf	___awmod@counter,c
  4610  001388  D004               	goto	l3288
  4611  00138A                     l3286:
  4612  00138A  90D8               	bcf	status,0,c
  4613  00138C  3614               	rlcf	___awmod@divisor,f,c
  4614  00138E  3615               	rlcf	___awmod@divisor+1,f,c
  4615  001390  2A16               	incf	___awmod@counter,f,c
  4616  001392                     l3288:
  4617  001392  AE15               	btfss	___awmod@divisor+1,7,c
  4618  001394  D7FA               	goto	l3286
  4619  001396                     l3290:
  4620  001396  5014               	movf	___awmod@divisor,w,c
  4621  001398  5C12               	subwf	___awmod@dividend,w,c
  4622  00139A  5015               	movf	___awmod@divisor+1,w,c
  4623  00139C  5813               	subwfb	___awmod@dividend+1,w,c
  4624  00139E  A0D8               	btfss	status,0,c
  4625  0013A0  D004               	goto	l3294
  4626  0013A2  5014               	movf	___awmod@divisor,w,c
  4627  0013A4  5E12               	subwf	___awmod@dividend,f,c
  4628  0013A6  5015               	movf	___awmod@divisor+1,w,c
  4629  0013A8  5A13               	subwfb	___awmod@dividend+1,f,c
  4630  0013AA                     l3294:
  4631  0013AA  90D8               	bcf	status,0,c
  4632  0013AC  3215               	rrcf	___awmod@divisor+1,f,c
  4633  0013AE  3214               	rrcf	___awmod@divisor,f,c
  4634  0013B0  2E16               	decfsz	___awmod@counter,f,c
  4635  0013B2  D7F1               	goto	l3290
  4636  0013B4                     l3298:
  4637  0013B4  5017               	movf	___awmod@sign,w,c
  4638  0013B6  B4D8               	btfsc	status,2,c
  4639  0013B8  D004               	goto	l3302
  4640  0013BA  6C12               	negf	___awmod@dividend,c
  4641  0013BC  1E13               	comf	___awmod@dividend+1,f,c
  4642  0013BE  B0D8               	btfsc	status,0,c
  4643  0013C0  2A13               	incf	___awmod@dividend+1,f,c
  4644  0013C2                     l3302:
  4645  0013C2  C012  F012         	movff	___awmod@dividend,?___awmod
  4646  0013C6  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
  4647  0013CA  0012               	return	
  4648  0013CC                     __end_of___awmod:
  4649                           	opt stack 0
  4650                           tblptru	equ	0xFF8
  4651                           tblptrh	equ	0xFF7
  4652                           tblptrl	equ	0xFF6
  4653                           tablat	equ	0xFF5
  4654                           prodh	equ	0xFF4
  4655                           prodl	equ	0xFF3
  4656                           intcon	equ	0xFF2
  4657                           postinc0	equ	0xFEE
  4658                           wreg	equ	0xFE8
  4659                           indf1	equ	0xFE7
  4660                           postdec1	equ	0xFE5
  4661                           fsr1h	equ	0xFE2
  4662                           fsr1l	equ	0xFE1
  4663                           indf2	equ	0xFDF
  4664                           postinc2	equ	0xFDE
  4665                           postdec2	equ	0xFDD
  4666                           fsr2h	equ	0xFDA
  4667                           fsr2l	equ	0xFD9
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function ___awdiv *****************
  4671 ;; Defined at:
  4672 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  dividend        2   17[COMRAM] int 
  4675 ;;  divisor         2   19[COMRAM] int 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  quotient        2   23[COMRAM] int 
  4678 ;;  sign            1   22[COMRAM] unsigned char 
  4679 ;;  counter         1   21[COMRAM] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  2   17[COMRAM] int 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4689 ;;      Params:         4       0       0       0       0       0       0       0       0
  4690 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4692 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4693 ;;Total ram usage:        8 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    1
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_trataComando
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text24
  4704  0012D8                     __ptext24:
  4705                           	opt stack 0
  4706  0012D8                     ___awdiv:
  4707                           	opt stack 27
  4708                           
  4709                           ;incstack = 0
  4710  0012D8  0E00               	movlw	0
  4711  0012DA  6E17               	movwf	___awdiv@sign,c
  4712  0012DC  AE15               	btfss	___awdiv@divisor+1,7,c
  4713  0012DE  D006               	goto	l3234
  4714  0012E0  6C14               	negf	___awdiv@divisor,c
  4715  0012E2  1E15               	comf	___awdiv@divisor+1,f,c
  4716  0012E4  B0D8               	btfsc	status,0,c
  4717  0012E6  2A15               	incf	___awdiv@divisor+1,f,c
  4718  0012E8  0E01               	movlw	1
  4719  0012EA  6E17               	movwf	___awdiv@sign,c
  4720  0012EC                     l3234:
  4721  0012EC  AE13               	btfss	___awdiv@dividend+1,7,c
  4722  0012EE  D006               	goto	l3240
  4723  0012F0  6C12               	negf	___awdiv@dividend,c
  4724  0012F2  1E13               	comf	___awdiv@dividend+1,f,c
  4725  0012F4  B0D8               	btfsc	status,0,c
  4726  0012F6  2A13               	incf	___awdiv@dividend+1,f,c
  4727  0012F8  0E01               	movlw	1
  4728  0012FA  1A17               	xorwf	___awdiv@sign,f,c
  4729  0012FC                     l3240:
  4730  0012FC  0E00               	movlw	0
  4731  0012FE  6E19               	movwf	___awdiv@quotient+1,c
  4732  001300  0E00               	movlw	0
  4733  001302  6E18               	movwf	___awdiv@quotient,c
  4734  001304  5014               	movf	___awdiv@divisor,w,c
  4735  001306  1015               	iorwf	___awdiv@divisor+1,w,c
  4736  001308  B4D8               	btfsc	status,2,c
  4737  00130A  D01C               	goto	l3262
  4738  00130C  0E01               	movlw	1
  4739  00130E  6E16               	movwf	___awdiv@counter,c
  4740  001310  D004               	goto	l3248
  4741  001312                     l3246:
  4742  001312  90D8               	bcf	status,0,c
  4743  001314  3614               	rlcf	___awdiv@divisor,f,c
  4744  001316  3615               	rlcf	___awdiv@divisor+1,f,c
  4745  001318  2A16               	incf	___awdiv@counter,f,c
  4746  00131A                     l3248:
  4747  00131A  AE15               	btfss	___awdiv@divisor+1,7,c
  4748  00131C  D7FA               	goto	l3246
  4749  00131E                     l3250:
  4750  00131E  90D8               	bcf	status,0,c
  4751  001320  3618               	rlcf	___awdiv@quotient,f,c
  4752  001322  3619               	rlcf	___awdiv@quotient+1,f,c
  4753  001324  5014               	movf	___awdiv@divisor,w,c
  4754  001326  5C12               	subwf	___awdiv@dividend,w,c
  4755  001328  5015               	movf	___awdiv@divisor+1,w,c
  4756  00132A  5813               	subwfb	___awdiv@dividend+1,w,c
  4757  00132C  A0D8               	btfss	status,0,c
  4758  00132E  D005               	goto	l3258
  4759  001330  5014               	movf	___awdiv@divisor,w,c
  4760  001332  5E12               	subwf	___awdiv@dividend,f,c
  4761  001334  5015               	movf	___awdiv@divisor+1,w,c
  4762  001336  5A13               	subwfb	___awdiv@dividend+1,f,c
  4763  001338  8018               	bsf	___awdiv@quotient,0,c
  4764  00133A                     l3258:
  4765  00133A  90D8               	bcf	status,0,c
  4766  00133C  3215               	rrcf	___awdiv@divisor+1,f,c
  4767  00133E  3214               	rrcf	___awdiv@divisor,f,c
  4768  001340  2E16               	decfsz	___awdiv@counter,f,c
  4769  001342  D7ED               	goto	l3250
  4770  001344                     l3262:
  4771  001344  5017               	movf	___awdiv@sign,w,c
  4772  001346  B4D8               	btfsc	status,2,c
  4773  001348  D004               	goto	l3266
  4774  00134A  6C18               	negf	___awdiv@quotient,c
  4775  00134C  1E19               	comf	___awdiv@quotient+1,f,c
  4776  00134E  B0D8               	btfsc	status,0,c
  4777  001350  2A19               	incf	___awdiv@quotient+1,f,c
  4778  001352                     l3266:
  4779  001352  C018  F012         	movff	___awdiv@quotient,?___awdiv
  4780  001356  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
  4781  00135A  0012               	return	
  4782  00135C                     __end_of___awdiv:
  4783                           	opt stack 0
  4784                           tblptru	equ	0xFF8
  4785                           tblptrh	equ	0xFF7
  4786                           tblptrl	equ	0xFF6
  4787                           tablat	equ	0xFF5
  4788                           prodh	equ	0xFF4
  4789                           prodl	equ	0xFF3
  4790                           intcon	equ	0xFF2
  4791                           postinc0	equ	0xFEE
  4792                           wreg	equ	0xFE8
  4793                           indf1	equ	0xFE7
  4794                           postdec1	equ	0xFE5
  4795                           fsr1h	equ	0xFE2
  4796                           fsr1l	equ	0xFE1
  4797                           indf2	equ	0xFDF
  4798                           postinc2	equ	0xFDE
  4799                           postdec2	equ	0xFDD
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804 ;; *************** function _enviaByte *****************
  4805 ;; Defined at:
  4806 ;;		line 373 in file "main.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  BYTE            1    wreg     unsigned char 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  BYTE            1   17[COMRAM] unsigned char 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4820 ;;      Params:         0       0       0       0       0       0       0       0       0
  4821 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4823 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4824 ;;Total ram usage:        1 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    1
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_maquinaEstado
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text25
  4835  001896                     __ptext25:
  4836                           	opt stack 0
  4837  001896                     _enviaByte:
  4838                           	opt stack 28
  4839                           
  4840                           ;incstack = 0
  4841                           ;enviaByte@BYTE stored from wreg
  4842  001896  6E12               	movwf	enviaByte@BYTE,c
  4843  001898                     l208:
  4844  001898  A89E               	btfss	3998,4,c	;volatile
  4845  00189A  D7FE               	goto	l208
  4846                           
  4847                           ;main.c: 377: TXREG = BYTE;
  4848  00189C  C012  FFAD         	movff	enviaByte@BYTE,4013	;volatile
  4849                           
  4850                           ;main.c: 379: if(BYTE==0x05){
  4851  0018A0  0E05               	movlw	5
  4852  0018A2  1812               	xorwf	enviaByte@BYTE,w,c
  4853  0018A4  A4D8               	btfss	status,2,c
  4854  0018A6  D003               	goto	l3458
  4855                           
  4856                           ;main.c: 380: estado = 2;
  4857  0018A8  0E02               	movlw	2
  4858  0018AA  6E2F               	movwf	_estado,c
  4859                           
  4860                           ;main.c: 381: }
  4861  0018AC  0012               	return	
  4862  0018AE                     l3458:
  4863                           
  4864                           ;main.c: 382: else{
  4865                           ;main.c: 383: estado = 0;
  4866  0018AE  0E00               	movlw	0
  4867  0018B0  6E2F               	movwf	_estado,c
  4868  0018B2  0012               	return	
  4869  0018B4                     __end_of_enviaByte:
  4870                           	opt stack 0
  4871                           tblptru	equ	0xFF8
  4872                           tblptrh	equ	0xFF7
  4873                           tblptrl	equ	0xFF6
  4874                           tablat	equ	0xFF5
  4875                           prodh	equ	0xFF4
  4876                           prodl	equ	0xFF3
  4877                           intcon	equ	0xFF2
  4878                           postinc0	equ	0xFEE
  4879                           wreg	equ	0xFE8
  4880                           indf1	equ	0xFE7
  4881                           postdec1	equ	0xFE5
  4882                           fsr1h	equ	0xFE2
  4883                           fsr1l	equ	0xFE1
  4884                           indf2	equ	0xFDF
  4885                           postinc2	equ	0xFDE
  4886                           postdec2	equ	0xFDD
  4887                           fsr2h	equ	0xFDA
  4888                           fsr2l	equ	0xFD9
  4889                           status	equ	0xFD8
  4890                           
  4891 ;; *************** function _init_XLCD *****************
  4892 ;; Defined at:
  4893 ;;		line 222 in file "main.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;		None
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, status,0, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4907 ;;      Params:         0       0       0       0       0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4910 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4911 ;;Total ram usage:        0 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    5
  4914 ;; This function calls:
  4915 ;;		_BusyXLCD
  4916 ;;		_OpenXLCD
  4917 ;;		_WriteCmdXLCD
  4918 ;; This function is called by:
  4919 ;;		_main
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text26
  4924  0018B4                     __ptext26:
  4925                           	opt stack 0
  4926  0018B4                     _init_XLCD:
  4927                           	opt stack 25
  4928                           
  4929                           ;main.c: 223: OpenXLCD(0b00101100&0b00111000);
  4930                           
  4931                           ;incstack = 0
  4932  0018B4  0E28               	movlw	40
  4933  0018B6  ECCB  F008         	call	_OpenXLCD
  4934  0018BA                     l3612:
  4935  0018BA  ECAE  F00B         	call	_BusyXLCD	;wreg free
  4936  0018BE  0900               	iorlw	0
  4937  0018C0  A4D8               	btfss	status,2,c
  4938  0018C2  D7FB               	goto	l3612
  4939                           
  4940                           ;main.c: 225: WriteCmdXLCD(0x06);
  4941  0018C4  0E06               	movlw	6
  4942  0018C6  EC72  F00B         	call	_WriteCmdXLCD
  4943                           
  4944                           ;main.c: 226: WriteCmdXLCD(0x0C);
  4945  0018CA  0E0C               	movlw	12
  4946  0018CC  EC72  F00B         	call	_WriteCmdXLCD
  4947  0018D0  0012               	return		;funcret
  4948  0018D2                     __end_of_init_XLCD:
  4949                           	opt stack 0
  4950                           tblptru	equ	0xFF8
  4951                           tblptrh	equ	0xFF7
  4952                           tblptrl	equ	0xFF6
  4953                           tablat	equ	0xFF5
  4954                           prodh	equ	0xFF4
  4955                           prodl	equ	0xFF3
  4956                           intcon	equ	0xFF2
  4957                           postinc0	equ	0xFEE
  4958                           wreg	equ	0xFE8
  4959                           indf1	equ	0xFE7
  4960                           postdec1	equ	0xFE5
  4961                           fsr1h	equ	0xFE2
  4962                           fsr1l	equ	0xFE1
  4963                           indf2	equ	0xFDF
  4964                           postinc2	equ	0xFDE
  4965                           postdec2	equ	0xFDD
  4966                           fsr2h	equ	0xFDA
  4967                           fsr2l	equ	0xFD9
  4968                           status	equ	0xFD8
  4969                           
  4970 ;; *************** function _OpenXLCD *****************
  4971 ;; Defined at:
  4972 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  lcdtype         1    wreg     unsigned char 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  lcdtype         1   22[COMRAM] unsigned char 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      void 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4986 ;;      Params:         0       0       0       0       0       0       0       0       0
  4987 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4989 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4990 ;;Total ram usage:        1 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:    4
  4993 ;; This function calls:
  4994 ;;		_BusyXLCD
  4995 ;;		_Delay10KTCYx
  4996 ;;		_DelayPORXLCD
  4997 ;;		_SetDDRamAddr
  4998 ;;		_WriteCmdXLCD
  4999 ;; This function is called by:
  5000 ;;		_init_XLCD
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text27
  5005  001196                     __ptext27:
  5006                           	opt stack 0
  5007  001196                     _OpenXLCD:
  5008                           	opt stack 25
  5009                           
  5010                           ;incstack = 0
  5011                           ;OpenXLCD@lcdtype stored from wreg
  5012  001196  6E17               	movwf	OpenXLCD@lcdtype,c
  5013  001198  0EF0               	movlw	240
  5014  00119A  1681               	andwf	3969,f,c	;volatile
  5015  00119C  0EF0               	movlw	240
  5016  00119E  1693               	andwf	3987,f,c	;volatile
  5017  0011A0  9C93               	bcf	3987,6,c	;volatile
  5018  0011A2  9A93               	bcf	3987,5,c	;volatile
  5019  0011A4  9893               	bcf	3987,4,c	;volatile
  5020  0011A6  9C8A               	bcf	3978,6,c	;volatile
  5021  0011A8  9A8A               	bcf	3978,5,c	;volatile
  5022  0011AA  988A               	bcf	3978,4,c	;volatile
  5023  0011AC  EC8A  F00C         	call	_DelayPORXLCD	;wreg free
  5024  0011B0  0E30               	movlw	48
  5025  0011B2  EC72  F00B         	call	_WriteCmdXLCD
  5026  0011B6  0E05               	movlw	5
  5027  0011B8  EC69  F00C         	call	_Delay10KTCYx
  5028  0011BC  0E30               	movlw	48
  5029  0011BE  EC72  F00B         	call	_WriteCmdXLCD
  5030  0011C2  0E01               	movlw	1
  5031  0011C4  EC69  F00C         	call	_Delay10KTCYx
  5032  0011C8  0E32               	movlw	50
  5033  0011CA  EC72  F00B         	call	_WriteCmdXLCD
  5034  0011CE                     l3358:
  5035  0011CE  ECAE  F00B         	call	_BusyXLCD	;wreg free
  5036  0011D2  0900               	iorlw	0
  5037  0011D4  A4D8               	btfss	status,2,c
  5038  0011D6  D7FB               	goto	l3358
  5039  0011D8                     l3360:
  5040  0011D8  ECAE  F00B         	call	_BusyXLCD	;wreg free
  5041  0011DC  0900               	iorlw	0
  5042  0011DE  A4D8               	btfss	status,2,c
  5043  0011E0  D7FB               	goto	l3360
  5044  0011E2  5017               	movf	OpenXLCD@lcdtype,w,c
  5045  0011E4  EC72  F00B         	call	_WriteCmdXLCD
  5046  0011E8                     l3364:
  5047  0011E8  ECAE  F00B         	call	_BusyXLCD	;wreg free
  5048  0011EC  0900               	iorlw	0
  5049  0011EE  A4D8               	btfss	status,2,c
  5050  0011F0  D7FB               	goto	l3364
  5051  0011F2  0E08               	movlw	8
  5052  0011F4  EC72  F00B         	call	_WriteCmdXLCD
  5053  0011F8                     l3368:
  5054  0011F8  ECAE  F00B         	call	_BusyXLCD	;wreg free
  5055  0011FC  0900               	iorlw	0
  5056  0011FE  A4D8               	btfss	status,2,c
  5057  001200  D7FB               	goto	l3368
  5058  001202  0E0F               	movlw	15
  5059  001204  EC72  F00B         	call	_WriteCmdXLCD
  5060  001208                     l3372:
  5061  001208  ECAE  F00B         	call	_BusyXLCD	;wreg free
  5062  00120C  0900               	iorlw	0
  5063  00120E  A4D8               	btfss	status,2,c
  5064  001210  D7FB               	goto	l3372
  5065  001212  0E01               	movlw	1
  5066  001214  EC72  F00B         	call	_WriteCmdXLCD
  5067  001218                     l3376:
  5068  001218  ECAE  F00B         	call	_BusyXLCD	;wreg free
  5069  00121C  0900               	iorlw	0
  5070  00121E  A4D8               	btfss	status,2,c
  5071  001220  D7FB               	goto	l3376
  5072  001222  0E04               	movlw	4
  5073  001224  EC72  F00B         	call	_WriteCmdXLCD
  5074  001228                     l3380:
  5075  001228  ECAE  F00B         	call	_BusyXLCD	;wreg free
  5076  00122C  0900               	iorlw	0
  5077  00122E  A4D8               	btfss	status,2,c
  5078  001230  D7FB               	goto	l3380
  5079  001232  0E80               	movlw	128
  5080  001234  EC9F  F00A         	call	_SetDDRamAddr
  5081  001238  0012               	return	
  5082  00123A                     __end_of_OpenXLCD:
  5083                           	opt stack 0
  5084                           tblptru	equ	0xFF8
  5085                           tblptrh	equ	0xFF7
  5086                           tblptrl	equ	0xFF6
  5087                           tablat	equ	0xFF5
  5088                           prodh	equ	0xFF4
  5089                           prodl	equ	0xFF3
  5090                           intcon	equ	0xFF2
  5091                           postinc0	equ	0xFEE
  5092                           wreg	equ	0xFE8
  5093                           indf1	equ	0xFE7
  5094                           postdec1	equ	0xFE5
  5095                           fsr1h	equ	0xFE2
  5096                           fsr1l	equ	0xFE1
  5097                           indf2	equ	0xFDF
  5098                           postinc2	equ	0xFDE
  5099                           postdec2	equ	0xFDD
  5100                           fsr2h	equ	0xFDA
  5101                           fsr2l	equ	0xFD9
  5102                           status	equ	0xFD8
  5103                           
  5104 ;; *************** function _WriteCmdXLCD *****************
  5105 ;; Defined at:
  5106 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  cmd             1    wreg     unsigned char 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  cmd             1   18[COMRAM] unsigned char 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  1    wreg      void 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2, status,0, cstack
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5120 ;;      Params:         0       0       0       0       0       0       0       0       0
  5121 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5123 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5124 ;;Total ram usage:        1 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    3
  5127 ;; This function calls:
  5128 ;;		_DelayFor18TCY
  5129 ;; This function is called by:
  5130 ;;		_init_XLCD
  5131 ;;		_OpenXLCD
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           	psect	text28
  5136  0016E4                     __ptext28:
  5137                           	opt stack 0
  5138  0016E4                     _WriteCmdXLCD:
  5139                           	opt stack 26
  5140                           
  5141                           ;incstack = 0
  5142                           ;WriteCmdXLCD@cmd stored from wreg
  5143  0016E4  6E13               	movwf	WriteCmdXLCD@cmd,c
  5144  0016E6  0EF0               	movlw	240
  5145  0016E8  1693               	andwf	3987,f,c	;volatile
  5146  0016EA  0EF0               	movlw	240
  5147  0016EC  1681               	andwf	3969,f,c	;volatile
  5148  0016EE  3813               	swapf	WriteCmdXLCD@cmd,w,c
  5149  0016F0  0B0F               	andlw	15
  5150  0016F2  0B0F               	andlw	15
  5151  0016F4  1281               	iorwf	3969,f,c	;volatile
  5152  0016F6  9C8A               	bcf	3978,6,c	;volatile
  5153  0016F8  9A8A               	bcf	3978,5,c	;volatile
  5154  0016FA  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5155  0016FE  888A               	bsf	3978,4,c	;volatile
  5156  001700  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5157  001704  988A               	bcf	3978,4,c	;volatile
  5158  001706  0EF0               	movlw	240
  5159  001708  1681               	andwf	3969,f,c	;volatile
  5160  00170A  5013               	movf	WriteCmdXLCD@cmd,w,c
  5161  00170C  0B0F               	andlw	15
  5162  00170E  1281               	iorwf	3969,f,c	;volatile
  5163  001710  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5164  001714  888A               	bsf	3978,4,c	;volatile
  5165  001716  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5166  00171A  988A               	bcf	3978,4,c	;volatile
  5167  00171C  0E0F               	movlw	15
  5168  00171E  1293               	iorwf	3987,f,c	;volatile
  5169  001720  0012               	return	
  5170  001722                     __end_of_WriteCmdXLCD:
  5171                           	opt stack 0
  5172                           tblptru	equ	0xFF8
  5173                           tblptrh	equ	0xFF7
  5174                           tblptrl	equ	0xFF6
  5175                           tablat	equ	0xFF5
  5176                           prodh	equ	0xFF4
  5177                           prodl	equ	0xFF3
  5178                           intcon	equ	0xFF2
  5179                           postinc0	equ	0xFEE
  5180                           wreg	equ	0xFE8
  5181                           indf1	equ	0xFE7
  5182                           postdec1	equ	0xFE5
  5183                           fsr1h	equ	0xFE2
  5184                           fsr1l	equ	0xFE1
  5185                           indf2	equ	0xFDF
  5186                           postinc2	equ	0xFDE
  5187                           postdec2	equ	0xFDD
  5188                           fsr2h	equ	0xFDA
  5189                           fsr2l	equ	0xFD9
  5190                           status	equ	0xFD8
  5191                           
  5192 ;; *************** function _SetDDRamAddr *****************
  5193 ;; Defined at:
  5194 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  DDaddr          1    wreg     unsigned char 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  DDaddr          1   21[COMRAM] unsigned char 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5208 ;;      Params:         0       0       0       0       0       0       0       0       0
  5209 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5210 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5211 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5212 ;;Total ram usage:        4 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    3
  5215 ;; This function calls:
  5216 ;;		_DelayFor18TCY
  5217 ;; This function is called by:
  5218 ;;		_atualiza_Tela
  5219 ;;		_OpenXLCD
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text29
  5224  00153E                     __ptext29:
  5225                           	opt stack 0
  5226  00153E                     _SetDDRamAddr:
  5227                           	opt stack 25
  5228                           
  5229                           ;incstack = 0
  5230                           ;SetDDRamAddr@DDaddr stored from wreg
  5231  00153E  6E16               	movwf	SetDDRamAddr@DDaddr,c
  5232  001540  0EF0               	movlw	240
  5233  001542  1693               	andwf	3987,f,c	;volatile
  5234  001544  0EF0               	movlw	240
  5235  001546  1681               	andwf	3969,f,c	;volatile
  5236  001548  5016               	movf	SetDDRamAddr@DDaddr,w,c
  5237  00154A  6E13               	movwf	??_SetDDRamAddr& (0+255),c
  5238  00154C  6A14               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  5239  00154E  8E13               	bsf	??_SetDDRamAddr,7,c
  5240  001550  0E04               	movlw	4
  5241  001552  6E15               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  5242  001554                     u2355:
  5243  001554  3414               	rlcf	??_SetDDRamAddr+1,w,c
  5244  001556  3214               	rrcf	??_SetDDRamAddr+1,f,c
  5245  001558  3213               	rrcf	??_SetDDRamAddr,f,c
  5246  00155A  2E15               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  5247  00155C  D7FB               	goto	u2355
  5248  00155E  5013               	movf	??_SetDDRamAddr,w,c
  5249  001560  0B0F               	andlw	15
  5250  001562  1281               	iorwf	3969,f,c	;volatile
  5251  001564  9C8A               	bcf	3978,6,c	;volatile
  5252  001566  9A8A               	bcf	3978,5,c	;volatile
  5253  001568  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5254  00156C  888A               	bsf	3978,4,c	;volatile
  5255  00156E  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5256  001572  988A               	bcf	3978,4,c	;volatile
  5257  001574  0EF0               	movlw	240
  5258  001576  1681               	andwf	3969,f,c	;volatile
  5259  001578  5016               	movf	SetDDRamAddr@DDaddr,w,c
  5260  00157A  0B0F               	andlw	15
  5261  00157C  1281               	iorwf	3969,f,c	;volatile
  5262  00157E  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5263  001582  888A               	bsf	3978,4,c	;volatile
  5264  001584  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5265  001588  988A               	bcf	3978,4,c	;volatile
  5266  00158A  0E0F               	movlw	15
  5267  00158C  1293               	iorwf	3987,f,c	;volatile
  5268  00158E  0012               	return	
  5269  001590                     __end_of_SetDDRamAddr:
  5270                           	opt stack 0
  5271                           tblptru	equ	0xFF8
  5272                           tblptrh	equ	0xFF7
  5273                           tblptrl	equ	0xFF6
  5274                           tablat	equ	0xFF5
  5275                           prodh	equ	0xFF4
  5276                           prodl	equ	0xFF3
  5277                           intcon	equ	0xFF2
  5278                           postinc0	equ	0xFEE
  5279                           wreg	equ	0xFE8
  5280                           indf1	equ	0xFE7
  5281                           postdec1	equ	0xFE5
  5282                           fsr1h	equ	0xFE2
  5283                           fsr1l	equ	0xFE1
  5284                           indf2	equ	0xFDF
  5285                           postinc2	equ	0xFDE
  5286                           postdec2	equ	0xFDD
  5287                           fsr2h	equ	0xFDA
  5288                           fsr2l	equ	0xFD9
  5289                           status	equ	0xFD8
  5290                           
  5291 ;; *************** function _DelayPORXLCD *****************
  5292 ;; Defined at:
  5293 ;;		line 76 in file "main.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5307 ;;      Params:         0       0       0       0       0       0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5310 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5311 ;;Total ram usage:        0 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    2
  5314 ;; This function calls:
  5315 ;;		_Delay1KTCYx
  5316 ;; This function is called by:
  5317 ;;		_OpenXLCD
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text30
  5322  001914                     __ptext30:
  5323                           	opt stack 0
  5324  001914                     _DelayPORXLCD:
  5325                           	opt stack 26
  5326                           
  5327                           ;main.c: 77: Delay1KTCYx(180);
  5328                           
  5329                           ;incstack = 0
  5330  001914  0EB4               	movlw	180
  5331  001916  EC74  F00C         	call	_Delay1KTCYx
  5332  00191A  0012               	return	
  5333  00191C                     __end_of_DelayPORXLCD:
  5334                           	opt stack 0
  5335                           tblptru	equ	0xFF8
  5336                           tblptrh	equ	0xFF7
  5337                           tblptrl	equ	0xFF6
  5338                           tablat	equ	0xFF5
  5339                           prodh	equ	0xFF4
  5340                           prodl	equ	0xFF3
  5341                           intcon	equ	0xFF2
  5342                           postinc0	equ	0xFEE
  5343                           wreg	equ	0xFE8
  5344                           indf1	equ	0xFE7
  5345                           postdec1	equ	0xFE5
  5346                           fsr1h	equ	0xFE2
  5347                           fsr1l	equ	0xFE1
  5348                           indf2	equ	0xFDF
  5349                           postinc2	equ	0xFDE
  5350                           postdec2	equ	0xFDD
  5351                           fsr2h	equ	0xFDA
  5352                           fsr2l	equ	0xFD9
  5353                           status	equ	0xFD8
  5354                           
  5355 ;; *************** function _Delay1KTCYx *****************
  5356 ;; Defined at:
  5357 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  unit            1    wreg     unsigned char 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  unit            1   17[COMRAM] unsigned char 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      void 
  5364 ;; Registers used:
  5365 ;;		wreg
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5371 ;;      Params:         0       0       0       0       0       0       0       0       0
  5372 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5374 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5375 ;;Total ram usage:        1 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    1
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_DelayPORXLCD
  5382 ;;		_DelayXLCD
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text31
  5387  0018E8                     __ptext31:
  5388                           	opt stack 0
  5389  0018E8                     _Delay1KTCYx:
  5390                           	opt stack 26
  5391                           
  5392                           ;incstack = 0
  5393                           ;Delay1KTCYx@unit stored from wreg
  5394  0018E8  6E12               	movwf	Delay1KTCYx@unit,c
  5395  0018EA  0EC8               	movlw	200
  5396  0018EC                     u3097:
  5397  0018EC  D000               	nop2	
  5398  0018EE  2EE8               	decfsz	wreg,f,c
  5399  0018F0  D7FD               	bra	u3097
  5400  0018F2  2E12               	decfsz	Delay1KTCYx@unit,f,c
  5401  0018F4  D7FA               	goto	l2906
  5402  0018F6  0012               	return	
  5403  0018F8                     __end_of_Delay1KTCYx:
  5404                           	opt stack 0
  5405                           tblptru	equ	0xFF8
  5406                           tblptrh	equ	0xFF7
  5407                           tblptrl	equ	0xFF6
  5408                           tablat	equ	0xFF5
  5409                           prodh	equ	0xFF4
  5410                           prodl	equ	0xFF3
  5411                           intcon	equ	0xFF2
  5412                           postinc0	equ	0xFEE
  5413                           wreg	equ	0xFE8
  5414                           indf1	equ	0xFE7
  5415                           postdec1	equ	0xFE5
  5416                           fsr1h	equ	0xFE2
  5417                           fsr1l	equ	0xFE1
  5418                           indf2	equ	0xFDF
  5419                           postinc2	equ	0xFDE
  5420                           postdec2	equ	0xFDD
  5421                           fsr2h	equ	0xFDA
  5422                           fsr2l	equ	0xFD9
  5423                           status	equ	0xFD8
  5424                           
  5425 ;; *************** function _Delay10KTCYx *****************
  5426 ;; Defined at:
  5427 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  unit            1    wreg     unsigned char 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  unit            1   18[COMRAM] unsigned char 
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  1    wreg      void 
  5434 ;; Registers used:
  5435 ;;		wreg
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5441 ;;      Params:         0       0       0       0       0       0       0       0       0
  5442 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5443 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5444 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5445 ;;Total ram usage:        2 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    1
  5448 ;; This function calls:
  5449 ;;		Nothing
  5450 ;; This function is called by:
  5451 ;;		_setaDespertador
  5452 ;;		_main
  5453 ;;		_OpenXLCD
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           	psect	text32
  5458  0018D2                     __ptext32:
  5459                           	opt stack 0
  5460  0018D2                     _Delay10KTCYx:
  5461                           	opt stack 28
  5462                           
  5463                           ;incstack = 0
  5464                           ;Delay10KTCYx@unit stored from wreg
  5465  0018D2  6E13               	movwf	Delay10KTCYx@unit,c
  5466  0018D4  0E0D               	movlw	13
  5467  0018D6  6E12               	movwf	??_Delay10KTCYx& (0+255),c
  5468  0018D8  0EFC               	movlw	252
  5469  0018DA                     u3107:
  5470  0018DA  2EE8               	decfsz	wreg,f,c
  5471  0018DC  D7FE               	bra	u3107
  5472  0018DE  2E12               	decfsz	??_Delay10KTCYx& (0+255),f,c
  5473  0018E0  D7FC               	bra	u3107
  5474  0018E2  2E13               	decfsz	Delay10KTCYx@unit,f,c
  5475  0018E4  D7F7               	goto	l3166
  5476  0018E6  0012               	return	
  5477  0018E8                     __end_of_Delay10KTCYx:
  5478                           	opt stack 0
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           prodh	equ	0xFF4
  5484                           prodl	equ	0xFF3
  5485                           intcon	equ	0xFF2
  5486                           postinc0	equ	0xFEE
  5487                           wreg	equ	0xFE8
  5488                           indf1	equ	0xFE7
  5489                           postdec1	equ	0xFE5
  5490                           fsr1h	equ	0xFE2
  5491                           fsr1l	equ	0xFE1
  5492                           indf2	equ	0xFDF
  5493                           postinc2	equ	0xFDE
  5494                           postdec2	equ	0xFDD
  5495                           fsr2h	equ	0xFDA
  5496                           fsr2l	equ	0xFD9
  5497                           status	equ	0xFD8
  5498                           
  5499 ;; *************** function _BusyXLCD *****************
  5500 ;; Defined at:
  5501 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      unsigned char 
  5508 ;; Registers used:
  5509 ;;		wreg, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5515 ;;      Params:         0       0       0       0       0       0       0       0       0
  5516 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5518 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5519 ;;Total ram usage:        0 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    3
  5522 ;; This function calls:
  5523 ;;		_DelayFor18TCY
  5524 ;; This function is called by:
  5525 ;;		_init_XLCD
  5526 ;;		_OpenXLCD
  5527 ;;		_putrsXLCD
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text33
  5532  00175C                     __ptext33:
  5533                           	opt stack 0
  5534  00175C                     _BusyXLCD:
  5535                           	opt stack 24
  5536                           
  5537                           ;incstack = 0
  5538  00175C  8C8A               	bsf	3978,6,c	;volatile
  5539  00175E  9A8A               	bcf	3978,5,c	;volatile
  5540  001760  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5541  001764  888A               	bsf	3978,4,c	;volatile
  5542  001766  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5543  00176A  A681               	btfss	3969,3,c	;volatile
  5544  00176C  D00A               	goto	l303
  5545  00176E  988A               	bcf	3978,4,c	;volatile
  5546  001770  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5547  001774  888A               	bsf	3978,4,c	;volatile
  5548  001776  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5549  00177A  988A               	bcf	3978,4,c	;volatile
  5550  00177C  9C8A               	bcf	3978,6,c	;volatile
  5551  00177E  0E01               	movlw	1
  5552  001780  0012               	return	
  5553  001782                     l303:
  5554  001782  988A               	bcf	3978,4,c	;volatile
  5555  001784  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5556  001788  888A               	bsf	3978,4,c	;volatile
  5557  00178A  EC8E  F00C         	call	_DelayFor18TCY	;wreg free
  5558  00178E  988A               	bcf	3978,4,c	;volatile
  5559  001790  9C8A               	bcf	3978,6,c	;volatile
  5560  001792  0E00               	movlw	0
  5561  001794  0012               	return	
  5562  001796                     __end_of_BusyXLCD:
  5563                           	opt stack 0
  5564                           tblptru	equ	0xFF8
  5565                           tblptrh	equ	0xFF7
  5566                           tblptrl	equ	0xFF6
  5567                           tablat	equ	0xFF5
  5568                           prodh	equ	0xFF4
  5569                           prodl	equ	0xFF3
  5570                           intcon	equ	0xFF2
  5571                           postinc0	equ	0xFEE
  5572                           wreg	equ	0xFE8
  5573                           indf1	equ	0xFE7
  5574                           postdec1	equ	0xFE5
  5575                           fsr1h	equ	0xFE2
  5576                           fsr1l	equ	0xFE1
  5577                           indf2	equ	0xFDF
  5578                           postinc2	equ	0xFDE
  5579                           postdec2	equ	0xFDD
  5580                           fsr2h	equ	0xFDA
  5581                           fsr2l	equ	0xFD9
  5582                           status	equ	0xFD8
  5583                           
  5584 ;; *************** function _DelayFor18TCY *****************
  5585 ;; Defined at:
  5586 ;;		line 72 in file "main.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5600 ;;      Params:         0       0       0       0       0       0       0       0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5603 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    2
  5607 ;; This function calls:
  5608 ;;		_Delay10TCYx
  5609 ;; This function is called by:
  5610 ;;		_BusyXLCD
  5611 ;;		_SetDDRamAddr
  5612 ;;		_WriteCmdXLCD
  5613 ;;		_WriteDataXLCD
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           	psect	text34
  5618  00191C                     __ptext34:
  5619                           	opt stack 0
  5620  00191C                     _DelayFor18TCY:
  5621                           	opt stack 24
  5622                           
  5623                           ;main.c: 73: Delay10TCYx(120);
  5624                           
  5625                           ;incstack = 0
  5626  00191C  0E78               	movlw	120
  5627  00191E  EC7C  F00C         	call	_Delay10TCYx
  5628  001922  0012               	return		;funcret
  5629  001924                     __end_of_DelayFor18TCY:
  5630                           	opt stack 0
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           prodh	equ	0xFF4
  5636                           prodl	equ	0xFF3
  5637                           intcon	equ	0xFF2
  5638                           postinc0	equ	0xFEE
  5639                           wreg	equ	0xFE8
  5640                           indf1	equ	0xFE7
  5641                           postdec1	equ	0xFE5
  5642                           fsr1h	equ	0xFE2
  5643                           fsr1l	equ	0xFE1
  5644                           indf2	equ	0xFDF
  5645                           postinc2	equ	0xFDE
  5646                           postdec2	equ	0xFDD
  5647                           fsr2h	equ	0xFDA
  5648                           fsr2l	equ	0xFD9
  5649                           status	equ	0xFD8
  5650                           
  5651 ;; *************** function _Delay10TCYx *****************
  5652 ;; Defined at:
  5653 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  unit            1    wreg     unsigned char 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  unit            1   17[COMRAM] unsigned char 
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		wreg
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5667 ;;      Params:         0       0       0       0       0       0       0       0       0
  5668 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5670 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5671 ;;Total ram usage:        1 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    1
  5674 ;; This function calls:
  5675 ;;		Nothing
  5676 ;; This function is called by:
  5677 ;;		_DelayFor18TCY
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text35
  5682  0018F8                     __ptext35:
  5683                           	opt stack 0
  5684  0018F8                     _Delay10TCYx:
  5685                           	opt stack 24
  5686                           
  5687                           ;incstack = 0
  5688                           ;Delay10TCYx@unit stored from wreg
  5689  0018F8  6E12               	movwf	Delay10TCYx@unit,c
  5690  0018FA  0E03               	movlw	3
  5691  0018FC                     u3117:
  5692  0018FC  2EE8               	decfsz	wreg,f,c
  5693  0018FE  D7FE               	bra	u3117
  5694  001900  F000               	nop	
  5695  001902  2E12               	decfsz	Delay10TCYx@unit,f,c
  5696  001904  D7FA               	goto	l2862
  5697  001906  0012               	return	
  5698  001908                     __end_of_Delay10TCYx:
  5699                           	opt stack 0
  5700                           tblptru	equ	0xFF8
  5701                           tblptrh	equ	0xFF7
  5702                           tblptrl	equ	0xFF6
  5703                           tablat	equ	0xFF5
  5704                           prodh	equ	0xFF4
  5705                           prodl	equ	0xFF3
  5706                           intcon	equ	0xFF2
  5707                           postinc0	equ	0xFEE
  5708                           wreg	equ	0xFE8
  5709                           indf1	equ	0xFE7
  5710                           postdec1	equ	0xFE5
  5711                           fsr1h	equ	0xFE2
  5712                           fsr1l	equ	0xFE1
  5713                           indf2	equ	0xFDF
  5714                           postinc2	equ	0xFDE
  5715                           postdec2	equ	0xFDD
  5716                           fsr2h	equ	0xFDA
  5717                           fsr2l	equ	0xFD9
  5718                           status	equ	0xFD8
  5719                           
  5720 ;; *************** function _pic_isr *****************
  5721 ;; Defined at:
  5722 ;;		line 90 in file "main.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;		None
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;		None
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5736 ;;      Params:         0       0       0       0       0       0       0       0       0
  5737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5738 ;;      Temps:         17       0       0       0       0       0       0       0       0
  5739 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5740 ;;Total ram usage:       17 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; This function calls:
  5743 ;;		Nothing
  5744 ;; This function is called by:
  5745 ;;		Interrupt level 1
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           	psect	intcodelo
  5750  000018                     __pintcodelo:
  5751                           	opt stack 0
  5752  000018                     _pic_isr:
  5753                           	opt stack 24
  5754                           
  5755                           ;incstack = 0
  5756  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5757  00001A  CFD8 F001          	movff	status,??_pic_isr
  5758  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
  5759  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
  5760  000026  CFFA F004          	movff	pclath,??_pic_isr+3
  5761  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
  5762  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
  5763  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
  5764  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
  5765  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
  5766  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
  5767  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
  5768  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
  5769  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
  5770  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
  5771  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
  5772  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
  5773  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
  5774                           
  5775                           ;main.c: 94: if(TMR0IF){
  5776  00005E  A4F2               	btfss	intcon,2,c	;volatile
  5777  000060  D00D               	goto	i1l1894
  5778                           
  5779                           ;main.c: 96: cont++;
  5780  000062  2A2C               	incf	_cont,f,c
  5781                           
  5782                           ;main.c: 97: if(cont > 1){
  5783  000064  0E01               	movlw	1
  5784  000066  642C               	cpfsgt	_cont,c
  5785  000068  D004               	goto	i1l115
  5786                           
  5787                           ;main.c: 98: flagSegundo = 1;
  5788  00006A  0E01               	movlw	1
  5789  00006C  6E2D               	movwf	_flagSegundo,c
  5790                           
  5791                           ;main.c: 99: cont = 0;
  5792  00006E  0E00               	movlw	0
  5793  000070  6E2C               	movwf	_cont,c
  5794  000072                     i1l115:
  5795                           
  5796                           ;main.c: 100: }
  5797                           ;main.c: 103: TMR0 = 26474;
  5798  000072  0E67               	movlw	103
  5799  000074  6ED7               	movwf	4055,c	;volatile
  5800  000076  0E6A               	movlw	106
  5801  000078  6ED6               	movwf	4054,c	;volatile
  5802                           
  5803                           ;main.c: 104: INTCONbits.TMR0IF = 0;
  5804  00007A  94F2               	bcf	intcon,2,c	;volatile
  5805  00007C                     i1l1894:
  5806                           
  5807                           ;main.c: 105: }
  5808                           ;main.c: 108: if(PIR1bits.RCIF == 1)
  5809  00007C  AA9E               	btfss	3998,5,c	;volatile
  5810  00007E  D016               	goto	i1l122
  5811                           
  5812                           ;main.c: 109: {
  5813                           ;main.c: 110: if(i<7)
  5814  000080  0E07               	movlw	7
  5815  000082  602E               	cpfslt	_i,c
  5816  000084  D00E               	goto	i1l117
  5817  000086                     i1l118:
  5818  000086  AA9E               	btfss	3998,5,c	;volatile
  5819  000088  D7FE               	goto	i1l118
  5820                           
  5821                           ;main.c: 113: BUFFCOM[i]= RCREG;
  5822  00008A  502E               	movf	_i,w,c
  5823  00008C  0D01               	mullw	1
  5824  00008E  0E37               	movlw	low _BUFFCOM
  5825  000090  24F3               	addwf	prodl,w,c
  5826  000092  6ED9               	movwf	fsr2l,c
  5827  000094  0E00               	movlw	high _BUFFCOM
  5828  000096  20F4               	addwfc	prodh,w,c
  5829  000098  6EDA               	movwf	fsr2h,c
  5830  00009A  CFAE FFDF          	movff	4014,indf2	;volatile
  5831                           
  5832                           ;main.c: 115: i++;
  5833  00009E  2A2E               	incf	_i,f,c
  5834                           
  5835                           ;main.c: 116: }else
  5836  0000A0  D005               	goto	i1l122
  5837  0000A2                     i1l117:
  5838                           
  5839                           ;main.c: 117: {
  5840                           ;main.c: 118: PIR1bits.RCIF = 0;
  5841  0000A2  9A9E               	bcf	3998,5,c	;volatile
  5842                           
  5843                           ;main.c: 119: i=0;
  5844  0000A4  0E00               	movlw	0
  5845  0000A6  6E2E               	movwf	_i,c
  5846                           
  5847                           ;main.c: 120: estado = 1;
  5848  0000A8  0E01               	movlw	1
  5849  0000AA  6E2F               	movwf	_estado,c
  5850  0000AC                     i1l122:
  5851  0000AC  C011  FFF5         	movff	??_pic_isr+16,tablat
  5852  0000B0  C010  FFF8         	movff	??_pic_isr+15,tblptru
  5853  0000B4  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
  5854  0000B8  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
  5855  0000BC  C00D  FFF4         	movff	??_pic_isr+12,prodh
  5856  0000C0  C00C  FFF3         	movff	??_pic_isr+11,prodl
  5857  0000C4  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
  5858  0000C8  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
  5859  0000CC  C009  FFE2         	movff	??_pic_isr+8,fsr1h
  5860  0000D0  C008  FFE1         	movff	??_pic_isr+7,fsr1l
  5861  0000D4  C007  FFEA         	movff	??_pic_isr+6,fsr0h
  5862  0000D8  C006  FFE9         	movff	??_pic_isr+5,fsr0l
  5863  0000DC  C005  FFFB         	movff	??_pic_isr+4,pclatu
  5864  0000E0  C004  FFFA         	movff	??_pic_isr+3,pclath
  5865  0000E4  C003  FFE0         	movff	??_pic_isr+2,bsr
  5866  0000E8  C002  FFE8         	movff	??_pic_isr+1,wreg
  5867  0000EC  C001  FFD8         	movff	??_pic_isr,status
  5868  0000F0  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5869  0000F2  0010               	retfie	
  5870  0000F4                     __end_of_pic_isr:
  5871                           	opt stack 0
  5872                           pclatu	equ	0xFFB
  5873                           pclath	equ	0xFFA
  5874                           tblptru	equ	0xFF8
  5875                           tblptrh	equ	0xFF7
  5876                           tblptrl	equ	0xFF6
  5877                           tablat	equ	0xFF5
  5878                           prodh	equ	0xFF4
  5879                           prodl	equ	0xFF3
  5880                           intcon	equ	0xFF2
  5881                           postinc0	equ	0xFEE
  5882                           fsr0h	equ	0xFEA
  5883                           fsr0l	equ	0xFE9
  5884                           wreg	equ	0xFE8
  5885                           indf1	equ	0xFE7
  5886                           postdec1	equ	0xFE5
  5887                           fsr1h	equ	0xFE2
  5888                           fsr1l	equ	0xFE1
  5889                           bsr	equ	0xFE0
  5890                           indf2	equ	0xFDF
  5891                           postinc2	equ	0xFDE
  5892                           postdec2	equ	0xFDD
  5893                           fsr2h	equ	0xFDA
  5894                           fsr2l	equ	0xFD9
  5895                           status	equ	0xFD8
  5896                           pclatu	equ	0xFFB
  5897                           pclath	equ	0xFFA
  5898                           tblptru	equ	0xFF8
  5899                           tblptrh	equ	0xFF7
  5900                           tblptrl	equ	0xFF6
  5901                           tablat	equ	0xFF5
  5902                           prodh	equ	0xFF4
  5903                           prodl	equ	0xFF3
  5904                           intcon	equ	0xFF2
  5905                           postinc0	equ	0xFEE
  5906                           fsr0h	equ	0xFEA
  5907                           fsr0l	equ	0xFE9
  5908                           wreg	equ	0xFE8
  5909                           indf1	equ	0xFE7
  5910                           postdec1	equ	0xFE5
  5911                           fsr1h	equ	0xFE2
  5912                           fsr1l	equ	0xFE1
  5913                           bsr	equ	0xFE0
  5914                           indf2	equ	0xFDF
  5915                           postinc2	equ	0xFDE
  5916                           postdec2	equ	0xFDD
  5917                           fsr2h	equ	0xFDA
  5918                           fsr2l	equ	0xFD9
  5919                           status	equ	0xFD8
  5920                           
  5921                           	psect	rparam
  5922  0000                     pclatu	equ	0xFFB
  5923                           pclath	equ	0xFFA
  5924                           tblptru	equ	0xFF8
  5925                           tblptrh	equ	0xFF7
  5926                           tblptrl	equ	0xFF6
  5927                           tablat	equ	0xFF5
  5928                           prodh	equ	0xFF4
  5929                           prodl	equ	0xFF3
  5930                           intcon	equ	0xFF2
  5931                           postinc0	equ	0xFEE
  5932                           fsr0h	equ	0xFEA
  5933                           fsr0l	equ	0xFE9
  5934                           wreg	equ	0xFE8
  5935                           indf1	equ	0xFE7
  5936                           postdec1	equ	0xFE5
  5937                           fsr1h	equ	0xFE2
  5938                           fsr1l	equ	0xFE1
  5939                           bsr	equ	0xFE0
  5940                           indf2	equ	0xFDF
  5941                           postinc2	equ	0xFDE
  5942                           postdec2	equ	0xFDD
  5943                           fsr2h	equ	0xFDA
  5944                           fsr2l	equ	0xFD9
  5945                           status	equ	0xFD8
  5946                           
  5947                           	psect	temp
  5948  00004E                     btemp:
  5949                           	opt stack 0
  5950  00004E                     	ds	1
  5951  0000                     int$flags	set	btemp
  5952                           pclatu	equ	0xFFB
  5953                           pclath	equ	0xFFA
  5954                           tblptru	equ	0xFF8
  5955                           tblptrh	equ	0xFF7
  5956                           tblptrl	equ	0xFF6
  5957                           tablat	equ	0xFF5
  5958                           prodh	equ	0xFF4
  5959                           prodl	equ	0xFF3
  5960                           intcon	equ	0xFF2
  5961                           postinc0	equ	0xFEE
  5962                           fsr0h	equ	0xFEA
  5963                           fsr0l	equ	0xFE9
  5964                           wreg	equ	0xFE8
  5965                           indf1	equ	0xFE7
  5966                           postdec1	equ	0xFE5
  5967                           fsr1h	equ	0xFE2
  5968                           fsr1l	equ	0xFE1
  5969                           bsr	equ	0xFE0
  5970                           indf2	equ	0xFDF
  5971                           postinc2	equ	0xFDE
  5972                           postdec2	equ	0xFDD
  5973                           fsr2h	equ	0xFDA
  5974                           fsr2l	equ	0xFD9
  5975                           status	equ	0xFD8


Data Sizes:
    Strings     67
    Constant    10
    Data        19
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      77
    BANK0           160     15      47
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    memcpy@d1	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), 

    memcpy@s1	PTR const void  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> pegaHoraData(COMRAM[3]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[17]), STR_5(CODE[7]), 
		 -> STR_4(CODE[7]), versao(COMRAM[6]), STR_3(CODE[9]), STR_2(CODE[17]), 
		 -> horarioDespertador(COMRAM[6]), data_horario.data(BANK0[7]), data_horario.horario(BANK0[9]), data_horario(BANK0[20]), 
		 -> converteAnoString@anoStr(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 4
		 -> converteAnoString@anoStr(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), 

    crc16@data_p	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), BUFFCOM(COMRAM[7]), 

    sp__converteAnoString	PTR unsigned char  size(2) Largest target is 4
		 -> converteAnoString@anoStr(BANK0[4]), 


Critical Paths under _main in COMRAM

    _trata_relogio_data->_verificaAnoBissexto
    _verificaAnoBissexto->___awmod
    _atualiza_Tela->_converteAnoString
    _putrsXLCD->_converteAnoString
    _converteAnoString->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _maquinaEstado->_verificaCRCBUFFCOM
    _verificaCRCBUFFCOM->_crc16
    _trataComando->_memcpy
    _memcpy->_strlen
    _calculaCRCBUFFRESP->_crc16
    _atoi->___wmul
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _DelayFor18TCY->_Delay10TCYx

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_atualiza_Tela
    _setaDespertador->_atualiza_Tela
    _atualiza_Tela->_putrsXLCD
    _putrsXLCD->_converteAnoString
    _converteAnoString->_sprintf

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   15485
                                             14 BANK0      1     1      0
                       _Delay10KTCYx
                      _atualiza_Tela
                          _init_XLCD
                      _maquinaEstado
                    _setaDespertador
                 _trata_relogio_data
 ---------------------------------------------------------------------------------
 (1) _trata_relogio_data                                   5     5      0    1835
                                             27 COMRAM     5     5      0
                _verificaAnoBissexto
 ---------------------------------------------------------------------------------
 (2) _verificaAnoBissexto                                  4     2      2    1835
                                             23 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _setaDespertador                                      0     0      0    3099
                       _Delay10KTCYx
                      _atualiza_Tela
 ---------------------------------------------------------------------------------
 (2) _atualiza_Tela                                        1     1      0    3068
                                             13 BANK0      1     1      0
                       _SetDDRamAddr
                  _acionaDespertador
                  _converteAnoString
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (3) _putrsXLCD                                            2     0      2    1113
                                             11 BANK0      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
                  _converteAnoString (ARG)
 ---------------------------------------------------------------------------------
 (4) _WriteDataXLCD                                        1     1      0      93
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _converteAnoString                                    6     4      2    1831
                                             36 COMRAM     2     0      2
                                              7 BANK0      4     4      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             23    17      6    1631
                                             29 COMRAM     7     1      6
                                              0 BANK0      7     7      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     386
                                             24 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     395
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _acionaDespertador                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _maquinaEstado                                        0     0      0    6950
                          _enviaByte
                       _trataComando
                            _tx_data
                 _verificaCRCBUFFCOM
 ---------------------------------------------------------------------------------
 (2) _verificaCRCBUFFCOM                                   5     5      0     945
                                             30 COMRAM     5     5      0
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      99
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trataComando                                         0     0      0    5844
                            ___awdiv
                            ___awmod
                               _atoi
                 _calculaCRCBUFFRESP
                             _memcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     207
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     405
                                             23 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _calculaCRCBUFFRESP                                   2     2      0     840
                                             30 COMRAM     2     2      0
                              _crc16
 ---------------------------------------------------------------------------------
 (3) _crc16                                               13     9      4     775
                                             17 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1358
                                             23 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             17 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1665
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1369
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _enviaByte                                            1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     434
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     310
                                             22 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      93
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      93
                                             18 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      31
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      31
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _BusyXLCD                                             0     0      0      31
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0      31
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (6) _Delay10TCYx                                          1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay10KTCYx
   _atualiza_Tela
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     _acionaDespertador
     _converteAnoString
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _converteAnoString (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquinaEstado
     _enviaByte
     _trataComando
       ___awdiv
       ___awmod
       _atoi
         ___wmul
         _isdigit
       _calculaCRCBUFFRESP
         _crc16
       _memcpy
         _strlen (ARG)
       _strlen
     _tx_data
     _verificaCRCBUFFCOM
       _crc16
   _setaDespertador
     _Delay10KTCYx
     _atualiza_Tela
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _acionaDespertador
       _converteAnoString
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _converteAnoString (ARG)
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
   _trata_relogio_data
     _verificaAnoBissexto
       ___awmod

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      2F       5       29.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      4D       1       81.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7C      20        0.0%
DATA                 0      0      7C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed May 23 10:46:22 2018

                           _i 002E                  ___awdiv@sign 0017                            bsr 000FE0  
         ___wmul@multiplicand 0014                           l202 17AE                           l220 0852  
                         l222 085C                           l303 1782                           l231 0962  
                         l208 1898                           l224 0866                           l225 08AE  
                         l226 08E8                           l196 1074                           l566 118C  
                         l837 1534                           l847 165C         __size_of_WriteCmdXLCD 003E  
                ___awmod@sign 0017                           prod 000FF3                           wreg 000FE8  
                __CFG_WDT$OFF 000000                          l3020 1026                          l3014 100C  
                        l3200 115A                          l3032 107E                          l3024 102E  
                        l3210 1730                          l3028 106E                          l3302 13C2  
                        l3240 12FC                          l3224 1694                          l3208 172C  
                        l3400 0CA4                          l3250 131E                          l3234 12EC  
                        l3082 188E                          l3218 1678                          l3180 10CA  
                        l3164 1468                          l3324 14E4                          l3316 14C4  
                        l3166 18D4                          l3246 1312                          l3262 1344  
                        l3182 10CE                          l3502 0A4A                          l3510 0AC8  
                        l3158 1434                          l3360 11D8                          l3248 131A  
                        l3192 110E                          l3512 0AD6                          l3328 14E8  
                        l3266 1352                          l3258 133A                          l3290 1396  
                        l3282 137C                          l3506 0AAC                          l3426 0D2C  
                        l3434 0D7A                          l3380 1228                          l3372 1208  
                        l3364 11E8                          l3612 18BA                          l3196 1120  
                        l3532 15D8                          l3358 11CE                          l3294 13AA  
                        l3286 138A                          l3278 1370                          l3198 1156  
                        l3438 179E                          l2902 1652                          l3630 1264  
                        l3376 1218                          l3368 11F8                          l3288 1392  
                        l3448 17C8                          l3528 15CC                          l2912 0AEA  
                        l3640 128A                          l3608 0FEE                          l2906 18EA  
                        l3458 18AE                          l3298 13B4                          l3490 091C  
                        l3394 0C66                          l3642 1290                          l3492 0938  
                        l2924 0B34                          l3660 12C0                          l3636 127A  
                        l3740 0EA4                          l2862 18FA                          l3494 096C  
                        l3486 0918                          l3670 15E6                          l2934 0B64  
                        l2918 0B06                          l3662 12C8                          l3654 12AA  
                        l3638 1282                          l3726 0E6A                          l3496 09CE  
                        l3672 15EC                          l3680 1602                          l2936 0B6A  
                        l3664 12D0                          l3584 0F60                          l3568 0F28  
                        l3736 0E90                          l3498 09E0                          l3674 15F2  
                        l2874 1502                          l2962 0C18                          l2954 0BBC  
                        l3738 0E9A                          l3676 15FA                          l3668 15E0  
                        l2876 150A                          l2956 0BC2                          l2948 0BA0  
                        l2964 0C24                          l3748 0EB8                          l2886 152A  
                        l2878 150E                          l2894 1632                          l2966 0C3E  
                        l3598 0FB4                          l2896 163A                          l2898 163E  
 __end_of_verificaAnoBissexto 14EC                          STR_1 084B                          STR_2 081C  
                        STR_3 082D                          STR_4 083D                          STR_5 0844  
                        STR_6 080B                          STR_7 0837                          STR_8 0836  
                        u3107 18DA                          u3117 18FC                          u2370 145E  
                        u2355 1554                          u2380 1488                          u3097 18EC  
                        u2377 1454                          u2387 147E                          _PEIE 007F96  
                        _RCIE 007CED                          _RCIF 007CF5                          _RCIP 007CFD  
                        _TMR0 000FD6                          _TXIF 007CF4                          _atoi 10C8  
                        _cont 002C                          _main 0D90                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 004E        __size_of_WriteDataXLCD 003E  
                        prodh 000FF4                          prodl 000FF3                          start 00F4  
      verificaCRCBUFFCOM@crc1 001F        verificaCRCBUFFCOM@crc2 0020                  ___param_bank 000000  
               _atualiza_Tela 0C4C                   _Delay10TCYx 18F8         _flagDespertadorLigado 002B  
                _WriteCmdXLCD 16E4                   _Delay1KTCYx 18E8                         ?_atoi 0018  
               ?_SetDDRamAddr 0001                         ?_main 0001               __end_of___awdiv 135C  
          _verificaCRCBUFFCOM 1590               __end_of___awmod 13CC               ___awdiv@divisor 0014  
             __end_of___lwdiv 153E                         i1l122 00AC                         i1l115 0072  
                       i1l117 00A2                         i1l118 0086               __end_of___lwmod 1666  
             ___awdiv@counter 0016                         _RCREG 000FAE                         _RCSTA 000FAB  
                       _SPBRG 000FAF                         _PORTB 000F81                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TXREG 000FAD  
       __size_of_Delay10KTCYx 0016                         _TXSTA 000FAC                         _crc16 0FF6  
         ?_verificaCRCBUFFCOM 0001               __end_of_dpowers 080B               __end_of_isdigit 1896  
             __end_of_pic_isr 00F4                         atoi@a 001D                         atoi@s 0018  
                       pclath 000FFA                         tablat 000FF5               __end_of_tx_data 17CE  
                       status 000FD8               __end_of_sprintf 0C4C             ??_setaDespertador 0027  
             __initialization 13CC                ?_atualiza_Tela 0001          ??_verificaCRCBUFFCOM 001F  
                __end_of_atoi 1196                  __end_of_main 0EC6              __end_of_BusyXLCD 1796  
                _Delay10KTCYx 18D2         __size_of_DelayPORXLCD 0008                ??_SetDDRamAddr 0013  
  __end_of_trata_relogio_data 0FF6              __end_of_OpenXLCD 123A    __end_of_calculaCRCBUFFRESP 182C  
                      ??_atoi 001A                        ??_main 0027                 __activetblptr 000002  
               _WriteDataXLCD 16A6              _tempoDespertador 0028                        ?_crc16 0012  
                      _ADCON1 000FC1              ___awdiv@dividend 0012                        i1l1894 007C  
                      _TMR0IF 007F92                  _DelayPORXLCD 1914                        ___wmul 1852  
                   ??___awdiv 0016                        crc16@i 001A                     ??___awmod 0016  
      __size_of_maquinaEstado 0046                     ??___lwdiv 0016                     ??___lwmod 001D  
                      _estado 002F                        _memcpy 1666                        clear_0 1412  
                      clear_1 141E              ___awdiv@quotient 0018               ___awmod@divisor 0014  
             ___awmod@counter 0016                        _versao 0048                ?_WriteDataXLCD 0001  
                      _strlen 1722     atualiza_Tela@troca_ou_nao 0081                  __pdataCOMRAM 0047  
                   ??_isdigit 0012                     ??_pic_isr 0001                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
           _converteAnoString 182C                     ??_tx_data 0012                     ??_sprintf 0024  
    verificaCRCBUFFCOM@CRC_OK 0021            ?_converteAnoString 0025                    __accesstop 0060  
     __end_of__initialization 1424               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
             ??_atualiza_Tela 0027         calculaCRCBUFFRESP@crc 001F           ??_converteAnoString 0027  
              __pcstackCOMRAM 0001                  __pidataBANK0 1908                 __end_of_crc16 10C8  
                _data_horario 0060     __end_of_converteAnoString 1852                       ??_crc16 0016  
               _maquinaEstado 15DE        __size_of_DelayFor18TCY 0008                    __pbssBANK0 0060  
          __size_of_enviaByte 001E                     ?_BusyXLCD 0001               WriteCmdXLCD@cmd 0013  
        __end_of_SetDDRamAddr 1590            __size_of_init_XLCD 001E                     ?_OpenXLCD 0001  
           WriteDataXLCD@data 0013                  ?_Delay10TCYx 0001                       ?___wmul 0012  
             ??_WriteDataXLCD 0013                  ?_Delay1KTCYx 0001                       ?_memcpy 0018  
      verificaAnoBissexto@ano 0018                       _BUFFCOM 0037                       ?_strlen 0012  
        converteAnoString@ano 0025                ?_maquinaEstado 0001               _setaDespertador 123A  
          __size_of_putrsXLCD 005E                    ??_BusyXLCD 0013                    ??_OpenXLCD 0017  
__size_of_verificaAnoBissexto 005C                       __Hparam 0000                       __Lparam 0000  
                     ___awdiv 12D8                 _DelayFor18TCY 191C                       ___awmod 135C  
             __size_of___wmul 0026                       ___lwdiv 14EC                       ___lwmod 1624  
                __psmallconst 0800             __end_of_enviaByte 18B4                       __pcinit 13CC  
             __size_of_memcpy 0040               putrsXLCD@buffer 007F               Delay10TCYx@unit 0012  
                     __ramtop 0800                       __ptext0 0D90                       __ptext1 0EC6  
                     __ptext2 1490                       __ptext3 123A                       __ptext4 0C4C  
                     __ptext5 1432                       __ptext6 16A6                       __ptext7 182C  
                     __ptext8 0ADC                       __ptext9 1624             __end_of_init_XLCD 18D2  
                   _T0CONbits 000FD5               __size_of_strlen 003A                       _dpowers 0801  
                     _isdigit 1878                       _pic_isr 0018    __size_of_converteAnoString 0026  
            ___awmod@dividend 0012                       _tx_data 1796                       _sprintf 0ADC  
        end_of_initialization 1424            _trata_relogio_data 0EC6            _calculaCRCBUFFRESP 1802  
                     memcpy@d 001E                       memcpy@n 001C                       memcpy@s 0020  
               __Lmediumconst 0000                    _tela_atual 0027           ?_trata_relogio_data 0001  
         ?_calculaCRCBUFFRESP 0001                 enviaByte@BYTE 0012                ?_DelayFor18TCY 0001  
 __size_of_verificaCRCBUFFCOM 004E                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                       strlen@s 0012  
           __end_of_putrsXLCD 1490                     _PORTCbits 000F82                     _PORTDbits 000F83  
        ??_trata_relogio_data 001C          ??_calculaCRCBUFFRESP 001F       __end_of_setaDespertador 12D8  
             ??_maquinaEstado 0024                     _TRISBbits 000F93                     _TRISCbits 000F94  
       __size_of_SetDDRamAddr 0052                 ?_trataComando 0001         verificaCRCBUFFCOM@crc 0022  
              __end_of___wmul 1878          __size_of_Delay10TCYx 0010                 __pidataCOMRAM 1924  
              __end_of_memcpy 16A6                  _SetDDRamAddr 153E            _horarioDespertador 003E  
        __size_of_Delay1KTCYx 0010            SetDDRamAddr@DDaddr 0016                __end_of_strlen 175C  
         start_initialization 13CC                ??_trataComando 0022             __size_of_BusyXLCD 003A  
                _pegaHoraData 0044               ??_DelayFor18TCY 0013         __end_of_atualiza_Tela 0D90  
           __size_of_OpenXLCD 00A4                      ??___wmul 0016                 ?_WriteCmdXLCD 0001  
                 tx_data@cont 0012                   __pdataBANK0 0083                      ??_memcpy 001E  
                 crc16@data_p 0012                      ??_strlen 0014                   crc16@length 0014  
            ?_setaDespertador 0001                   __pbssCOMRAM 0027           _verificaAnoBissexto 1490  
               __pcstackBANK0 0074                  _isdigit$1095 0013               Delay1KTCYx@unit 0012  
                 sprintf@flag 0076                   sprintf@prec 0077                     crc16@data 001B  
        ?_verificaAnoBissexto 0018              ___lwdiv@dividend 0012                ??_WriteCmdXLCD 0013  
                    ?___awdiv 0012                      ?___awmod 0012                 ?_Delay10KTCYx 0001  
                    ?___lwdiv 0012                      ?___lwmod 0019                   __pintcodelo 0018  
                   _botaoHora 002A                   _flagSegundo 002D         __end_of_WriteDataXLCD 16E4  
                 __smallconst 0800                      ?_isdigit 0001                     _enviaByte 1896  
                    ?_pic_isr 0001                     _init_XLCD 18B4                __size_of_crc16 00D2  
            ___lwdiv@quotient 0017                      ?_tx_data 0001                      ?_sprintf 001E  
                    _BUFFRESP 0030             _acionaDespertador 17CE            ?_acionaDespertador 0001  
              ___wmul@product 0016                      _LATBbits 000F8A         ??_verificaAnoBissexto 001A  
               ?_DelayPORXLCD 0001                      _PIR1bits 000F9E               OpenXLCD@lcdtype 0017  
         ??_acionaDespertador 0012                ??_Delay10KTCYx 0012             ___wmul@multiplier 0012  
        __end_of_trataComando 0ADC                     main@botao 0082                    ?_enviaByte 0001  
                   _putrsXLCD 1432              Delay10KTCYx@unit 0013                    ?_init_XLCD 0001  
   __end_of_acionaDespertador 1802                     copy_data0 13E0                     copy_data1 1400  
                    _BusyXLCD 175C                ??_DelayPORXLCD 0013                      _OpenXLCD 1196  
  __end_of_verificaCRCBUFFCOM 15DE                      __Hrparam 0000                      __Lrparam 0000  
            __size_of___awdiv 0084              __size_of___awmod 0070              __size_of___lwdiv 0052  
            __size_of___lwmod 0042                    sprintf@val 0078                    ?_putrsXLCD 007F  
                    crc16@crc 001D   __size_of_trata_relogio_data 0130   __size_of_calculaCRCBUFFRESP 002A  
            __size_of_isdigit 001E              __size_of_pic_isr 00DC                      _dias_mes 0083  
             ___lwdiv@divisor 0014               ___lwdiv@counter 0016         __end_of_maquinaEstado 1624  
                    __ptext10 14EC                      __ptext11 17CE                      __ptext20 10C8  
                    __ptext12 15DE                      __ptext21 1878                      __ptext13 1590  
                    __ptext30 1914                      __ptext22 1852                      __ptext14 1796  
                    __ptext31 18E8                      __ptext23 135C                      __ptext15 0850  
                    __ptext32 18D2                      __ptext24 12D8                      __ptext16 1722  
                    __ptext33 175C                      __ptext25 1896                      __ptext17 1666  
                    __ptext34 191C                      __ptext26 18B4                      __ptext18 1802  
                    __ptext35 18F8                      __ptext27 1196                      __ptext19 0FF6  
                    __ptext28 16E4                      __ptext29 153E                      _botaoMin 0029  
        __end_of_WriteCmdXLCD 1722              __size_of_tx_data 0038              __size_of_sprintf 0170  
               __size_of_atoi 00CE                 __size_of_main 0136       converteAnoString@anoStr 007B  
               ??_Delay10TCYx 0012                      int$flags 004E                      atoi@sign 001C  
               ??_Delay1KTCYx 0012                      _virouDia 0047                   ??_enviaByte 0012  
                  _INTCONbits 000FF2                      memcpy@d1 0018                      memcpy@s1 001A  
                 ??_init_XLCD 0018    __size_of_acionaDespertador 0034                      isdigit@c 0014  
        __end_of_Delay10KTCYx 18E8                      intlevel1 0000                     sprintf@ap 0074  
                   sprintf@sp 001E              ___lwmod@dividend 0019         __end_of_DelayFor18TCY 1924  
       __size_of_trataComando 028C           __end_of_Delay10TCYx 1908                      sprintf@c 007A  
                    sprintf@f 0020          __end_of_DelayPORXLCD 191C                   ??_putrsXLCD 0027  
             ___lwmod@divisor 001B                      strlen@cp 0016           __end_of_Delay1KTCYx 18F8  
             ___lwmod@counter 001D        __size_of_atualiza_Tela 0144      __size_of_setaDespertador 009E  
                _trataComando 0850  
