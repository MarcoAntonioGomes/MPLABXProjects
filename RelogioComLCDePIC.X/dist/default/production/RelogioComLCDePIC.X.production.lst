

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed May 23 10:13:53 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           ; Version 1.41
    44                           ; Generated 25/01/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  00129A                     __pidataCOMRAM:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _virouDia
    83  00129A  01                 	db	1
    84                           
    85                           ;initializer for _versao
    86  00129B  30                 	db	48
    87  00129C  31                 	db	49
    88  00129D  2E                 	db	46
    89  00129E  30                 	db	48
    90  00129F  30                 	db	48
    91  0012A0  00                 	db	0
    92                           
    93                           	psect	idataBANK0
    94  00127E                     __pidataBANK0:
    95                           	opt stack 0
    96                           
    97                           ;initializer for _dias_mes
    98  00127E  1F                 	db	31
    99  00127F  1C                 	db	28
   100  001280  1F                 	db	31
   101  001281  1E                 	db	30
   102  001282  1F                 	db	31
   103  001283  1E                 	db	30
   104  001284  1F                 	db	31
   105  001285  1F                 	db	31
   106  001286  1E                 	db	30
   107  001287  1F                 	db	31
   108  001288  1E                 	db	30
   109  001289  1F                 	db	31
   110                           
   111                           	psect	smallconst
   112  000800                     __psmallconst:
   113                           	opt stack 0
   114  000800  00                 	db	0
   115  000801                     _dpowers:
   116                           	opt stack 0
   117  000801  0001               	dw	1
   118  000803  000A               	dw	10
   119  000805  0064               	dw	100
   120  000807  03E8               	dw	1000
   121  000809  2710               	dw	10000
   122  00080B                     __end_of_dpowers:
   123                           	opt stack 0
   124  0000                     _TMR0	set	4054
   125  0000                     _TRISBbits	set	3987
   126  0000                     _PORTB	set	3969
   127  0000                     _LATBbits	set	3978
   128  0000                     _T0CONbits	set	4053
   129  0000                     _TRISCbits	set	3988
   130  0000                     _TXSTA	set	4012
   131  0000                     _RCSTA	set	4011
   132  0000                     _SPBRG	set	4015
   133  0000                     _TRISC	set	3988
   134  0000                     _TRISD	set	3989
   135  0000                     _TRISB	set	3987
   136  0000                     _ADCON1	set	4033
   137  0000                     _TXREG	set	4013
   138  0000                     _PIR1bits	set	3998
   139  0000                     _RCREG	set	4014
   140  0000                     _PORTCbits	set	3970
   141  0000                     _PORTDbits	set	3971
   142  0000                     _INTCONbits	set	4082
   143  0000                     _PEIE	set	32662
   144  0000                     _RCIE	set	31981
   145  0000                     _RCIP	set	31997
   146  0000                     _TXIF	set	31988
   147  0000                     _RCIF	set	31989
   148  0000                     _TMR0IF	set	32658
   149  00080B                     STR_6:
   150  00080B  20                 	db	32
   151  00080C  20                 	db	32
   152  00080D  20                 	db	32
   153  00080E  20                 	db	32
   154  00080F  20                 	db	32
   155  000810  41                 	db	65	;'A'
   156  000811  4C                 	db	76	;'L'
   157  000812  41                 	db	65	;'A'
   158  000813  52                 	db	82	;'R'
   159  000814  4D                 	db	77	;'M'
   160  000815  45                 	db	69	;'E'
   161  000816  20                 	db	32
   162  000817  20                 	db	32
   163  000818  20                 	db	32
   164  000819  20                 	db	32
   165  00081A  20                 	db	32
   166  00081B  00                 	db	0
   167  00081C                     STR_2:
   168  00081C  44                 	db	68	;'D'
   169  00081D  65                 	db	101	;'e'
   170  00081E  73                 	db	115	;'s'
   171  00081F  70                 	db	112	;'p'
   172  000820  65                 	db	101	;'e'
   173  000821  72                 	db	114	;'r'
   174  000822  74                 	db	116	;'t'
   175  000823  61                 	db	97	;'a'
   176  000824  64                 	db	100	;'d'
   177  000825  6F                 	db	111	;'o'
   178  000826  72                 	db	114	;'r'
   179  000827  20                 	db	32
   180  000828  20                 	db	32
   181  000829  20                 	db	32
   182  00082A  20                 	db	32
   183  00082B  20                 	db	32
   184  00082C  00                 	db	0
   185  00082D                     STR_3:
   186  00082D  56                 	db	86	;'V'
   187  00082E  65                 	db	101	;'e'
   188  00082F  72                 	db	114	;'r'
   189  000830  73                 	db	115	;'s'
   190  000831  61                 	db	97	;'a'
   191  000832  6F                 	db	111	;'o'
   192  000833  3A                 	db	58	;':'
   193  000834  20                 	db	32
   194  000835  00                 	db	0
   195  000836                     STR_8:
   196  000836  20                 	db	32
   197  000837  20                 	db	32
   198  000838  20                 	db	32
   199  000839  20                 	db	32
   200  00083A  20                 	db	32
   201  00083B  20                 	db	32
   202  00083C  00                 	db	0
   203  00083D                     STR_4:
   204  00083D  48                 	db	72	;'H'
   205  00083E  6F                 	db	111	;'o'
   206  00083F  72                 	db	114	;'r'
   207  000840  61                 	db	97	;'a'
   208  000841  3A                 	db	58	;':'
   209  000842  20                 	db	32
   210  000843  00                 	db	0
   211  000844                     STR_5:
   212  000844  44                 	db	68	;'D'
   213  000845  61                 	db	97	;'a'
   214  000846  74                 	db	116	;'t'
   215  000847  61                 	db	97	;'a'
   216  000848  3A                 	db	58	;':'
   217  000849  20                 	db	32
   218  00084A  00                 	db	0
   219  00084B                     STR_1:
   220  00084B  25                 	db	37
   221  00084C  69                 	db	105	;'i'
   222  00084D  00                 	db	0
   223  0000                     
   224                           ; #config settings
   225  00084E  00                 	db	0	; dummy byte at the end
   226  0000                     
   227                           	psect	cinit
   228  000F14                     __pcinit:
   229                           	opt stack 0
   230  000F14                     start_initialization:
   231                           	opt stack 0
   232  000F14                     __initialization:
   233                           	opt stack 0
   234                           
   235                           ; Initialize objects allocated to BANK0 (12 bytes)
   236                           ; load TBLPTR registers with __pidataBANK0
   237  000F14  0E7E               	movlw	low __pidataBANK0
   238  000F16  6EF6               	movwf	tblptrl,c
   239  000F18  0E12               	movlw	high __pidataBANK0
   240  000F1A  6EF7               	movwf	tblptrh,c
   241  000F1C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   242  000F1E  6EF8               	movwf	tblptru,c
   243  000F20  EE00  F082         	lfsr	0,__pdataBANK0
   244  000F24  EE10 F00C          	lfsr	1,12
   245  000F28                     copy_data0:
   246  000F28  0009               	tblrd		*+
   247  000F2A  CFF5 FFEE          	movff	tablat,postinc0
   248  000F2E  50E5               	movf	postdec1,w,c
   249  000F30  50E1               	movf	fsr1l,w,c
   250  000F32  E1FA               	bnz	copy_data0
   251                           
   252                           ; Initialize objects allocated to COMRAM (7 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254  000F34  0E9A               	movlw	low __pidataCOMRAM
   255  000F36  6EF6               	movwf	tblptrl,c
   256  000F38  0E12               	movlw	high __pidataCOMRAM
   257  000F3A  6EF7               	movwf	tblptrh,c
   258  000F3C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259  000F3E  6EF8               	movwf	tblptru,c
   260  000F40  EE00  F047         	lfsr	0,__pdataCOMRAM
   261  000F44  EE10 F007          	lfsr	1,7
   262  000F48                     copy_data1:
   263  000F48  0009               	tblrd		*+
   264  000F4A  CFF5 FFEE          	movff	tablat,postinc0
   265  000F4E  50E5               	movf	postdec1,w,c
   266  000F50  50E1               	movf	fsr1l,w,c
   267  000F52  E1FA               	bnz	copy_data1
   268                           
   269                           ; Clear objects allocated to BANK0 (20 bytes)
   270  000F54  EE00  F060         	lfsr	0,__pbssBANK0
   271  000F58  0E14               	movlw	20
   272  000F5A                     clear_0:
   273  000F5A  6AEE               	clrf	postinc0,c
   274  000F5C  06E8               	decf	wreg,f,c
   275  000F5E  E1FD               	bnz	clear_0
   276                           
   277                           ; Clear objects allocated to COMRAM (31 bytes)
   278  000F60  EE00  F028         	lfsr	0,__pbssCOMRAM
   279  000F64  0E1F               	movlw	31
   280  000F66                     clear_1:
   281  000F66  6AEE               	clrf	postinc0,c
   282  000F68  06E8               	decf	wreg,f,c
   283  000F6A  E1FD               	bnz	clear_1
   284  000F6C                     end_of_initialization:
   285                           	opt stack 0
   286  000F6C                     __end_of__initialization:
   287                           	opt stack 0
   288  000F6C  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   289  000F6E  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   290  000F70  0E00               	movlw	low (__Lmediumconst shr (0+16))
   291  000F72  6EF8               	movwf	tblptru,c
   292  000F74  0100               	movlb	0
   293  000F76  EF80  F005         	goto	_main	;jump to C main() function
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           postdec1	equ	0xFE5
   301                           fsr1l	equ	0xFE1
   302                           
   303                           	psect	bssCOMRAM
   304  000028                     __pbssCOMRAM:
   305                           	opt stack 0
   306  000028                     _tela_atual:
   307                           	opt stack 0
   308  000028                     	ds	1
   309  000029                     _tempoDespertador:
   310                           	opt stack 0
   311  000029                     	ds	1
   312  00002A                     _botaoMin:
   313                           	opt stack 0
   314  00002A                     	ds	1
   315  00002B                     _botaoHora:
   316                           	opt stack 0
   317  00002B                     	ds	1
   318  00002C                     _flagDespertadorLigado:
   319                           	opt stack 0
   320  00002C                     	ds	1
   321  00002D                     _cont:
   322                           	opt stack 0
   323  00002D                     	ds	1
   324  00002E                     _flagSegundo:
   325                           	opt stack 0
   326  00002E                     	ds	1
   327  00002F                     _estado:
   328                           	opt stack 0
   329  00002F                     	ds	1
   330  000030                     _BUFFRESP:
   331                           	opt stack 0
   332  000030                     	ds	7
   333  000037                     _BUFFCOM:
   334                           	opt stack 0
   335  000037                     	ds	7
   336  00003E                     _horarioDespertador:
   337                           	opt stack 0
   338  00003E                     	ds	6
   339  000044                     _pegaHoraData:
   340                           	opt stack 0
   341  000044                     	ds	3
   342                           tblptru	equ	0xFF8
   343                           tblptrh	equ	0xFF7
   344                           tblptrl	equ	0xFF6
   345                           tablat	equ	0xFF5
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           postdec1	equ	0xFE5
   349                           fsr1l	equ	0xFE1
   350                           
   351                           	psect	dataCOMRAM
   352  000047                     __pdataCOMRAM:
   353                           	opt stack 0
   354  000047                     _virouDia:
   355                           	opt stack 0
   356  000047                     	ds	1
   357  000048                     _versao:
   358                           	opt stack 0
   359  000048                     	ds	6
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           postdec1	equ	0xFE5
   367                           fsr1l	equ	0xFE1
   368                           
   369                           	psect	bssBANK0
   370  000060                     __pbssBANK0:
   371                           	opt stack 0
   372  000060                     _data_horario:
   373                           	opt stack 0
   374  000060                     	ds	20
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           postinc0	equ	0xFEE
   380                           wreg	equ	0xFE8
   381                           postdec1	equ	0xFE5
   382                           fsr1l	equ	0xFE1
   383                           
   384                           	psect	dataBANK0
   385  000082                     __pdataBANK0:
   386                           	opt stack 0
   387  000082                     _dias_mes:
   388                           	opt stack 0
   389  000082                     	ds	12
   390                           tblptru	equ	0xFF8
   391                           tblptrh	equ	0xFF7
   392                           tblptrl	equ	0xFF6
   393                           tablat	equ	0xFF5
   394                           postinc0	equ	0xFEE
   395                           wreg	equ	0xFE8
   396                           postdec1	equ	0xFE5
   397                           fsr1l	equ	0xFE1
   398                           
   399                           	psect	cstackBANK0
   400  000074                     __pcstackBANK0:
   401                           	opt stack 0
   402  000074                     sprintf@ap:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x0
   406  000074                     	ds	2
   407  000076                     sprintf@flag:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x2
   411  000076                     	ds	1
   412  000077                     sprintf@prec:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x3
   416  000077                     	ds	1
   417  000078                     sprintf@val:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x4
   421  000078                     	ds	2
   422  00007A                     sprintf@c:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x6
   426  00007A                     	ds	1
   427  00007B                     converteAnoString@anoStr:
   428                           	opt stack 0
   429                           
   430                           ; 4 bytes @ 0x7
   431  00007B                     	ds	4
   432  00007F                     putrsXLCD@buffer:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0xB
   436  00007F                     	ds	2
   437  000081                     main@botao:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0xD
   441  000081                     	ds	1
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	cstackCOMRAM
   452  000001                     __pcstackCOMRAM:
   453                           	opt stack 0
   454  000001                     ??_pic_isr:
   455  000001                     
   456                           ; 1 bytes @ 0x0
   457  000001                     	ds	17
   458  000012                     ??_Delay10KTCYx:
   459  000012                     ?___awmod:
   460                           	opt stack 0
   461  000012                     ?___lwdiv:
   462                           	opt stack 0
   463  000012                     Delay10TCYx@unit:
   464                           	opt stack 0
   465  000012                     Delay1KTCYx@unit:
   466                           	opt stack 0
   467  000012                     ___awmod@dividend:
   468                           	opt stack 0
   469  000012                     ___lwdiv@dividend:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x11
   473  000012                     	ds	1
   474  000013                     ??_SetDDRamAddr:
   475  000013                     WriteCmdXLCD@cmd:
   476                           	opt stack 0
   477  000013                     WriteDataXLCD@data:
   478                           	opt stack 0
   479  000013                     Delay10KTCYx@unit:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x12
   483  000013                     	ds	1
   484  000014                     ___awmod@divisor:
   485                           	opt stack 0
   486  000014                     ___lwdiv@divisor:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x13
   490  000014                     	ds	2
   491  000016                     SetDDRamAddr@DDaddr:
   492                           	opt stack 0
   493  000016                     ___awmod@counter:
   494                           	opt stack 0
   495  000016                     ___lwdiv@counter:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x15
   499  000016                     	ds	1
   500  000017                     OpenXLCD@lcdtype:
   501                           	opt stack 0
   502  000017                     ___awmod@sign:
   503                           	opt stack 0
   504  000017                     ___lwdiv@quotient:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x16
   508  000017                     	ds	1
   509  000018                     verificaAnoBissexto@ano:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x17
   513  000018                     	ds	1
   514  000019                     ?___lwmod:
   515                           	opt stack 0
   516  000019                     ___lwmod@dividend:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x18
   520  000019                     	ds	1
   521  00001A                     ??_verificaAnoBissexto:
   522                           
   523                           ; 1 bytes @ 0x19
   524  00001A                     	ds	1
   525  00001B                     ___lwmod@divisor:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x1A
   529  00001B                     	ds	1
   530  00001C                     ??_trata_relogio_data:
   531                           
   532                           ; 1 bytes @ 0x1B
   533  00001C                     	ds	1
   534  00001D                     ___lwmod@counter:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x1C
   538  00001D                     	ds	1
   539  00001E                     ?_sprintf:
   540                           	opt stack 0
   541  00001E                     sprintf@sp:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x1D
   545  00001E                     	ds	2
   546  000020                     sprintf@f:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x1F
   550  000020                     	ds	4
   551  000024                     ??_sprintf:
   552                           
   553                           ; 1 bytes @ 0x23
   554  000024                     	ds	1
   555  000025                     ?_converteAnoString:
   556                           	opt stack 0
   557  000025                     converteAnoString@ano:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x24
   561  000025                     	ds	2
   562  000027                     atualiza_Tela@troca_ou_nao:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x26
   566  000027                     	ds	1
   567  000028                     tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           postdec1	equ	0xFE5
   574                           fsr1l	equ	0xFE1
   575                           
   576                           ; 1 bytes @ 0x27
   577 ;;
   578 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   579 ;;
   580 ;; *************** function _main *****************
   581 ;; Defined at:
   582 ;;		line 578 in file "main.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  botao           1   13[BANK0 ] unsigned char 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   596 ;;      Params:         0       0       0       0       0       0       0       0       0
   597 ;;      Locals:         0       1       0       0       0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0
   599 ;;      Totals:         0       1       0       0       0       0       0       0       0
   600 ;;Total ram usage:        1 bytes
   601 ;; Hardware stack levels required when called:    7
   602 ;; This function calls:
   603 ;;		_Delay10KTCYx
   604 ;;		_atualiza_Tela
   605 ;;		_init_XLCD
   606 ;;		_setaDespertador
   607 ;;		_trata_relogio_data
   608 ;; This function is called by:
   609 ;;		Startup code after reset
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text0
   614  000B00                     __ptext0:
   615                           	opt stack 0
   616  000B00                     _main:
   617                           	opt stack 24
   618                           
   619                           ;main.c: 579: ADCON1 = 0x0F;
   620                           
   621                           ;incstack = 0
   622  000B00  0E0F               	movlw	15
   623  000B02  6EC1               	movwf	4033,c	;volatile
   624                           
   625                           ;main.c: 580: TRISB = 0x00;
   626  000B04  0E00               	movlw	0
   627  000B06  6E93               	movwf	3987,c	;volatile
   628                           
   629                           ;main.c: 581: TRISD = 0x00;
   630  000B08  0E00               	movlw	0
   631  000B0A  6E95               	movwf	3989,c	;volatile
   632                           
   633                           ;main.c: 582: TRISC = 0x01;
   634  000B0C  0E01               	movlw	1
   635  000B0E  6E94               	movwf	3988,c	;volatile
   636                           
   637                           ;main.c: 583: SPBRG=(((20000000/64)/9600)-1);
   638  000B10  0E1F               	movlw	31
   639  000B12  6EAF               	movwf	4015,c	;volatile
   640                           
   641                           ;main.c: 589: RCSTA = 0b10010000;
   642  000B14  0E90               	movlw	144
   643  000B16  6EAB               	movwf	4011,c	;volatile
   644                           
   645                           ;main.c: 590: TXSTA = 0b00100000;
   646  000B18  0E20               	movlw	32
   647  000B1A  6EAC               	movwf	4012,c	;volatile
   648                           
   649                           ;main.c: 592: TRISCbits.RC6 = 0;
   650  000B1C  9C94               	bcf	3988,6,c	;volatile
   651                           
   652                           ;main.c: 593: TRISCbits.RC7 = 1;
   653  000B1E  8E94               	bsf	3988,7,c	;volatile
   654                           
   655                           ;main.c: 596: RCIF = 0;
   656  000B20  9A9E               	bcf	3998,5,c	;volatile
   657                           
   658                           ;main.c: 597: RCIP = 0;
   659  000B22  9A9F               	bcf	3999,5,c	;volatile
   660                           
   661                           ;main.c: 598: RCIE = 1;
   662  000B24  8A9D               	bsf	3997,5,c	;volatile
   663                           
   664                           ;main.c: 599: PEIE = 1;
   665  000B26  8CF2               	bsf	intcon,6,c	;volatile
   666                           
   667                           ;main.c: 600: char botao;
   668                           ;main.c: 604: data_horario.horario[0] = '2';
   669  000B28  0E32               	movlw	50
   670  000B2A  0100               	movlb	0	; () banked
   671  000B2C  6F60               	movwf	_data_horario& (0+255),b
   672                           
   673                           ;main.c: 605: data_horario.horario[1] = '3';
   674  000B2E  0E33               	movlw	51
   675  000B30  0100               	movlb	0	; () banked
   676  000B32  6F61               	movwf	(_data_horario+1)& (0+255),b
   677                           
   678                           ;main.c: 606: data_horario.horario[2] = ':';
   679  000B34  0E3A               	movlw	58
   680  000B36  0100               	movlb	0	; () banked
   681  000B38  6F62               	movwf	(_data_horario+2)& (0+255),b
   682                           
   683                           ;main.c: 607: data_horario.horario[3] = '5';
   684  000B3A  0E35               	movlw	53
   685  000B3C  0100               	movlb	0	; () banked
   686  000B3E  6F63               	movwf	(_data_horario+3)& (0+255),b
   687                           
   688                           ;main.c: 608: data_horario.horario[4] = '9';
   689  000B40  0E39               	movlw	57
   690  000B42  0100               	movlb	0	; () banked
   691  000B44  6F64               	movwf	(_data_horario+4)& (0+255),b
   692                           
   693                           ;main.c: 609: data_horario.horario[5] = ':';
   694  000B46  0E3A               	movlw	58
   695  000B48  0100               	movlb	0	; () banked
   696  000B4A  6F65               	movwf	(_data_horario+5)& (0+255),b
   697                           
   698                           ;main.c: 610: data_horario.horario[6] = '5';
   699  000B4C  0E35               	movlw	53
   700  000B4E  0100               	movlb	0	; () banked
   701  000B50  6F66               	movwf	(_data_horario+6)& (0+255),b
   702                           
   703                           ;main.c: 611: data_horario.horario[7] = '0';
   704  000B52  0E30               	movlw	48
   705  000B54  0100               	movlb	0	; () banked
   706  000B56  6F67               	movwf	(_data_horario+7)& (0+255),b
   707                           
   708                           ;main.c: 612: data_horario.horario[8] = '\0';
   709  000B58  0E00               	movlw	0
   710  000B5A  0100               	movlb	0	; () banked
   711  000B5C  6F68               	movwf	(_data_horario+8)& (0+255),b
   712                           
   713                           ;main.c: 614: data_horario.data[0] = '3';
   714  000B5E  0E33               	movlw	51
   715  000B60  0100               	movlb	0	; () banked
   716  000B62  6F69               	movwf	(_data_horario+9)& (0+255),b
   717                           
   718                           ;main.c: 615: data_horario.data[1] = '1';
   719  000B64  0E31               	movlw	49
   720  000B66  0100               	movlb	0	; () banked
   721  000B68  6F6A               	movwf	(_data_horario+10)& (0+255),b
   722                           
   723                           ;main.c: 616: data_horario.data[2] = '/';
   724  000B6A  0E2F               	movlw	47
   725  000B6C  0100               	movlb	0	; () banked
   726  000B6E  6F6B               	movwf	(_data_horario+11)& (0+255),b
   727                           
   728                           ;main.c: 617: data_horario.data[3] = '1';
   729  000B70  0E31               	movlw	49
   730  000B72  0100               	movlb	0	; () banked
   731  000B74  6F6C               	movwf	(_data_horario+12)& (0+255),b
   732                           
   733                           ;main.c: 618: data_horario.data[4] = '2';
   734  000B76  0E32               	movlw	50
   735  000B78  0100               	movlb	0	; () banked
   736  000B7A  6F6D               	movwf	(_data_horario+13)& (0+255),b
   737                           
   738                           ;main.c: 619: data_horario.data[5] = '/';
   739  000B7C  0E2F               	movlw	47
   740  000B7E  0100               	movlb	0	; () banked
   741  000B80  6F6E               	movwf	(_data_horario+14)& (0+255),b
   742                           
   743                           ;main.c: 620: data_horario.data[6] = '\0';
   744  000B82  0E00               	movlw	0
   745  000B84  0100               	movlb	0	; () banked
   746  000B86  6F6F               	movwf	(_data_horario+15)& (0+255),b
   747                           
   748                           ;main.c: 621: data_horario.ano = 2018;
   749  000B88  0E07               	movlw	7
   750  000B8A  0100               	movlb	0	; () banked
   751  000B8C  6F73               	movwf	(_data_horario+19)& (0+255),b
   752  000B8E  0EE2               	movlw	226
   753  000B90  6F72               	movwf	(_data_horario+18)& (0+255),b
   754                           
   755                           ;main.c: 622: data_horario.dias = 31;
   756  000B92  0E1F               	movlw	31
   757  000B94  0100               	movlb	0	; () banked
   758  000B96  6F70               	movwf	(_data_horario+16)& (0+255),b
   759                           
   760                           ;main.c: 623: data_horario.mes_atual = 11;
   761  000B98  0E0B               	movlw	11
   762  000B9A  0100               	movlb	0	; () banked
   763  000B9C  6F71               	movwf	(_data_horario+17)& (0+255),b
   764                           
   765                           ;main.c: 625: horarioDespertador[0] = '0';
   766  000B9E  0E30               	movlw	48
   767  000BA0  6E3E               	movwf	_horarioDespertador,c
   768                           
   769                           ;main.c: 626: horarioDespertador[1] = '0';
   770  000BA2  0E30               	movlw	48
   771  000BA4  6E3F               	movwf	_horarioDespertador+1,c
   772                           
   773                           ;main.c: 627: horarioDespertador[2] = ':';
   774  000BA6  0E3A               	movlw	58
   775  000BA8  6E40               	movwf	_horarioDespertador+2,c
   776                           
   777                           ;main.c: 628: horarioDespertador[3] = '0';
   778  000BAA  0E30               	movlw	48
   779  000BAC  6E41               	movwf	_horarioDespertador+3,c
   780                           
   781                           ;main.c: 629: horarioDespertador[4] = '1';
   782  000BAE  0E31               	movlw	49
   783  000BB0  6E42               	movwf	_horarioDespertador+4,c
   784                           
   785                           ;main.c: 630: horarioDespertador[5] = '\0';
   786  000BB2  0E00               	movlw	0
   787  000BB4  6E43               	movwf	_horarioDespertador+5,c
   788                           
   789                           ; BSR set to: 0
   790                           ;main.c: 632: T0CONbits.TMR0ON = 0;
   791  000BB6  9ED5               	bcf	4053,7,c	;volatile
   792                           
   793                           ; BSR set to: 0
   794                           ;main.c: 633: INTCONbits.TMR0IE = 1;
   795  000BB8  8AF2               	bsf	intcon,5,c	;volatile
   796                           
   797                           ; BSR set to: 0
   798                           ;main.c: 634: INTCONbits.TMR0IF = 0;
   799  000BBA  94F2               	bcf	intcon,2,c	;volatile
   800                           
   801                           ; BSR set to: 0
   802                           ;main.c: 635: T0CONbits.T08BIT = 0;
   803  000BBC  9CD5               	bcf	4053,6,c	;volatile
   804                           
   805                           ; BSR set to: 0
   806                           ;main.c: 636: T0CONbits.PSA = 0;
   807  000BBE  96D5               	bcf	4053,3,c	;volatile
   808                           
   809                           ; BSR set to: 0
   810                           ;main.c: 637: T0CONbits.T0PS0 = 1;
   811  000BC0  80D5               	bsf	4053,0,c	;volatile
   812                           
   813                           ; BSR set to: 0
   814                           ;main.c: 638: T0CONbits.T0PS1 = 0;
   815  000BC2  92D5               	bcf	4053,1,c	;volatile
   816                           
   817                           ; BSR set to: 0
   818                           ;main.c: 639: T0CONbits.T0PS2 = 1;
   819  000BC4  84D5               	bsf	4053,2,c	;volatile
   820                           
   821                           ; BSR set to: 0
   822                           ;main.c: 640: T0CONbits.T0CS = 0;
   823  000BC6  9AD5               	bcf	4053,5,c	;volatile
   824                           
   825                           ;main.c: 641: TMR0 = 26474;
   826  000BC8  0E67               	movlw	103
   827  000BCA  6ED7               	movwf	4055,c	;volatile
   828  000BCC  0E6A               	movlw	106
   829  000BCE  6ED6               	movwf	4054,c	;volatile
   830                           
   831                           ; BSR set to: 0
   832                           ;main.c: 642: T0CONbits.TMR0ON = 1;
   833  000BD0  8ED5               	bsf	4053,7,c	;volatile
   834                           
   835                           ; BSR set to: 0
   836                           ;main.c: 643: INTCONbits.GIEH = 1;
   837  000BD2  8EF2               	bsf	intcon,7,c	;volatile
   838                           
   839                           ; BSR set to: 0
   840                           ;main.c: 644: INTCONbits.GIEL = 1;
   841  000BD4  8CF2               	bsf	intcon,6,c	;volatile
   842                           
   843                           ; BSR set to: 0
   844                           ;main.c: 647: init_XLCD();
   845  000BD6  EC15  F009         	call	_init_XLCD	;wreg free
   846  000BDA                     l3412:
   847                           
   848                           ;main.c: 652: botao = PORTCbits.RC0;
   849  000BDA  0E00               	movlw	0
   850  000BDC  B082               	btfsc	3970,0,c	;volatile
   851  000BDE  0E01               	movlw	1
   852  000BE0  0100               	movlb	0	; () banked
   853  000BE2  6F81               	movwf	main@botao& (0+255),b
   854                           
   855                           ; BSR set to: 0
   856                           ;main.c: 653: if(botao){
   857  000BE4  0100               	movlb	0	; () banked
   858  000BE6  5181               	movf	main@botao& (0+255),w,b
   859  000BE8  0100               	movlb	0	; () banked
   860  000BEA  B4D8               	btfsc	status,2,c
   861  000BEC  D011               	goto	l3424
   862                           
   863                           ; BSR set to: 0
   864                           ;main.c: 654: Delay10KTCYx(180);
   865  000BEE  0EB4               	movlw	180
   866  000BF0  EC24  F009         	call	_Delay10KTCYx
   867                           
   868                           ;main.c: 656: atualiza_Tela(1);
   869  000BF4  0E01               	movlw	1
   870  000BF6  ECE0  F004         	call	_atualiza_Tela
   871                           
   872                           ;main.c: 658: while(botao){
   873  000BFA  D005               	goto	l3422
   874  000BFC                     l3420:
   875                           
   876                           ;main.c: 659: botao = PORTCbits.RC0;
   877  000BFC  0E00               	movlw	0
   878  000BFE  B082               	btfsc	3970,0,c	;volatile
   879  000C00  0E01               	movlw	1
   880  000C02  0100               	movlb	0	; () banked
   881  000C04  6F81               	movwf	main@botao& (0+255),b
   882  000C06                     l3422:
   883  000C06  0100               	movlb	0	; () banked
   884  000C08  5181               	movf	main@botao& (0+255),w,b
   885  000C0A  0100               	movlb	0	; () banked
   886  000C0C  A4D8               	btfss	status,2,c
   887  000C0E  D7F6               	goto	l3420
   888  000C10                     l3424:
   889                           
   890                           ; BSR set to: 0
   891                           ;main.c: 660: }
   892                           ;main.c: 661: }
   893                           ;main.c: 663: if(flagSegundo){
   894  000C10  502E               	movf	_flagSegundo,w,c
   895  000C12  B4D8               	btfsc	status,2,c
   896  000C14  D007               	goto	l3432
   897                           
   898                           ; BSR set to: 0
   899                           ;main.c: 665: atualiza_Tela(0);
   900  000C16  0E00               	movlw	0
   901  000C18  ECE0  F004         	call	_atualiza_Tela
   902                           
   903                           ;main.c: 666: trata_relogio_data();
   904  000C1C  EC19  F006         	call	_trata_relogio_data	;wreg free
   905                           
   906                           ;main.c: 668: flagSegundo=0;
   907  000C20  0E00               	movlw	0
   908  000C22  6E2E               	movwf	_flagSegundo,c
   909  000C24                     l3432:
   910                           
   911                           ;main.c: 670: }
   912                           ;main.c: 671: if(tela_atual == 2){
   913  000C24  0E02               	movlw	2
   914  000C26  1828               	xorwf	_tela_atual,w,c
   915  000C28  A4D8               	btfss	status,2,c
   916  000C2A  D7D7               	goto	l3412
   917                           
   918                           ;main.c: 672: setaDespertador();
   919  000C2C  EC03  F007         	call	_setaDespertador	;wreg free
   920  000C30  D7D4               	goto	l3412
   921  000C32                     __end_of_main:
   922                           	opt stack 0
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           intcon	equ	0xFF2
   928                           postinc0	equ	0xFEE
   929                           wreg	equ	0xFE8
   930                           postdec1	equ	0xFE5
   931                           fsr1l	equ	0xFE1
   932                           status	equ	0xFD8
   933                           
   934 ;; *************** function _trata_relogio_data *****************
   935 ;; Defined at:
   936 ;;		line 137 in file "main.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   950 ;;      Params:         0       0       0       0       0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0       0       0       0       0
   952 ;;      Temps:          5       0       0       0       0       0       0       0       0
   953 ;;      Totals:         5       0       0       0       0       0       0       0       0
   954 ;;Total ram usage:        5 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    3
   957 ;; This function calls:
   958 ;;		_verificaAnoBissexto
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text1
   965  000C32                     __ptext1:
   966                           	opt stack 0
   967  000C32                     _trata_relogio_data:
   968                           	opt stack 27
   969                           
   970                           ;main.c: 138: data_horario.horario[7]++;
   971                           
   972                           ;incstack = 0
   973  000C32  0100               	movlb	0	; () banked
   974  000C34  2B67               	incf	(_data_horario+7)& (0+255),f,b
   975                           
   976                           ; BSR set to: 0
   977                           ;main.c: 139: if(data_horario.horario[7]>'9'){
   978  000C36  0E39               	movlw	57
   979  000C38  0100               	movlb	0	; () banked
   980  000C3A  6567               	cpfsgt	(_data_horario+7)& (0+255),b
   981  000C3C  0012               	return	
   982                           
   983                           ; BSR set to: 0
   984                           ;main.c: 140: data_horario.horario[7]='0';
   985  000C3E  0E30               	movlw	48
   986  000C40  0100               	movlb	0	; () banked
   987  000C42  6F67               	movwf	(_data_horario+7)& (0+255),b
   988                           
   989                           ; BSR set to: 0
   990                           ;main.c: 141: data_horario.horario[6]++;
   991  000C44  0100               	movlb	0	; () banked
   992  000C46  2B66               	incf	(_data_horario+6)& (0+255),f,b
   993                           
   994                           ; BSR set to: 0
   995                           ;main.c: 142: if(data_horario.horario[6]>'5'){
   996  000C48  0E35               	movlw	53
   997  000C4A  0100               	movlb	0	; () banked
   998  000C4C  6566               	cpfsgt	(_data_horario+6)& (0+255),b
   999  000C4E  0012               	return	
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;main.c: 143: data_horario.horario[6] ='0';
  1003  000C50  0E30               	movlw	48
  1004  000C52  0100               	movlb	0	; () banked
  1005  000C54  6F66               	movwf	(_data_horario+6)& (0+255),b
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;main.c: 144: data_horario.horario[4]++;
  1009  000C56  0100               	movlb	0	; () banked
  1010  000C58  2B64               	incf	(_data_horario+4)& (0+255),f,b
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;main.c: 145: virouDia = 1;
  1014  000C5A  0E01               	movlw	1
  1015  000C5C  6E47               	movwf	_virouDia,c
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;main.c: 146: if(data_horario.horario[4]>'9'){
  1019  000C5E  0E39               	movlw	57
  1020  000C60  0100               	movlb	0	; () banked
  1021  000C62  6564               	cpfsgt	(_data_horario+4)& (0+255),b
  1022  000C64  0012               	return	
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;main.c: 147: data_horario.horario[4] ='0';
  1026  000C66  0E30               	movlw	48
  1027  000C68  0100               	movlb	0	; () banked
  1028  000C6A  6F64               	movwf	(_data_horario+4)& (0+255),b
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;main.c: 148: data_horario.horario[3]++;
  1032  000C6C  0100               	movlb	0	; () banked
  1033  000C6E  2B63               	incf	(_data_horario+3)& (0+255),f,b
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;main.c: 149: if( data_horario.horario[3]>'5'){
  1037  000C70  0E35               	movlw	53
  1038  000C72  0100               	movlb	0	; () banked
  1039  000C74  6563               	cpfsgt	(_data_horario+3)& (0+255),b
  1040  000C76  0012               	return	
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;main.c: 150: data_horario.horario[3] ='0';
  1044  000C78  0E30               	movlw	48
  1045  000C7A  0100               	movlb	0	; () banked
  1046  000C7C  6F63               	movwf	(_data_horario+3)& (0+255),b
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;main.c: 151: data_horario.horario[1]++;
  1050  000C7E  0100               	movlb	0	; () banked
  1051  000C80  2B61               	incf	(_data_horario+1)& (0+255),f,b
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;main.c: 152: if( data_horario.horario[1]> '9'){
  1055  000C82  0E39               	movlw	57
  1056  000C84  0100               	movlb	0	; () banked
  1057  000C86  6561               	cpfsgt	(_data_horario+1)& (0+255),b
  1058  000C88  D005               	goto	l3200
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;main.c: 153: data_horario.horario[1]= '0';
  1062  000C8A  0E30               	movlw	48
  1063  000C8C  0100               	movlb	0	; () banked
  1064  000C8E  6F61               	movwf	(_data_horario+1)& (0+255),b
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;main.c: 154: data_horario.horario[0]++;
  1068  000C90  0100               	movlb	0	; () banked
  1069  000C92  2B60               	incf	_data_horario& (0+255),f,b
  1070  000C94                     l3200:
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;main.c: 155: }
  1074                           ;main.c: 156: if( data_horario.horario[0] == '2' && data_horario.horario[1] > '3'){
  1075  000C94  0E32               	movlw	50
  1076  000C96  0100               	movlb	0	; () banked
  1077  000C98  1960               	xorwf	_data_horario& (0+255),w,b
  1078  000C9A  A4D8               	btfss	status,2,c
  1079  000C9C  0012               	return	
  1080                           
  1081                           ; BSR set to: 0
  1082  000C9E  0E33               	movlw	51
  1083  000CA0  0100               	movlb	0	; () banked
  1084  000CA2  6561               	cpfsgt	(_data_horario+1)& (0+255),b
  1085  000CA4  0012               	return	
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;main.c: 157: data_horario.horario[0] = '0';
  1089  000CA6  0E30               	movlw	48
  1090  000CA8  0100               	movlb	0	; () banked
  1091  000CAA  6F60               	movwf	_data_horario& (0+255),b
  1092                           
  1093                           ;main.c: 158: data_horario.horario[1] = '0';
  1094  000CAC  0E30               	movlw	48
  1095  000CAE  0100               	movlb	0	; () banked
  1096  000CB0  6F61               	movwf	(_data_horario+1)& (0+255),b
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;main.c: 159: data_horario.data[1]++;
  1100  000CB2  0100               	movlb	0	; () banked
  1101  000CB4  2B6A               	incf	(_data_horario+10)& (0+255),f,b
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;main.c: 160: data_horario.dias++;
  1105  000CB6  0100               	movlb	0	; () banked
  1106  000CB8  2B70               	incf	(_data_horario+16)& (0+255),f,b
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;main.c: 161: if(data_horario.data[1]>'9'){
  1110  000CBA  0E39               	movlw	57
  1111  000CBC  0100               	movlb	0	; () banked
  1112  000CBE  656A               	cpfsgt	(_data_horario+10)& (0+255),b
  1113  000CC0  D005               	goto	l3216
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;main.c: 162: data_horario.data[1]=0;
  1117  000CC2  0E00               	movlw	0
  1118  000CC4  0100               	movlb	0	; () banked
  1119  000CC6  6F6A               	movwf	(_data_horario+10)& (0+255),b
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;main.c: 163: data_horario.data[0]++;
  1123  000CC8  0100               	movlb	0	; () banked
  1124  000CCA  2B69               	incf	(_data_horario+9)& (0+255),f,b
  1125  000CCC                     l3216:
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;main.c: 164: }
  1129                           ;main.c: 165: if(data_horario.dias > dias_mes[data_horario.mes_atual-1]){
  1130  000CCC  0EFF               	movlw	255
  1131  000CCE  6E1C               	movwf	??_trata_relogio_data& (0+255),c
  1132  000CD0  0EFF               	movlw	255
  1133  000CD2  6E1D               	movwf	(??_trata_relogio_data+1)& (0+255),c
  1134  000CD4  0100               	movlb	0	; () banked
  1135  000CD6  5171               	movf	(_data_horario+17)& (0+255),w,b
  1136  000CD8  6E1E               	movwf	(??_trata_relogio_data+2)& (0+255),c
  1137  000CDA  6A1F               	clrf	(??_trata_relogio_data+3)& (0+255),c
  1138  000CDC  501C               	movf	??_trata_relogio_data,w,c
  1139  000CDE  261E               	addwf	??_trata_relogio_data+2,f,c
  1140  000CE0  501D               	movf	??_trata_relogio_data+1,w,c
  1141  000CE2  221F               	addwfc	??_trata_relogio_data+3,f,c
  1142  000CE4  0E82               	movlw	low _dias_mes
  1143  000CE6  241E               	addwf	??_trata_relogio_data+2,w,c
  1144  000CE8  6ED9               	movwf	fsr2l,c
  1145  000CEA  0E00               	movlw	high _dias_mes
  1146  000CEC  201F               	addwfc	??_trata_relogio_data+3,w,c
  1147  000CEE  6EDA               	movwf	fsr2h,c
  1148  000CF0  0100               	movlb	0	; () banked
  1149  000CF2  5170               	movf	(_data_horario+16)& (0+255),w,b
  1150  000CF4  5CDE               	subwf	postinc2,w,c
  1151  000CF6  B0D8               	btfsc	status,0,c
  1152  000CF8  0012               	return	
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;main.c: 166: data_horario.data[1]= '1';
  1156  000CFA  0E31               	movlw	49
  1157  000CFC  0100               	movlb	0	; () banked
  1158  000CFE  6F6A               	movwf	(_data_horario+10)& (0+255),b
  1159                           
  1160                           ;main.c: 167: data_horario.data[0]='0';
  1161  000D00  0E30               	movlw	48
  1162  000D02  0100               	movlb	0	; () banked
  1163  000D04  6F69               	movwf	(_data_horario+9)& (0+255),b
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;main.c: 168: data_horario.mes_atual++;
  1167  000D06  0100               	movlb	0	; () banked
  1168  000D08  2B71               	incf	(_data_horario+17)& (0+255),f,b
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;main.c: 169: data_horario.data[4]++;
  1172  000D0A  0100               	movlb	0	; () banked
  1173  000D0C  2B6D               	incf	(_data_horario+13)& (0+255),f,b
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;main.c: 170: if( data_horario.data[4] >'9'){
  1177  000D0E  0E39               	movlw	57
  1178  000D10  0100               	movlb	0	; () banked
  1179  000D12  656D               	cpfsgt	(_data_horario+13)& (0+255),b
  1180  000D14  D005               	goto	l3230
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;main.c: 171: data_horario.data[4] ='0';
  1184  000D16  0E30               	movlw	48
  1185  000D18  0100               	movlb	0	; () banked
  1186  000D1A  6F6D               	movwf	(_data_horario+13)& (0+255),b
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;main.c: 172: data_horario.data[3]++;
  1190  000D1C  0100               	movlb	0	; () banked
  1191  000D1E  2B6C               	incf	(_data_horario+12)& (0+255),f,b
  1192  000D20                     l3230:
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;main.c: 173: }
  1196                           ;main.c: 174: if(data_horario.mes_atual >11){
  1197  000D20  0E0B               	movlw	11
  1198  000D22  0100               	movlb	0	; () banked
  1199  000D24  6571               	cpfsgt	(_data_horario+17)& (0+255),b
  1200  000D26  0012               	return	
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 175: data_horario.data[4] ='1';
  1204  000D28  0E31               	movlw	49
  1205  000D2A  0100               	movlb	0	; () banked
  1206  000D2C  6F6D               	movwf	(_data_horario+13)& (0+255),b
  1207                           
  1208                           ;main.c: 176: data_horario.data[3]='0';
  1209  000D2E  0E30               	movlw	48
  1210  000D30  0100               	movlb	0	; () banked
  1211  000D32  6F6C               	movwf	(_data_horario+12)& (0+255),b
  1212                           
  1213                           ;main.c: 177: data_horario.mes_atual =1;
  1214  000D34  0E01               	movlw	1
  1215  000D36  0100               	movlb	0	; () banked
  1216  000D38  6F71               	movwf	(_data_horario+17)& (0+255),b
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;main.c: 178: data_horario.ano++;
  1220  000D3A  0100               	movlb	0	; () banked
  1221  000D3C  4B72               	infsnz	(_data_horario+18)& (0+255),f,b
  1222  000D3E  2B73               	incf	(_data_horario+19)& (0+255),f,b
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;main.c: 179: if(verificaAnoBissexto(data_horario.ano)){
  1226  000D40  C072  F018         	movff	_data_horario+18,verificaAnoBissexto@ano
  1227  000D44  C073  F019         	movff	_data_horario+19,verificaAnoBissexto@ano+1
  1228  000D48  ECEC  F007         	call	_verificaAnoBissexto	;wreg free
  1229  000D4C  0900               	iorlw	0
  1230  000D4E  B4D8               	btfsc	status,2,c
  1231  000D50  D004               	goto	l3240
  1232                           
  1233                           ;main.c: 180: dias_mes[1] = 29;
  1234  000D52  0E1D               	movlw	29
  1235  000D54  0100               	movlb	0	; () banked
  1236  000D56  6F83               	movwf	(_dias_mes+1)& (0+255),b
  1237                           
  1238                           ;main.c: 181: }
  1239  000D58  0012               	return	
  1240  000D5A                     l3240:
  1241                           
  1242                           ;main.c: 182: else
  1243                           ;main.c: 183: {
  1244                           ;main.c: 184: dias_mes[1] = 28;
  1245  000D5A  0E1C               	movlw	28
  1246  000D5C  0100               	movlb	0	; () banked
  1247  000D5E  6F83               	movwf	(_dias_mes+1)& (0+255),b
  1248                           
  1249                           ; BSR set to: 0
  1250                           
  1251                           ; BSR set to: 0
  1252                           
  1253                           ; BSR set to: 0
  1254                           
  1255                           ; BSR set to: 0
  1256                           
  1257                           ; BSR set to: 0
  1258                           
  1259                           ; BSR set to: 0
  1260                           
  1261                           ; BSR set to: 0
  1262  000D60  0012               	return	
  1263  000D62                     __end_of_trata_relogio_data:
  1264                           	opt stack 0
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           intcon	equ	0xFF2
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           postinc2	equ	0xFDE
  1275                           fsr2h	equ	0xFDA
  1276                           fsr2l	equ	0xFD9
  1277                           status	equ	0xFD8
  1278                           
  1279 ;; *************** function _verificaAnoBissexto *****************
  1280 ;; Defined at:
  1281 ;;		line 109 in file "main.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  ano             2   23[COMRAM] int 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      unsigned char 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1295 ;;      Params:         2       0       0       0       0       0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1297 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1298 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1299 ;;Total ram usage:        4 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    2
  1302 ;; This function calls:
  1303 ;;		___awmod
  1304 ;; This function is called by:
  1305 ;;		_trata_relogio_data
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text2
  1310  000FD8                     __ptext2:
  1311                           	opt stack 0
  1312  000FD8                     _verificaAnoBissexto:
  1313                           	opt stack 27
  1314                           
  1315                           ;main.c: 110: if(ano % 4 == 0 ){
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;incstack = 0
  1319  000FD8  0E03               	movlw	3
  1320  000FDA  1418               	andwf	verificaAnoBissexto@ano,w,c
  1321  000FDC  6E1A               	movwf	??_verificaAnoBissexto& (0+255),c
  1322  000FDE  0E00               	movlw	0
  1323  000FE0  1419               	andwf	verificaAnoBissexto@ano+1,w,c
  1324  000FE2  6E1B               	movwf	(??_verificaAnoBissexto+1)& (0+255),c
  1325  000FE4  501A               	movf	??_verificaAnoBissexto,w,c
  1326  000FE6  101B               	iorwf	??_verificaAnoBissexto+1,w,c
  1327  000FE8  A4D8               	btfss	status,2,c
  1328  000FEA  D022               	goto	l3058
  1329                           
  1330                           ;main.c: 111: if( ano % 100 != 0){
  1331  000FEC  C018  F012         	movff	verificaAnoBissexto@ano,___awmod@dividend
  1332  000FF0  C019  F013         	movff	verificaAnoBissexto@ano+1,___awmod@dividend+1
  1333  000FF4  0E00               	movlw	0
  1334  000FF6  6E15               	movwf	___awmod@divisor+1,c
  1335  000FF8  0E64               	movlw	100
  1336  000FFA  6E14               	movwf	___awmod@divisor,c
  1337  000FFC  EC52  F007         	call	___awmod	;wreg free
  1338  001000  5012               	movf	?___awmod,w,c
  1339  001002  1013               	iorwf	?___awmod+1,w,c
  1340  001004  B4D8               	btfsc	status,2,c
  1341  001006  D002               	goto	l3046
  1342                           
  1343                           ;main.c: 112: return 1;
  1344  001008  0E01               	movlw	1
  1345                           
  1346                           ;main.c: 113: }
  1347  00100A  0012               	return	
  1348  00100C                     l3046:
  1349                           
  1350                           ;main.c: 114: else
  1351                           ;main.c: 115: {
  1352                           ;main.c: 116: if( ano % 400 != 0){
  1353  00100C  C018  F012         	movff	verificaAnoBissexto@ano,___awmod@dividend
  1354  001010  C019  F013         	movff	verificaAnoBissexto@ano+1,___awmod@dividend+1
  1355  001014  0E01               	movlw	1
  1356  001016  6E15               	movwf	___awmod@divisor+1,c
  1357  001018  0E90               	movlw	144
  1358  00101A  6E14               	movwf	___awmod@divisor,c
  1359  00101C  EC52  F007         	call	___awmod	;wreg free
  1360  001020  5012               	movf	?___awmod,w,c
  1361  001022  1013               	iorwf	?___awmod+1,w,c
  1362  001024  B4D8               	btfsc	status,2,c
  1363  001026  D002               	goto	l3054
  1364                           
  1365                           ;main.c: 117: return 0;
  1366  001028  0E00               	movlw	0
  1367                           
  1368                           ;main.c: 118: }
  1369  00102A  0012               	return	
  1370  00102C                     l3054:
  1371                           
  1372                           ;main.c: 119: else{
  1373                           ;main.c: 120: return 1;
  1374  00102C  0E01               	movlw	1
  1375                           
  1376                           ;main.c: 121: }
  1377                           ;main.c: 122: }
  1378                           ;main.c: 123: }
  1379  00102E  0012               	return	
  1380  001030                     l3058:
  1381                           
  1382                           ;main.c: 124: else{
  1383                           ;main.c: 125: return 0;
  1384  001030  0E00               	movlw	0
  1385  001032  0012               	return	
  1386  001034                     __end_of_verificaAnoBissexto:
  1387                           	opt stack 0
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           intcon	equ	0xFF2
  1393                           postinc0	equ	0xFEE
  1394                           wreg	equ	0xFE8
  1395                           postdec1	equ	0xFE5
  1396                           fsr1l	equ	0xFE1
  1397                           postinc2	equ	0xFDE
  1398                           fsr2h	equ	0xFDA
  1399                           fsr2l	equ	0xFD9
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function ___awmod *****************
  1403 ;; Defined at:
  1404 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  dividend        2   17[COMRAM] int 
  1407 ;;  divisor         2   19[COMRAM] int 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  sign            1   22[COMRAM] unsigned char 
  1410 ;;  counter         1   21[COMRAM] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  2   17[COMRAM] int 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1420 ;;      Params:         4       0       0       0       0       0       0       0       0
  1421 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1423 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1424 ;;Total ram usage:        6 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_verificaAnoBissexto
  1431 ;;		_trataComando
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text3
  1436  000EA4                     __ptext3:
  1437                           	opt stack 0
  1438  000EA4                     ___awmod:
  1439                           	opt stack 27
  1440                           
  1441                           ;incstack = 0
  1442  000EA4  0E00               	movlw	0
  1443  000EA6  6E17               	movwf	___awmod@sign,c
  1444  000EA8  AE13               	btfss	___awmod@dividend+1,7,c
  1445  000EAA  D006               	goto	l3008
  1446  000EAC  6C12               	negf	___awmod@dividend,c
  1447  000EAE  1E13               	comf	___awmod@dividend+1,f,c
  1448  000EB0  B0D8               	btfsc	status,0,c
  1449  000EB2  2A13               	incf	___awmod@dividend+1,f,c
  1450  000EB4  0E01               	movlw	1
  1451  000EB6  6E17               	movwf	___awmod@sign,c
  1452  000EB8                     l3008:
  1453  000EB8  AE15               	btfss	___awmod@divisor+1,7,c
  1454  000EBA  D004               	goto	l3012
  1455  000EBC  6C14               	negf	___awmod@divisor,c
  1456  000EBE  1E15               	comf	___awmod@divisor+1,f,c
  1457  000EC0  B0D8               	btfsc	status,0,c
  1458  000EC2  2A15               	incf	___awmod@divisor+1,f,c
  1459  000EC4                     l3012:
  1460  000EC4  5014               	movf	___awmod@divisor,w,c
  1461  000EC6  1015               	iorwf	___awmod@divisor+1,w,c
  1462  000EC8  B4D8               	btfsc	status,2,c
  1463  000ECA  D018               	goto	l3028
  1464  000ECC  0E01               	movlw	1
  1465  000ECE  6E16               	movwf	___awmod@counter,c
  1466  000ED0  D004               	goto	l3018
  1467  000ED2                     l3016:
  1468  000ED2  90D8               	bcf	status,0,c
  1469  000ED4  3614               	rlcf	___awmod@divisor,f,c
  1470  000ED6  3615               	rlcf	___awmod@divisor+1,f,c
  1471  000ED8  2A16               	incf	___awmod@counter,f,c
  1472  000EDA                     l3018:
  1473  000EDA  AE15               	btfss	___awmod@divisor+1,7,c
  1474  000EDC  D7FA               	goto	l3016
  1475  000EDE                     l3020:
  1476  000EDE  5014               	movf	___awmod@divisor,w,c
  1477  000EE0  5C12               	subwf	___awmod@dividend,w,c
  1478  000EE2  5015               	movf	___awmod@divisor+1,w,c
  1479  000EE4  5813               	subwfb	___awmod@dividend+1,w,c
  1480  000EE6  A0D8               	btfss	status,0,c
  1481  000EE8  D004               	goto	l3024
  1482  000EEA  5014               	movf	___awmod@divisor,w,c
  1483  000EEC  5E12               	subwf	___awmod@dividend,f,c
  1484  000EEE  5015               	movf	___awmod@divisor+1,w,c
  1485  000EF0  5A13               	subwfb	___awmod@dividend+1,f,c
  1486  000EF2                     l3024:
  1487  000EF2  90D8               	bcf	status,0,c
  1488  000EF4  3215               	rrcf	___awmod@divisor+1,f,c
  1489  000EF6  3214               	rrcf	___awmod@divisor,f,c
  1490  000EF8  2E16               	decfsz	___awmod@counter,f,c
  1491  000EFA  D7F1               	goto	l3020
  1492  000EFC                     l3028:
  1493  000EFC  5017               	movf	___awmod@sign,w,c
  1494  000EFE  B4D8               	btfsc	status,2,c
  1495  000F00  D004               	goto	l3032
  1496  000F02  6C12               	negf	___awmod@dividend,c
  1497  000F04  1E13               	comf	___awmod@dividend+1,f,c
  1498  000F06  B0D8               	btfsc	status,0,c
  1499  000F08  2A13               	incf	___awmod@dividend+1,f,c
  1500  000F0A                     l3032:
  1501  000F0A  C012  F012         	movff	___awmod@dividend,?___awmod
  1502  000F0E  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
  1503  000F12  0012               	return	
  1504  000F14                     __end_of___awmod:
  1505                           	opt stack 0
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           intcon	equ	0xFF2
  1511                           postinc0	equ	0xFEE
  1512                           wreg	equ	0xFE8
  1513                           postdec1	equ	0xFE5
  1514                           fsr1l	equ	0xFE1
  1515                           postinc2	equ	0xFDE
  1516                           fsr2h	equ	0xFDA
  1517                           fsr2l	equ	0xFD9
  1518                           status	equ	0xFD8
  1519                           
  1520 ;; *************** function _setaDespertador *****************
  1521 ;; Defined at:
  1522 ;;		line 264 in file "main.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1536 ;;      Params:         0       0       0       0       0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1539 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1540 ;;Total ram usage:        0 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    6
  1543 ;; This function calls:
  1544 ;;		_Delay10KTCYx
  1545 ;;		_atualiza_Tela
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text4
  1552  000E06                     __ptext4:
  1553                           	opt stack 0
  1554  000E06                     _setaDespertador:
  1555                           	opt stack 24
  1556                           
  1557                           ;main.c: 265: botaoHora = PORTCbits.RC1;
  1558                           
  1559                           ;incstack = 0
  1560  000E06  0E00               	movlw	0
  1561  000E08  B282               	btfsc	3970,1,c	;volatile
  1562  000E0A  0E01               	movlw	1
  1563  000E0C  6E2B               	movwf	_botaoHora,c
  1564                           
  1565                           ;main.c: 266: botaoMin = PORTCbits.RC2;
  1566  000E0E  0E00               	movlw	0
  1567  000E10  B482               	btfsc	3970,2,c	;volatile
  1568  000E12  0E01               	movlw	1
  1569  000E14  6E2A               	movwf	_botaoMin,c
  1570                           
  1571                           ;main.c: 267: if(botaoHora){
  1572  000E16  502B               	movf	_botaoHora,w,c
  1573  000E18  B4D8               	btfsc	status,2,c
  1574  000E1A  D020               	goto	l3274
  1575                           
  1576                           ;main.c: 268: Delay10KTCYx(180);
  1577  000E1C  0EB4               	movlw	180
  1578  000E1E  EC24  F009         	call	_Delay10KTCYx
  1579                           
  1580                           ;main.c: 270: horarioDespertador[1]++;
  1581  000E22  2A3F               	incf	_horarioDespertador+1,f,c
  1582                           
  1583                           ;main.c: 271: if(horarioDespertador[1]>'9'){
  1584  000E24  0E39               	movlw	57
  1585  000E26  643F               	cpfsgt	_horarioDespertador+1,c
  1586  000E28  D003               	goto	l3262
  1587                           
  1588                           ;main.c: 272: horarioDespertador[1] ='0';
  1589  000E2A  0E30               	movlw	48
  1590  000E2C  6E3F               	movwf	_horarioDespertador+1,c
  1591                           
  1592                           ;main.c: 273: horarioDespertador[0]++;
  1593  000E2E  2A3E               	incf	_horarioDespertador,f,c
  1594  000E30                     l3262:
  1595                           
  1596                           ;main.c: 274: }
  1597                           ;main.c: 275: if(horarioDespertador[0] == '2' && horarioDespertador[1] >'3'){
  1598  000E30  0E32               	movlw	50
  1599  000E32  183E               	xorwf	_horarioDespertador,w,c
  1600  000E34  A4D8               	btfss	status,2,c
  1601  000E36  D007               	goto	l3268
  1602  000E38  0E33               	movlw	51
  1603  000E3A  643F               	cpfsgt	_horarioDespertador+1,c
  1604  000E3C  D004               	goto	l3268
  1605                           
  1606                           ;main.c: 276: horarioDespertador[1] ='0';
  1607  000E3E  0E30               	movlw	48
  1608  000E40  6E3F               	movwf	_horarioDespertador+1,c
  1609                           
  1610                           ;main.c: 277: horarioDespertador[0] ='0';
  1611  000E42  0E30               	movlw	48
  1612  000E44  6E3E               	movwf	_horarioDespertador,c
  1613  000E46                     l3268:
  1614                           
  1615                           ;main.c: 278: }
  1616                           ;main.c: 280: atualiza_Tela(0);
  1617  000E46  0E00               	movlw	0
  1618  000E48  ECE0  F004         	call	_atualiza_Tela
  1619                           
  1620                           ;main.c: 281: while(botaoHora){
  1621  000E4C  D004               	goto	l3272
  1622  000E4E                     l3270:
  1623                           
  1624                           ;main.c: 282: botaoHora = PORTCbits.RC1;
  1625  000E4E  0E00               	movlw	0
  1626  000E50  B282               	btfsc	3970,1,c	;volatile
  1627  000E52  0E01               	movlw	1
  1628  000E54  6E2B               	movwf	_botaoHora,c
  1629  000E56                     l3272:
  1630  000E56  502B               	movf	_botaoHora,w,c
  1631  000E58  A4D8               	btfss	status,2,c
  1632  000E5A  D7F9               	goto	l3270
  1633  000E5C                     l3274:
  1634                           
  1635                           ;main.c: 283: }
  1636                           ;main.c: 284: }
  1637                           ;main.c: 286: if(botaoMin){
  1638  000E5C  502A               	movf	_botaoMin,w,c
  1639  000E5E  B4D8               	btfsc	status,2,c
  1640  000E60  0012               	return	
  1641                           
  1642                           ;main.c: 287: Delay10KTCYx(180);
  1643  000E62  0EB4               	movlw	180
  1644  000E64  EC24  F009         	call	_Delay10KTCYx
  1645                           
  1646                           ;main.c: 289: horarioDespertador[4]++;
  1647  000E68  2A42               	incf	_horarioDespertador+4,f,c
  1648                           
  1649                           ;main.c: 290: if(horarioDespertador[4]>'9'){
  1650  000E6A  0E39               	movlw	57
  1651  000E6C  6442               	cpfsgt	_horarioDespertador+4,c
  1652  000E6E  D003               	goto	l3286
  1653                           
  1654                           ;main.c: 291: horarioDespertador[4]='0';
  1655  000E70  0E30               	movlw	48
  1656  000E72  6E42               	movwf	_horarioDespertador+4,c
  1657                           
  1658                           ;main.c: 292: horarioDespertador[3]++;
  1659  000E74  2A41               	incf	_horarioDespertador+3,f,c
  1660  000E76                     l3286:
  1661                           
  1662                           ;main.c: 294: }
  1663                           ;main.c: 295: if(horarioDespertador[3] == '5' && horarioDespertador[4] > '9'){
  1664  000E76  0E35               	movlw	53
  1665  000E78  1841               	xorwf	_horarioDespertador+3,w,c
  1666  000E7A  A4D8               	btfss	status,2,c
  1667  000E7C  D007               	goto	l3292
  1668  000E7E  0E39               	movlw	57
  1669  000E80  6442               	cpfsgt	_horarioDespertador+4,c
  1670  000E82  D004               	goto	l3292
  1671                           
  1672                           ;main.c: 296: horarioDespertador[4] ='0';
  1673  000E84  0E30               	movlw	48
  1674  000E86  6E42               	movwf	_horarioDespertador+4,c
  1675                           
  1676                           ;main.c: 297: horarioDespertador[3] ='0';
  1677  000E88  0E30               	movlw	48
  1678  000E8A  6E41               	movwf	_horarioDespertador+3,c
  1679  000E8C                     l3292:
  1680                           
  1681                           ;main.c: 298: }
  1682                           ;main.c: 299: atualiza_Tela(0);
  1683  000E8C  0E00               	movlw	0
  1684  000E8E  ECE0  F004         	call	_atualiza_Tela
  1685                           
  1686                           ;main.c: 300: while(botaoMin){
  1687  000E92  D004               	goto	l3296
  1688  000E94                     l3294:
  1689                           
  1690                           ;main.c: 301: botaoMin = PORTCbits.RC2;
  1691  000E94  0E00               	movlw	0
  1692  000E96  B482               	btfsc	3970,2,c	;volatile
  1693  000E98  0E01               	movlw	1
  1694  000E9A  6E2A               	movwf	_botaoMin,c
  1695  000E9C                     l3296:
  1696  000E9C  502A               	movf	_botaoMin,w,c
  1697  000E9E  B4D8               	btfsc	status,2,c
  1698  000EA0  0012               	return	
  1699  000EA2  D7F8               	goto	l3294
  1700  000EA4                     __end_of_setaDespertador:
  1701                           	opt stack 0
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           intcon	equ	0xFF2
  1707                           postinc0	equ	0xFEE
  1708                           wreg	equ	0xFE8
  1709                           postdec1	equ	0xFE5
  1710                           fsr1l	equ	0xFE1
  1711                           postinc2	equ	0xFDE
  1712                           fsr2h	equ	0xFDA
  1713                           fsr2l	equ	0xFD9
  1714                           status	equ	0xFD8
  1715                           
  1716 ;; *************** function _atualiza_Tela *****************
  1717 ;; Defined at:
  1718 ;;		line 216 in file "main.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  troca_ou_nao    1    wreg     unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  troca_ou_nao    1   38[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1732 ;;      Params:         0       0       0       0       0       0       0       0       0
  1733 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1735 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1736 ;;Total ram usage:        1 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    5
  1739 ;; This function calls:
  1740 ;;		_SetDDRamAddr
  1741 ;;		_acionaDespertador
  1742 ;;		_converteAnoString
  1743 ;;		_putrsXLCD
  1744 ;; This function is called by:
  1745 ;;		_setaDespertador
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text5
  1751  0009C0                     __ptext5:
  1752                           	opt stack 0
  1753  0009C0                     _atualiza_Tela:
  1754                           	opt stack 24
  1755                           
  1756                           ;incstack = 0
  1757                           ;atualiza_Tela@troca_ou_nao stored from wreg
  1758  0009C0  6E27               	movwf	atualiza_Tela@troca_ou_nao,c
  1759                           
  1760                           ;main.c: 218: if(troca_ou_nao == 1){
  1761  0009C2  0427               	decf	atualiza_Tela@troca_ou_nao,w,c
  1762  0009C4  A4D8               	btfss	status,2,c
  1763  0009C6  D091               	goto	l3164
  1764                           
  1765                           ;main.c: 219: tela_atual++;
  1766  0009C8  2A28               	incf	_tela_atual,f,c
  1767                           
  1768                           ;main.c: 220: if(tela_atual >2){
  1769  0009CA  0E02               	movlw	2
  1770  0009CC  6428               	cpfsgt	_tela_atual,c
  1771  0009CE  D08D               	goto	l3164
  1772                           
  1773                           ;main.c: 221: tela_atual = 0;
  1774  0009D0  0E00               	movlw	0
  1775  0009D2  6E28               	movwf	_tela_atual,c
  1776                           
  1777                           ;main.c: 222: }
  1778                           ;main.c: 223: }
  1779                           ;main.c: 224: switch(tela_atual){
  1780  0009D4  D08A               	goto	l3164
  1781  0009D6                     l3124:
  1782                           
  1783                           ;main.c: 226: SetDDRamAddr(0x00);
  1784  0009D6  0E00               	movlw	0
  1785  0009D8  EC43  F008         	call	_SetDDRamAddr
  1786                           
  1787                           ;main.c: 227: putrsXLCD("Despertador     ");
  1788  0009DC  0E1C               	movlw	low STR_2
  1789  0009DE  0100               	movlb	0	; () banked
  1790  0009E0  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1791  0009E2  0E08               	movlw	high STR_2
  1792  0009E4  0100               	movlb	0	; () banked
  1793  0009E6  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1794  0009E8  ECBD  F007         	call	_putrsXLCD	;wreg free
  1795                           
  1796                           ;main.c: 228: SetDDRamAddr(0x40);
  1797  0009EC  0E40               	movlw	64
  1798  0009EE  EC43  F008         	call	_SetDDRamAddr
  1799                           
  1800                           ;main.c: 229: putrsXLCD("Versao: ");
  1801  0009F2  0E2D               	movlw	low STR_3
  1802  0009F4  0100               	movlb	0	; () banked
  1803  0009F6  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1804  0009F8  0E08               	movlw	high STR_3
  1805  0009FA  0100               	movlb	0	; () banked
  1806  0009FC  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1807  0009FE  ECBD  F007         	call	_putrsXLCD	;wreg free
  1808                           
  1809                           ;main.c: 230: putrsXLCD(versao);
  1810  000A02  0E48               	movlw	low _versao
  1811  000A04  0100               	movlb	0	; () banked
  1812  000A06  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1813  000A08  0E00               	movlw	high _versao
  1814  000A0A  0100               	movlb	0	; () banked
  1815  000A0C  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1816  000A0E  ECBD  F007         	call	_putrsXLCD	;wreg free
  1817                           
  1818                           ;main.c: 232: break;
  1819  000A12  0012               	return	
  1820  000A14                     l3130:
  1821                           
  1822                           ;main.c: 234: SetDDRamAddr(0x00);
  1823  000A14  0E00               	movlw	0
  1824  000A16  EC43  F008         	call	_SetDDRamAddr
  1825                           
  1826                           ;main.c: 235: putrsXLCD("Hora: ");
  1827  000A1A  0E3D               	movlw	low STR_4
  1828  000A1C  0100               	movlb	0	; () banked
  1829  000A1E  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1830  000A20  0E08               	movlw	high STR_4
  1831  000A22  0100               	movlb	0	; () banked
  1832  000A24  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1833  000A26  ECBD  F007         	call	_putrsXLCD	;wreg free
  1834                           
  1835                           ;main.c: 236: putrsXLCD(data_horario.horario);
  1836  000A2A  0E60               	movlw	low _data_horario
  1837  000A2C  0100               	movlb	0	; () banked
  1838  000A2E  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1839  000A30  0E00               	movlw	high _data_horario
  1840  000A32  0100               	movlb	0	; () banked
  1841  000A34  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1842  000A36  ECBD  F007         	call	_putrsXLCD	;wreg free
  1843                           
  1844                           ;main.c: 237: SetDDRamAddr(0x40);
  1845  000A3A  0E40               	movlw	64
  1846  000A3C  EC43  F008         	call	_SetDDRamAddr
  1847                           
  1848                           ;main.c: 238: putrsXLCD("Data: ");
  1849  000A40  0E44               	movlw	low STR_5
  1850  000A42  0100               	movlb	0	; () banked
  1851  000A44  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1852  000A46  0E08               	movlw	high STR_5
  1853  000A48  0100               	movlb	0	; () banked
  1854  000A4A  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1855  000A4C  ECBD  F007         	call	_putrsXLCD	;wreg free
  1856                           
  1857                           ;main.c: 239: putrsXLCD(data_horario.data);
  1858  000A50  0E69               	movlw	low (_data_horario+9)
  1859  000A52  0100               	movlb	0	; () banked
  1860  000A54  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1861  000A56  0E00               	movlw	high (_data_horario+9)
  1862  000A58  0100               	movlb	0	; () banked
  1863  000A5A  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1864  000A5C  ECBD  F007         	call	_putrsXLCD	;wreg free
  1865                           
  1866                           ;main.c: 240: putrsXLCD(converteAnoString(data_horario.ano));
  1867  000A60  C072  F025         	movff	_data_horario+18,converteAnoString@ano
  1868  000A64  C073  F026         	movff	_data_horario+19,converteAnoString@ano+1
  1869  000A68  EC02  F009         	call	_converteAnoString	;wreg free
  1870  000A6C  C025  F07F         	movff	?_converteAnoString,putrsXLCD@buffer
  1871  000A70  C026  F080         	movff	?_converteAnoString+1,putrsXLCD@buffer+1
  1872  000A74  ECBD  F007         	call	_putrsXLCD	;wreg free
  1873                           
  1874                           ;main.c: 241: acionaDespertador();
  1875  000A78  ECE8  F008         	call	_acionaDespertador	;wreg free
  1876                           
  1877                           ;main.c: 242: if(flagDespertadorLigado){
  1878  000A7C  502C               	movf	_flagDespertadorLigado,w,c
  1879  000A7E  B4D8               	btfsc	status,2,c
  1880  000A80  0012               	return	
  1881                           
  1882                           ;main.c: 243: PORTDbits.RD0 = 1;
  1883  000A82  8083               	bsf	3971,0,c	;volatile
  1884                           
  1885                           ;main.c: 244: tempoDespertador++;
  1886  000A84  2A29               	incf	_tempoDespertador,f,c
  1887                           
  1888                           ;main.c: 245: if(tempoDespertador > 5){
  1889  000A86  0E05               	movlw	5
  1890  000A88  6429               	cpfsgt	_tempoDespertador,c
  1891  000A8A  0012               	return	
  1892                           
  1893                           ;main.c: 246: tempoDespertador = 0;
  1894  000A8C  0E00               	movlw	0
  1895  000A8E  6E29               	movwf	_tempoDespertador,c
  1896                           
  1897                           ;main.c: 247: flagDespertadorLigado =0;
  1898  000A90  0E00               	movlw	0
  1899  000A92  6E2C               	movwf	_flagDespertadorLigado,c
  1900                           
  1901                           ;main.c: 248: PORTDbits.RD0 = 0;
  1902  000A94  9083               	bcf	3971,0,c	;volatile
  1903                           
  1904                           ;main.c: 249: virouDia = 0;
  1905  000A96  0E00               	movlw	0
  1906  000A98  6E47               	movwf	_virouDia,c
  1907                           
  1908                           ;main.c: 250: }
  1909                           ;main.c: 251: }
  1910                           ;main.c: 252: break;
  1911  000A9A  0012               	return	
  1912  000A9C                     l3156:
  1913                           
  1914                           ;main.c: 254: SetDDRamAddr(0x00);
  1915  000A9C  0E00               	movlw	0
  1916  000A9E  EC43  F008         	call	_SetDDRamAddr
  1917                           
  1918                           ;main.c: 255: putrsXLCD("     ALARME     ");
  1919  000AA2  0E0B               	movlw	low STR_6
  1920  000AA4  0100               	movlb	0	; () banked
  1921  000AA6  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1922  000AA8  0E08               	movlw	high STR_6
  1923  000AAA  0100               	movlb	0	; () banked
  1924  000AAC  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1925  000AAE  ECBD  F007         	call	_putrsXLCD	;wreg free
  1926                           
  1927                           ;main.c: 256: SetDDRamAddr(0x40);
  1928  000AB2  0E40               	movlw	64
  1929  000AB4  EC43  F008         	call	_SetDDRamAddr
  1930                           
  1931                           ;main.c: 257: putrsXLCD("     ");
  1932  000AB8  0E37               	movlw	low (STR_8+1)
  1933  000ABA  0100               	movlb	0	; () banked
  1934  000ABC  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1935  000ABE  0E08               	movlw	high (STR_8+1)
  1936  000AC0  0100               	movlb	0	; () banked
  1937  000AC2  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1938  000AC4  ECBD  F007         	call	_putrsXLCD	;wreg free
  1939                           
  1940                           ;main.c: 258: putrsXLCD(horarioDespertador);
  1941  000AC8  0E3E               	movlw	low _horarioDespertador
  1942  000ACA  0100               	movlb	0	; () banked
  1943  000ACC  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1944  000ACE  0E00               	movlw	high _horarioDespertador
  1945  000AD0  0100               	movlb	0	; () banked
  1946  000AD2  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1947  000AD4  ECBD  F007         	call	_putrsXLCD	;wreg free
  1948                           
  1949                           ;main.c: 259: putrsXLCD("      ");
  1950  000AD8  0E36               	movlw	low STR_8
  1951  000ADA  0100               	movlb	0	; () banked
  1952  000ADC  6F7F               	movwf	putrsXLCD@buffer& (0+255),b
  1953  000ADE  0E08               	movlw	high STR_8
  1954  000AE0  0100               	movlb	0	; () banked
  1955  000AE2  6F80               	movwf	(putrsXLCD@buffer+1)& (0+255),b
  1956  000AE4  ECBD  F007         	call	_putrsXLCD	;wreg free
  1957                           
  1958                           ;main.c: 261: }
  1959                           
  1960                           ;main.c: 260: break;
  1961  000AE8  0012               	return	
  1962  000AEA                     l3164:
  1963  000AEA  5028               	movf	_tela_atual,w,c
  1964                           
  1965                           ; Switch size 1, requested type "space"
  1966                           ; Number of cases is 3, Range of values is 0 to 2
  1967                           ; switch strategies available:
  1968                           ; Name         Instructions Cycles
  1969                           ; simple_byte           10     6 (average)
  1970                           ;	Chosen strategy is simple_byte
  1971  000AEC  0A00               	xorlw	0	; case 0
  1972  000AEE  B4D8               	btfsc	status,2,c
  1973  000AF0  D772               	goto	l3124
  1974  000AF2  0A01               	xorlw	1	; case 1
  1975  000AF4  B4D8               	btfsc	status,2,c
  1976  000AF6  D78E               	goto	l3130
  1977  000AF8  0A03               	xorlw	3	; case 2
  1978  000AFA  A4D8               	btfss	status,2,c
  1979  000AFC  0012               	return	
  1980  000AFE  D7CE               	goto	l3156
  1981  000B00                     __end_of_atualiza_Tela:
  1982                           	opt stack 0
  1983                           tblptru	equ	0xFF8
  1984                           tblptrh	equ	0xFF7
  1985                           tblptrl	equ	0xFF6
  1986                           tablat	equ	0xFF5
  1987                           intcon	equ	0xFF2
  1988                           postinc0	equ	0xFEE
  1989                           wreg	equ	0xFE8
  1990                           postdec1	equ	0xFE5
  1991                           fsr1l	equ	0xFE1
  1992                           postinc2	equ	0xFDE
  1993                           fsr2h	equ	0xFDA
  1994                           fsr2l	equ	0xFD9
  1995                           status	equ	0xFD8
  1996                           
  1997 ;; *************** function _putrsXLCD *****************
  1998 ;; Defined at:
  1999 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  buffer          2   11[BANK0 ] PTR const unsigned char 
  2002 ;;		 -> STR_8(7), STR_7(6), STR_6(17), STR_5(7), 
  2003 ;;		 -> STR_4(7), versao(6), STR_3(9), STR_2(17), 
  2004 ;;		 -> horarioDespertador(6), data_horario.data(7), data_horario.horario(9), data_horario(20), 
  2005 ;;		 -> converteAnoString@anoStr(4), 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2017 ;;      Params:         0       2       0       0       0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2020 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2021 ;;Total ram usage:        2 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    4
  2024 ;; This function calls:
  2025 ;;		_BusyXLCD
  2026 ;;		_WriteDataXLCD
  2027 ;; This function is called by:
  2028 ;;		_atualiza_Tela
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text6
  2033  000F7A                     __ptext6:
  2034                           	opt stack 0
  2035  000F7A                     _putrsXLCD:
  2036                           	opt stack 24
  2037                           
  2038                           ;incstack = 0
  2039  000F7A  D01A               	goto	l2994
  2040  000F7C                     l2988:
  2041  000F7C  ECCB  F008         	call	_BusyXLCD	;wreg free
  2042  000F80  0900               	iorlw	0
  2043  000F82  A4D8               	btfss	status,2,c
  2044  000F84  D7FB               	goto	l2988
  2045  000F86  C07F  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2046  000F8A  C080  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2047  000F8E  6AF8               	clrf	tblptru,c
  2048  000F90  0E07               	movlw	(high __ramtop+-1)
  2049  000F92  64F7               	cpfsgt	tblptrh,c
  2050  000F94  D003               	bra	u2087
  2051  000F96  0008               	tblrd		*
  2052  000F98  50F5               	movf	tablat,w,c
  2053  000F9A  D005               	bra	u2080
  2054  000F9C                     u2087:
  2055  000F9C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2056  000FA0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2057  000FA4  50EF               	movf	indf0,w,c
  2058  000FA6                     u2080:
  2059  000FA6  EC8D  F008         	call	_WriteDataXLCD
  2060  000FAA  0100               	movlb	0	; () banked
  2061  000FAC  4B7F               	infsnz	putrsXLCD@buffer& (0+255),f,b
  2062  000FAE  2B80               	incf	(putrsXLCD@buffer+1)& (0+255),f,b
  2063  000FB0                     l2994:
  2064  000FB0  C07F  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2065  000FB4  C080  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2066  000FB8  6AF8               	clrf	tblptru,c
  2067  000FBA  0E07               	movlw	(high __ramtop+-1)
  2068  000FBC  64F7               	cpfsgt	tblptrh,c
  2069  000FBE  D003               	bra	u2097
  2070  000FC0  0008               	tblrd		*
  2071  000FC2  50F5               	movf	tablat,w,c
  2072  000FC4  D005               	bra	u2090
  2073  000FC6                     u2097:
  2074  000FC6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2075  000FCA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2076  000FCE  50EF               	movf	indf0,w,c
  2077  000FD0                     u2090:
  2078  000FD0  0900               	iorlw	0
  2079  000FD2  B4D8               	btfsc	status,2,c
  2080  000FD4  0012               	return	
  2081  000FD6  D7D2               	goto	l2988
  2082  000FD8                     __end_of_putrsXLCD:
  2083                           	opt stack 0
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           intcon	equ	0xFF2
  2089                           indf0	equ	0xFEF
  2090                           postinc0	equ	0xFEE
  2091                           fsr0h	equ	0xFEA
  2092                           fsr0l	equ	0xFE9
  2093                           wreg	equ	0xFE8
  2094                           postdec1	equ	0xFE5
  2095                           fsr1l	equ	0xFE1
  2096                           postinc2	equ	0xFDE
  2097                           fsr2h	equ	0xFDA
  2098                           fsr2l	equ	0xFD9
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function _WriteDataXLCD *****************
  2102 ;; Defined at:
  2103 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  data            1    wreg     unsigned char 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  data            1   18[COMRAM] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0
  2118 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2120 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2121 ;;Total ram usage:        1 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    3
  2124 ;; This function calls:
  2125 ;;		_DelayFor18TCY
  2126 ;; This function is called by:
  2127 ;;		_putrsXLCD
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text7
  2132  00111A                     __ptext7:
  2133                           	opt stack 0
  2134  00111A                     _WriteDataXLCD:
  2135                           	opt stack 24
  2136                           
  2137                           ;incstack = 0
  2138                           ;WriteDataXLCD@data stored from wreg
  2139  00111A  6E13               	movwf	WriteDataXLCD@data,c
  2140  00111C  0EF0               	movlw	240
  2141  00111E  1693               	andwf	3987,f,c	;volatile
  2142  001120  0EF0               	movlw	240
  2143  001122  1681               	andwf	3969,f,c	;volatile
  2144  001124  3813               	swapf	WriteDataXLCD@data,w,c
  2145  001126  0B0F               	andlw	15
  2146  001128  0B0F               	andlw	15
  2147  00112A  1281               	iorwf	3969,f,c	;volatile
  2148  00112C  8A8A               	bsf	3978,5,c	;volatile
  2149  00112E  9C8A               	bcf	3978,6,c	;volatile
  2150  001130  EC49  F009         	call	_DelayFor18TCY	;wreg free
  2151  001134  888A               	bsf	3978,4,c	;volatile
  2152  001136  EC49  F009         	call	_DelayFor18TCY	;wreg free
  2153  00113A  988A               	bcf	3978,4,c	;volatile
  2154  00113C  0EF0               	movlw	240
  2155  00113E  1681               	andwf	3969,f,c	;volatile
  2156  001140  5013               	movf	WriteDataXLCD@data,w,c
  2157  001142  0B0F               	andlw	15
  2158  001144  1281               	iorwf	3969,f,c	;volatile
  2159  001146  EC49  F009         	call	_DelayFor18TCY	;wreg free
  2160  00114A  888A               	bsf	3978,4,c	;volatile
  2161  00114C  EC49  F009         	call	_DelayFor18TCY	;wreg free
  2162  001150  988A               	bcf	3978,4,c	;volatile
  2163  001152  0E0F               	movlw	15
  2164  001154  1293               	iorwf	3987,f,c	;volatile
  2165  001156  0012               	return	
  2166  001158                     __end_of_WriteDataXLCD:
  2167                           	opt stack 0
  2168                           tblptru	equ	0xFF8
  2169                           tblptrh	equ	0xFF7
  2170                           tblptrl	equ	0xFF6
  2171                           tablat	equ	0xFF5
  2172                           intcon	equ	0xFF2
  2173                           indf0	equ	0xFEF
  2174                           postinc0	equ	0xFEE
  2175                           fsr0h	equ	0xFEA
  2176                           fsr0l	equ	0xFE9
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1l	equ	0xFE1
  2180                           postinc2	equ	0xFDE
  2181                           fsr2h	equ	0xFDA
  2182                           fsr2l	equ	0xFD9
  2183                           status	equ	0xFD8
  2184                           
  2185 ;; *************** function _converteAnoString *****************
  2186 ;; Defined at:
  2187 ;;		line 131 in file "main.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  ano             2   36[COMRAM] int 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  anoStr          4    7[BANK0 ] unsigned char [4]
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2   36[COMRAM] PTR unsigned char 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2201 ;;      Params:         2       0       0       0       0       0       0       0       0
  2202 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2204 ;;      Totals:         2       4       0       0       0       0       0       0       0
  2205 ;;Total ram usage:        6 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    3
  2208 ;; This function calls:
  2209 ;;		_sprintf
  2210 ;; This function is called by:
  2211 ;;		_atualiza_Tela
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text8
  2216  001204                     __ptext8:
  2217                           	opt stack 0
  2218  001204                     _converteAnoString:
  2219                           	opt stack 25
  2220                           
  2221                           ;main.c: 132: char anoStr[4];
  2222                           ;main.c: 133: sprintf(anoStr,"%i",ano);
  2223                           
  2224                           ;incstack = 0
  2225  001204  0E7B               	movlw	low converteAnoString@anoStr
  2226  001206  6E1E               	movwf	sprintf@sp,c
  2227  001208  0E00               	movlw	high converteAnoString@anoStr
  2228  00120A  6E1F               	movwf	sprintf@sp+1,c
  2229  00120C  0E4B               	movlw	low STR_1
  2230  00120E  6E20               	movwf	sprintf@f,c
  2231  001210  0E08               	movlw	high STR_1
  2232  001212  6E21               	movwf	sprintf@f+1,c
  2233  001214  C025  F022         	movff	converteAnoString@ano,?_sprintf+4
  2234  001218  C026  F023         	movff	converteAnoString@ano+1,?_sprintf+5
  2235  00121C  EC28  F004         	call	_sprintf	;wreg free
  2236                           
  2237                           ;main.c: 134: return anoStr;
  2238  001220  0E7B               	movlw	low converteAnoString@anoStr
  2239  001222  6E25               	movwf	?_converteAnoString,c
  2240  001224  0E00               	movlw	high converteAnoString@anoStr
  2241  001226  6E26               	movwf	?_converteAnoString+1,c
  2242  001228  0012               	return	
  2243  00122A                     __end_of_converteAnoString:
  2244                           	opt stack 0
  2245                           tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           intcon	equ	0xFF2
  2250                           indf0	equ	0xFEF
  2251                           postinc0	equ	0xFEE
  2252                           fsr0h	equ	0xFEA
  2253                           fsr0l	equ	0xFE9
  2254                           wreg	equ	0xFE8
  2255                           postdec1	equ	0xFE5
  2256                           fsr1l	equ	0xFE1
  2257                           postinc2	equ	0xFDE
  2258                           fsr2h	equ	0xFDA
  2259                           fsr2l	equ	0xFD9
  2260                           status	equ	0xFD8
  2261                           
  2262 ;; *************** function _sprintf *****************
  2263 ;; Defined at:
  2264 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  sp              2   29[COMRAM] PTR unsigned char 
  2267 ;;		 -> converteAnoString@anoStr(4), 
  2268 ;;  f               2   31[COMRAM] PTR const unsigned char 
  2269 ;;		 -> STR_1(3), 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  tmpval          4    0        struct .
  2272 ;;  cp              3    0        PTR const unsigned char 
  2273 ;;  val             2    4[BANK0 ] unsigned int 
  2274 ;;  ap              2    0[BANK0 ] PTR void [1]
  2275 ;;		 -> ?_sprintf(2), 
  2276 ;;  len             2    0        unsigned int 
  2277 ;;  c               1    6[BANK0 ] char 
  2278 ;;  prec            1    3[BANK0 ] char 
  2279 ;;  flag            1    2[BANK0 ] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2   29[COMRAM] int 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2289 ;;      Params:         6       0       0       0       0       0       0       0       0
  2290 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2291 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2292 ;;      Totals:         7       7       0       0       0       0       0       0       0
  2293 ;;Total ram usage:       14 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    2
  2296 ;; This function calls:
  2297 ;;		___lwdiv
  2298 ;;		___lwmod
  2299 ;; This function is called by:
  2300 ;;		_converteAnoString
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text9
  2305  000850                     __ptext9:
  2306                           	opt stack 0
  2307  000850                     _sprintf:
  2308                           	opt stack 25
  2309                           
  2310                           ;doprnt.c: 494: va_list ap;
  2311                           ;doprnt.c: 499: signed char c;
  2312                           ;doprnt.c: 506: signed char prec;
  2313                           ;doprnt.c: 508: unsigned char flag;
  2314                           ;doprnt.c: 523: union {
  2315                           ;doprnt.c: 524: unsigned long vd;
  2316                           ;doprnt.c: 525: double integ;
  2317                           ;doprnt.c: 526: } tmpval;
  2318                           ;doprnt.c: 528: unsigned int val;
  2319                           ;doprnt.c: 529: unsigned len;
  2320                           ;doprnt.c: 530: const char * cp;
  2321                           ;doprnt.c: 533: *ap = __va_start();
  2322                           
  2323                           ;incstack = 0
  2324  000850  0E22               	movlw	low (?_sprintf+4)
  2325  000852  0100               	movlb	0	; () banked
  2326  000854  6F74               	movwf	sprintf@ap& (0+255),b
  2327  000856  0E00               	movlw	high (?_sprintf+4)
  2328  000858  0100               	movlb	0	; () banked
  2329  00085A  6F75               	movwf	(sprintf@ap+1)& (0+255),b
  2330                           
  2331                           ;doprnt.c: 536: while(c = *f++) {
  2332  00085C  D09D               	goto	l2850
  2333  00085E                     l2798:
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;doprnt.c: 538: if(c != '%')
  2337  00085E  0E25               	movlw	37
  2338  000860  0100               	movlb	0	; () banked
  2339  000862  197A               	xorwf	sprintf@c& (0+255),w,b
  2340  000864  B4D8               	btfsc	status,2,c
  2341  000866  D009               	goto	l2804
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;doprnt.c: 540: {
  2345                           ;doprnt.c: 541: ((*sp++ = (c)));
  2346  000868  C01E  FFD9         	movff	sprintf@sp,fsr2l
  2347  00086C  C01F  FFDA         	movff	sprintf@sp+1,fsr2h
  2348  000870  C07A  FFDF         	movff	sprintf@c,indf2
  2349                           
  2350                           ; BSR set to: 0
  2351  000874  4A1E               	infsnz	sprintf@sp,f,c
  2352  000876  2A1F               	incf	sprintf@sp+1,f,c
  2353                           
  2354                           ;doprnt.c: 542: continue;
  2355  000878  D08F               	goto	l2850
  2356  00087A                     l2804:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;doprnt.c: 543: }
  2360                           ;doprnt.c: 548: flag = 0;
  2361  00087A  0E00               	movlw	0
  2362  00087C  0100               	movlb	0	; () banked
  2363  00087E  6F76               	movwf	sprintf@flag& (0+255),b
  2364                           
  2365                           ; BSR set to: 0
  2366                           
  2367                           ; BSR set to: 0
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;doprnt.c: 822: }
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;doprnt.c: 813: continue;
  2374                           
  2375                           ;doprnt.c: 802: default:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;doprnt.c: 698: case 'i':
  2379                           ;doprnt.c: 699: break;
  2380                           
  2381                           ; BSR set to: 0
  2382                           
  2383                           ;doprnt.c: 697: case 'd':
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;doprnt.c: 638: goto alldone;
  2387                           
  2388                           ;doprnt.c: 637: case 0:
  2389                           
  2390                           ;doprnt.c: 635: switch(c = *f++) {
  2391  000880  C020  FFF6         	movff	sprintf@f,tblptrl
  2392  000884  C021  FFF7         	movff	sprintf@f+1,tblptrh
  2393  000888  4A20               	infsnz	sprintf@f,f,c
  2394  00088A  2A21               	incf	sprintf@f+1,f,c
  2395  00088C                     	if	0	;tblptru may be non-zero
  2396  00088C                     	endif
  2397  00088C                     	if	0	;tblptru may be non-zero
  2398  00088C                     	endif
  2399  00088C  0008               	tblrd		*
  2400  00088E  CFF5 F07A          	movff	tablat,sprintf@c
  2401  000892  0100               	movlb	0	; () banked
  2402  000894  517A               	movf	sprintf@c& (0+255),w,b
  2403                           
  2404                           ; Switch size 1, requested type "space"
  2405                           ; Number of cases is 3, Range of values is 0 to 105
  2406                           ; switch strategies available:
  2407                           ; Name         Instructions Cycles
  2408                           ; simple_byte           10     6 (average)
  2409                           ;	Chosen strategy is simple_byte
  2410  000896  0A00               	xorlw	0	; case 0
  2411  000898  B4D8               	btfsc	status,2,c
  2412  00089A  D08B               	goto	l2852
  2413  00089C  0A64               	xorlw	100	; case 100
  2414  00089E  B4D8               	btfsc	status,2,c
  2415  0008A0  D003               	goto	l2810
  2416  0008A2  0A0D               	xorlw	13	; case 105
  2417  0008A4  A4D8               	btfss	status,2,c
  2418  0008A6  D078               	goto	l2850
  2419  0008A8                     l2810:
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;doprnt.c: 1253: {
  2423                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2424  0008A8  C074  FFD9         	movff	sprintf@ap,fsr2l
  2425  0008AC  C075  FFDA         	movff	sprintf@ap+1,fsr2h
  2426  0008B0  CFDE F078          	movff	postinc2,sprintf@val
  2427  0008B4  CFDD F079          	movff	postdec2,sprintf@val+1
  2428                           
  2429                           ; BSR set to: 0
  2430  0008B8  0E02               	movlw	2
  2431  0008BA  0100               	movlb	0	; () banked
  2432  0008BC  2774               	addwf	sprintf@ap& (0+255),f,b
  2433  0008BE  0E00               	movlw	0
  2434  0008C0  2375               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;doprnt.c: 1261: if((int)val < 0) {
  2438  0008C2  0100               	movlb	0	; () banked
  2439  0008C4  AF79               	btfss	(sprintf@val+1)& (0+255),7,b
  2440  0008C6  D008               	goto	l2820
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;doprnt.c: 1262: flag |= 0x03;
  2444  0008C8  0E03               	movlw	3
  2445  0008CA  0100               	movlb	0	; () banked
  2446  0008CC  1376               	iorwf	sprintf@flag& (0+255),f,b
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;doprnt.c: 1263: val = -val;
  2450  0008CE  0100               	movlb	0	; () banked
  2451  0008D0  6D78               	negf	sprintf@val& (0+255),b
  2452  0008D2  1F79               	comf	(sprintf@val+1)& (0+255),f,b
  2453  0008D4  B0D8               	btfsc	status,0,c
  2454  0008D6  2B79               	incf	(sprintf@val+1)& (0+255),f,b
  2455  0008D8                     l2820:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;doprnt.c: 1264: }
  2459                           ;doprnt.c: 1266: }
  2460                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2461  0008D8  0E01               	movlw	1
  2462  0008DA  0100               	movlb	0	; () banked
  2463  0008DC  6F7A               	movwf	sprintf@c& (0+255),b
  2464  0008DE                     l2822:
  2465                           
  2466                           ; BSR set to: 0
  2467  0008DE  0E05               	movlw	5
  2468  0008E0  0100               	movlb	0	; () banked
  2469  0008E2  197A               	xorwf	sprintf@c& (0+255),w,b
  2470  0008E4  B4D8               	btfsc	status,2,c
  2471  0008E6  D016               	goto	l2834
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;doprnt.c: 1306: if(val < dpowers[c])
  2475                           
  2476                           ; BSR set to: 0
  2477                           
  2478                           ; BSR set to: 0
  2479  0008E8  0100               	movlb	0	; () banked
  2480  0008EA  517A               	movf	sprintf@c& (0+255),w,b
  2481  0008EC  0D02               	mullw	2
  2482  0008EE  0E01               	movlw	low _dpowers
  2483  0008F0  24F3               	addwf	prodl,w,c
  2484  0008F2  6EF6               	movwf	tblptrl,c
  2485  0008F4  0E08               	movlw	high _dpowers
  2486  0008F6  20F4               	addwfc	prodh,w,c
  2487  0008F8  6EF7               	movwf	tblptrh,c
  2488  0008FA                     	if	0	;There are less than 3 active tblptr bytes
  2489  0008FA                     	endif
  2490  0008FA  0009               	tblrd		*+
  2491  0008FC  50F5               	movf	tablat,w,c
  2492  0008FE  0100               	movlb	0	; () banked
  2493  000900  5D78               	subwf	sprintf@val& (0+255),w,b
  2494  000902  0009               	tblrd		*+
  2495  000904  50F5               	movf	tablat,w,c
  2496  000906  0100               	movlb	0	; () banked
  2497  000908  5979               	subwfb	(sprintf@val+1)& (0+255),w,b
  2498  00090A  A0D8               	btfss	status,0,c
  2499  00090C  D003               	goto	l2834
  2500                           
  2501                           ; BSR set to: 0
  2502                           
  2503                           ; BSR set to: 0
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;doprnt.c: 1307: break;
  2507  00090E  0100               	movlb	0	; () banked
  2508  000910  2B7A               	incf	sprintf@c& (0+255),f,b
  2509  000912  D7E5               	goto	l2822
  2510  000914                     l2834:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;doprnt.c: 1422: {
  2514                           ;doprnt.c: 1438: if(flag & 0x03)
  2515  000914  C076  F024         	movff	sprintf@flag,??_sprintf
  2516  000918  0E03               	movlw	3
  2517  00091A  1624               	andwf	??_sprintf,f,c
  2518  00091C  B4D8               	btfsc	status,2,c
  2519  00091E  D008               	goto	l2840
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2523  000920  C01E  FFD9         	movff	sprintf@sp,fsr2l
  2524  000924  C01F  FFDA         	movff	sprintf@sp+1,fsr2h
  2525  000928  0E2D               	movlw	45
  2526  00092A  6EDF               	movwf	indf2,c
  2527                           
  2528                           ; BSR set to: 0
  2529  00092C  4A1E               	infsnz	sprintf@sp,f,c
  2530  00092E  2A1F               	incf	sprintf@sp+1,f,c
  2531  000930                     l2840:
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;doprnt.c: 1469: }
  2535                           ;doprnt.c: 1472: prec = c;
  2536  000930  C07A  F077         	movff	sprintf@c,sprintf@prec
  2537                           
  2538                           ;doprnt.c: 1474: while(prec--) {
  2539  000934  D02B               	goto	l2848
  2540  000936                     l2842:
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;doprnt.c: 1478: {
  2544                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2545  000936  0100               	movlb	0	; () banked
  2546  000938  5177               	movf	sprintf@prec& (0+255),w,b
  2547  00093A  0D02               	mullw	2
  2548  00093C  0E01               	movlw	low _dpowers
  2549  00093E  24F3               	addwf	prodl,w,c
  2550  000940  6EF6               	movwf	tblptrl,c
  2551  000942  0E08               	movlw	high _dpowers
  2552  000944  20F4               	addwfc	prodh,w,c
  2553  000946  6EF7               	movwf	tblptrh,c
  2554  000948                     	if	0	;There are less than 3 active tblptr bytes
  2555  000948                     	endif
  2556  000948  0009               	tblrd		*+
  2557  00094A  CFF5 F014          	movff	tablat,___lwdiv@divisor
  2558  00094E  000A               	tblrd		*-
  2559  000950  CFF5 F015          	movff	tablat,___lwdiv@divisor+1
  2560  000954  C078  F012         	movff	sprintf@val,___lwdiv@dividend
  2561  000958  C079  F013         	movff	sprintf@val+1,___lwdiv@dividend+1
  2562  00095C  EC1A  F008         	call	___lwdiv	;wreg free
  2563  000960  C012  F019         	movff	?___lwdiv,___lwmod@dividend
  2564  000964  C013  F01A         	movff	?___lwdiv+1,___lwmod@dividend+1
  2565  000968  0E00               	movlw	0
  2566  00096A  6E1C               	movwf	___lwmod@divisor+1,c
  2567  00096C  0E0A               	movlw	10
  2568  00096E  6E1B               	movwf	___lwmod@divisor,c
  2569  000970  EC6C  F008         	call	___lwmod	;wreg free
  2570  000974  5019               	movf	?___lwmod,w,c
  2571  000976  0F30               	addlw	48
  2572  000978  0100               	movlb	0	; () banked
  2573  00097A  6F7A               	movwf	sprintf@c& (0+255),b
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;doprnt.c: 1523: }
  2577                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2578  00097C  C01E  FFD9         	movff	sprintf@sp,fsr2l
  2579  000980  C01F  FFDA         	movff	sprintf@sp+1,fsr2h
  2580  000984  C07A  FFDF         	movff	sprintf@c,indf2
  2581                           
  2582                           ; BSR set to: 0
  2583  000988  4A1E               	infsnz	sprintf@sp,f,c
  2584  00098A  2A1F               	incf	sprintf@sp+1,f,c
  2585  00098C                     l2848:
  2586                           
  2587                           ; BSR set to: 0
  2588  00098C  0100               	movlb	0	; () banked
  2589  00098E  0777               	decf	sprintf@prec& (0+255),f,b
  2590  000990  0100               	movlb	0	; () banked
  2591  000992  2977               	incf	sprintf@prec& (0+255),w,b
  2592  000994  A4D8               	btfss	status,2,c
  2593  000996  D7CF               	goto	l2842
  2594  000998                     l2850:
  2595                           
  2596                           ; BSR set to: 0
  2597  000998  C020  FFF6         	movff	sprintf@f,tblptrl
  2598  00099C  C021  FFF7         	movff	sprintf@f+1,tblptrh
  2599  0009A0  4A20               	infsnz	sprintf@f,f,c
  2600  0009A2  2A21               	incf	sprintf@f+1,f,c
  2601  0009A4                     	if	0	;tblptru may be non-zero
  2602  0009A4                     	endif
  2603  0009A4                     	if	0	;tblptru may be non-zero
  2604  0009A4                     	endif
  2605  0009A4  0008               	tblrd		*
  2606  0009A6  CFF5 F07A          	movff	tablat,sprintf@c
  2607  0009AA  0100               	movlb	0	; () banked
  2608  0009AC  517A               	movf	sprintf@c& (0+255),w,b
  2609  0009AE  A4D8               	btfss	status,2,c
  2610  0009B0  D756               	goto	l2798
  2611  0009B2                     l2852:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;doprnt.c: 1538: *sp = 0;
  2615  0009B2  C01E  FFD9         	movff	sprintf@sp,fsr2l
  2616  0009B6  C01F  FFDA         	movff	sprintf@sp+1,fsr2h
  2617  0009BA  0E00               	movlw	0
  2618  0009BC  6EDF               	movwf	indf2,c
  2619  0009BE  0012               	return	
  2620  0009C0                     __end_of_sprintf:
  2621                           	opt stack 0
  2622                           tblptru	equ	0xFF8
  2623                           tblptrh	equ	0xFF7
  2624                           tblptrl	equ	0xFF6
  2625                           tablat	equ	0xFF5
  2626                           prodh	equ	0xFF4
  2627                           prodl	equ	0xFF3
  2628                           intcon	equ	0xFF2
  2629                           indf0	equ	0xFEF
  2630                           postinc0	equ	0xFEE
  2631                           fsr0h	equ	0xFEA
  2632                           fsr0l	equ	0xFE9
  2633                           wreg	equ	0xFE8
  2634                           postdec1	equ	0xFE5
  2635                           fsr1l	equ	0xFE1
  2636                           indf2	equ	0xFDF
  2637                           postinc2	equ	0xFDE
  2638                           postdec2	equ	0xFDD
  2639                           fsr2h	equ	0xFDA
  2640                           fsr2l	equ	0xFD9
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function ___lwmod *****************
  2644 ;; Defined at:
  2645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  dividend        2   24[COMRAM] unsigned int 
  2648 ;;  divisor         2   26[COMRAM] unsigned int 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  counter         1   28[COMRAM] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  2   24[COMRAM] unsigned int 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2660 ;;      Params:         4       0       0       0       0       0       0       0       0
  2661 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2663 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2664 ;;Total ram usage:        5 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_sprintf
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text10
  2675  0010D8                     __ptext10:
  2676                           	opt stack 0
  2677  0010D8                     ___lwmod:
  2678                           	opt stack 25
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;incstack = 0
  2682  0010D8  501B               	movf	___lwmod@divisor,w,c
  2683  0010DA  101C               	iorwf	___lwmod@divisor+1,w,c
  2684  0010DC  B4D8               	btfsc	status,2,c
  2685  0010DE  D018               	goto	l847
  2686  0010E0  0E01               	movlw	1
  2687  0010E2  6E1D               	movwf	___lwmod@counter,c
  2688  0010E4  D004               	goto	l2782
  2689  0010E6                     l2780:
  2690  0010E6  90D8               	bcf	status,0,c
  2691  0010E8  361B               	rlcf	___lwmod@divisor,f,c
  2692  0010EA  361C               	rlcf	___lwmod@divisor+1,f,c
  2693  0010EC  2A1D               	incf	___lwmod@counter,f,c
  2694  0010EE                     l2782:
  2695  0010EE  AE1C               	btfss	___lwmod@divisor+1,7,c
  2696  0010F0  D7FA               	goto	l2780
  2697  0010F2                     l2784:
  2698  0010F2  501B               	movf	___lwmod@divisor,w,c
  2699  0010F4  5C19               	subwf	___lwmod@dividend,w,c
  2700  0010F6  501C               	movf	___lwmod@divisor+1,w,c
  2701  0010F8  581A               	subwfb	___lwmod@dividend+1,w,c
  2702  0010FA  A0D8               	btfss	status,0,c
  2703  0010FC  D004               	goto	l2788
  2704  0010FE  501B               	movf	___lwmod@divisor,w,c
  2705  001100  5E19               	subwf	___lwmod@dividend,f,c
  2706  001102  501C               	movf	___lwmod@divisor+1,w,c
  2707  001104  5A1A               	subwfb	___lwmod@dividend+1,f,c
  2708  001106                     l2788:
  2709  001106  90D8               	bcf	status,0,c
  2710  001108  321C               	rrcf	___lwmod@divisor+1,f,c
  2711  00110A  321B               	rrcf	___lwmod@divisor,f,c
  2712  00110C  2E1D               	decfsz	___lwmod@counter,f,c
  2713  00110E  D7F1               	goto	l2784
  2714  001110                     l847:
  2715  001110  C019  F019         	movff	___lwmod@dividend,?___lwmod
  2716  001114  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  2717  001118  0012               	return		;funcret
  2718  00111A                     __end_of___lwmod:
  2719                           	opt stack 0
  2720                           tblptru	equ	0xFF8
  2721                           tblptrh	equ	0xFF7
  2722                           tblptrl	equ	0xFF6
  2723                           tablat	equ	0xFF5
  2724                           prodh	equ	0xFF4
  2725                           prodl	equ	0xFF3
  2726                           intcon	equ	0xFF2
  2727                           indf0	equ	0xFEF
  2728                           postinc0	equ	0xFEE
  2729                           fsr0h	equ	0xFEA
  2730                           fsr0l	equ	0xFE9
  2731                           wreg	equ	0xFE8
  2732                           postdec1	equ	0xFE5
  2733                           fsr1l	equ	0xFE1
  2734                           indf2	equ	0xFDF
  2735                           postinc2	equ	0xFDE
  2736                           postdec2	equ	0xFDD
  2737                           fsr2h	equ	0xFDA
  2738                           fsr2l	equ	0xFD9
  2739                           status	equ	0xFD8
  2740                           
  2741 ;; *************** function ___lwdiv *****************
  2742 ;; Defined at:
  2743 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  dividend        2   17[COMRAM] unsigned int 
  2746 ;;  divisor         2   19[COMRAM] unsigned int 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  quotient        2   22[COMRAM] unsigned int 
  2749 ;;  counter         1   21[COMRAM] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  2   17[COMRAM] unsigned int 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2759 ;;      Params:         4       0       0       0       0       0       0       0       0
  2760 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2762 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2763 ;;Total ram usage:        7 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    1
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_sprintf
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text11
  2774  001034                     __ptext11:
  2775                           	opt stack 0
  2776  001034                     ___lwdiv:
  2777                           	opt stack 25
  2778                           
  2779                           ;incstack = 0
  2780  001034  0E00               	movlw	0
  2781  001036  6E18               	movwf	___lwdiv@quotient+1,c
  2782  001038  0E00               	movlw	0
  2783  00103A  6E17               	movwf	___lwdiv@quotient,c
  2784  00103C  5014               	movf	___lwdiv@divisor,w,c
  2785  00103E  1015               	iorwf	___lwdiv@divisor+1,w,c
  2786  001040  B4D8               	btfsc	status,2,c
  2787  001042  D01C               	goto	l837
  2788  001044  0E01               	movlw	1
  2789  001046  6E16               	movwf	___lwdiv@counter,c
  2790  001048  D004               	goto	l2762
  2791  00104A                     l2760:
  2792  00104A  90D8               	bcf	status,0,c
  2793  00104C  3614               	rlcf	___lwdiv@divisor,f,c
  2794  00104E  3615               	rlcf	___lwdiv@divisor+1,f,c
  2795  001050  2A16               	incf	___lwdiv@counter,f,c
  2796  001052                     l2762:
  2797  001052  AE15               	btfss	___lwdiv@divisor+1,7,c
  2798  001054  D7FA               	goto	l2760
  2799  001056                     l2764:
  2800  001056  90D8               	bcf	status,0,c
  2801  001058  3617               	rlcf	___lwdiv@quotient,f,c
  2802  00105A  3618               	rlcf	___lwdiv@quotient+1,f,c
  2803  00105C  5014               	movf	___lwdiv@divisor,w,c
  2804  00105E  5C12               	subwf	___lwdiv@dividend,w,c
  2805  001060  5015               	movf	___lwdiv@divisor+1,w,c
  2806  001062  5813               	subwfb	___lwdiv@dividend+1,w,c
  2807  001064  A0D8               	btfss	status,0,c
  2808  001066  D005               	goto	l2772
  2809  001068  5014               	movf	___lwdiv@divisor,w,c
  2810  00106A  5E12               	subwf	___lwdiv@dividend,f,c
  2811  00106C  5015               	movf	___lwdiv@divisor+1,w,c
  2812  00106E  5A13               	subwfb	___lwdiv@dividend+1,f,c
  2813  001070  8017               	bsf	___lwdiv@quotient,0,c
  2814  001072                     l2772:
  2815  001072  90D8               	bcf	status,0,c
  2816  001074  3215               	rrcf	___lwdiv@divisor+1,f,c
  2817  001076  3214               	rrcf	___lwdiv@divisor,f,c
  2818  001078  2E16               	decfsz	___lwdiv@counter,f,c
  2819  00107A  D7ED               	goto	l2764
  2820  00107C                     l837:
  2821  00107C  C017  F012         	movff	___lwdiv@quotient,?___lwdiv
  2822  001080  C018  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2823  001084  0012               	return		;funcret
  2824  001086                     __end_of___lwdiv:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           prodh	equ	0xFF4
  2831                           prodl	equ	0xFF3
  2832                           intcon	equ	0xFF2
  2833                           indf0	equ	0xFEF
  2834                           postinc0	equ	0xFEE
  2835                           fsr0h	equ	0xFEA
  2836                           fsr0l	equ	0xFE9
  2837                           wreg	equ	0xFE8
  2838                           postdec1	equ	0xFE5
  2839                           fsr1l	equ	0xFE1
  2840                           indf2	equ	0xFDF
  2841                           postinc2	equ	0xFDE
  2842                           postdec2	equ	0xFDD
  2843                           fsr2h	equ	0xFDA
  2844                           fsr2l	equ	0xFD9
  2845                           status	equ	0xFD8
  2846                           
  2847 ;; *************** function _acionaDespertador *****************
  2848 ;; Defined at:
  2849 ;;		line 207 in file "main.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2866 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    1
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_atualiza_Tela
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text12
  2878  0011D0                     __ptext12:
  2879                           	opt stack 0
  2880  0011D0                     _acionaDespertador:
  2881                           	opt stack 27
  2882                           
  2883                           ;main.c: 208: if(virouDia){
  2884                           
  2885                           ;incstack = 0
  2886  0011D0  5047               	movf	_virouDia,w,c
  2887  0011D2  B4D8               	btfsc	status,2,c
  2888  0011D4  0012               	return	
  2889                           
  2890                           ;main.c: 209: if((data_horario.horario[0] == horarioDespertador[0]) && (data_horario.hor
      +                          ario[1] == horarioDespertador[1]) && (data_horario.horario[3] == horarioDespertador[3]) 
      +                          && (data_horario.horario[4] == horarioDespertador[4])){
  2891  0011D6  503E               	movf	_horarioDespertador,w,c
  2892  0011D8  0100               	movlb	0	; () banked
  2893  0011DA  1960               	xorwf	_data_horario& (0+255),w,b
  2894  0011DC  A4D8               	btfss	status,2,c
  2895  0011DE  0012               	return	
  2896                           
  2897                           ; BSR set to: 0
  2898  0011E0  503F               	movf	_horarioDespertador+1,w,c
  2899  0011E2  0100               	movlb	0	; () banked
  2900  0011E4  1961               	xorwf	(_data_horario+1)& (0+255),w,b
  2901  0011E6  A4D8               	btfss	status,2,c
  2902  0011E8  0012               	return	
  2903                           
  2904                           ; BSR set to: 0
  2905  0011EA  5041               	movf	_horarioDespertador+3,w,c
  2906  0011EC  0100               	movlb	0	; () banked
  2907  0011EE  1963               	xorwf	(_data_horario+3)& (0+255),w,b
  2908  0011F0  A4D8               	btfss	status,2,c
  2909  0011F2  0012               	return	
  2910                           
  2911                           ; BSR set to: 0
  2912  0011F4  5042               	movf	_horarioDespertador+4,w,c
  2913  0011F6  0100               	movlb	0	; () banked
  2914  0011F8  1964               	xorwf	(_data_horario+4)& (0+255),w,b
  2915  0011FA  A4D8               	btfss	status,2,c
  2916  0011FC  0012               	return	
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;main.c: 210: flagDespertadorLigado = 1;
  2920  0011FE  0E01               	movlw	1
  2921  001200  6E2C               	movwf	_flagDespertadorLigado,c
  2922                           
  2923                           ; BSR set to: 0
  2924  001202  0012               	return	
  2925  001204                     __end_of_acionaDespertador:
  2926                           	opt stack 0
  2927                           tblptru	equ	0xFF8
  2928                           tblptrh	equ	0xFF7
  2929                           tblptrl	equ	0xFF6
  2930                           tablat	equ	0xFF5
  2931                           prodh	equ	0xFF4
  2932                           prodl	equ	0xFF3
  2933                           intcon	equ	0xFF2
  2934                           indf0	equ	0xFEF
  2935                           postinc0	equ	0xFEE
  2936                           fsr0h	equ	0xFEA
  2937                           fsr0l	equ	0xFE9
  2938                           wreg	equ	0xFE8
  2939                           postdec1	equ	0xFE5
  2940                           fsr1l	equ	0xFE1
  2941                           indf2	equ	0xFDF
  2942                           postinc2	equ	0xFDE
  2943                           postdec2	equ	0xFDD
  2944                           fsr2h	equ	0xFDA
  2945                           fsr2l	equ	0xFD9
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _init_XLCD *****************
  2949 ;; Defined at:
  2950 ;;		line 200 in file "main.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2964 ;;      Params:         0       0       0       0       0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2967 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2968 ;;Total ram usage:        0 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    5
  2971 ;; This function calls:
  2972 ;;		_BusyXLCD
  2973 ;;		_OpenXLCD
  2974 ;;		_WriteCmdXLCD
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text13
  2981  00122A                     __ptext13:
  2982                           	opt stack 0
  2983  00122A                     _init_XLCD:
  2984                           	opt stack 25
  2985                           
  2986                           ;main.c: 201: OpenXLCD(0b00101100&0b00111000);
  2987                           
  2988                           ;incstack = 0
  2989  00122A  0E28               	movlw	40
  2990  00122C  ECB1  F006         	call	_OpenXLCD
  2991  001230                     l3244:
  2992  001230  ECCB  F008         	call	_BusyXLCD	;wreg free
  2993  001234  0900               	iorlw	0
  2994  001236  A4D8               	btfss	status,2,c
  2995  001238  D7FB               	goto	l3244
  2996                           
  2997                           ;main.c: 203: WriteCmdXLCD(0x06);
  2998  00123A  0E06               	movlw	6
  2999  00123C  ECAC  F008         	call	_WriteCmdXLCD
  3000                           
  3001                           ;main.c: 204: WriteCmdXLCD(0x0C);
  3002  001240  0E0C               	movlw	12
  3003  001242  ECAC  F008         	call	_WriteCmdXLCD
  3004  001246  0012               	return		;funcret
  3005  001248                     __end_of_init_XLCD:
  3006                           	opt stack 0
  3007                           tblptru	equ	0xFF8
  3008                           tblptrh	equ	0xFF7
  3009                           tblptrl	equ	0xFF6
  3010                           tablat	equ	0xFF5
  3011                           prodh	equ	0xFF4
  3012                           prodl	equ	0xFF3
  3013                           intcon	equ	0xFF2
  3014                           indf0	equ	0xFEF
  3015                           postinc0	equ	0xFEE
  3016                           fsr0h	equ	0xFEA
  3017                           fsr0l	equ	0xFE9
  3018                           wreg	equ	0xFE8
  3019                           postdec1	equ	0xFE5
  3020                           fsr1l	equ	0xFE1
  3021                           indf2	equ	0xFDF
  3022                           postinc2	equ	0xFDE
  3023                           postdec2	equ	0xFDD
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8
  3027                           
  3028 ;; *************** function _OpenXLCD *****************
  3029 ;; Defined at:
  3030 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  lcdtype         1    wreg     unsigned char 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  lcdtype         1   22[COMRAM] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0
  3045 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3047 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3048 ;;Total ram usage:        1 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    4
  3051 ;; This function calls:
  3052 ;;		_BusyXLCD
  3053 ;;		_Delay10KTCYx
  3054 ;;		_DelayPORXLCD
  3055 ;;		_SetDDRamAddr
  3056 ;;		_WriteCmdXLCD
  3057 ;; This function is called by:
  3058 ;;		_init_XLCD
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text14
  3063  000D62                     __ptext14:
  3064                           	opt stack 0
  3065  000D62                     _OpenXLCD:
  3066                           	opt stack 25
  3067                           
  3068                           ;incstack = 0
  3069                           ;OpenXLCD@lcdtype stored from wreg
  3070  000D62  6E17               	movwf	OpenXLCD@lcdtype,c
  3071  000D64  0EF0               	movlw	240
  3072  000D66  1681               	andwf	3969,f,c	;volatile
  3073  000D68  0EF0               	movlw	240
  3074  000D6A  1693               	andwf	3987,f,c	;volatile
  3075  000D6C  9C93               	bcf	3987,6,c	;volatile
  3076  000D6E  9A93               	bcf	3987,5,c	;volatile
  3077  000D70  9893               	bcf	3987,4,c	;volatile
  3078  000D72  9C8A               	bcf	3978,6,c	;volatile
  3079  000D74  9A8A               	bcf	3978,5,c	;volatile
  3080  000D76  988A               	bcf	3978,4,c	;volatile
  3081  000D78  EC45  F009         	call	_DelayPORXLCD	;wreg free
  3082  000D7C  0E30               	movlw	48
  3083  000D7E  ECAC  F008         	call	_WriteCmdXLCD
  3084  000D82  0E05               	movlw	5
  3085  000D84  EC24  F009         	call	_Delay10KTCYx
  3086  000D88  0E30               	movlw	48
  3087  000D8A  ECAC  F008         	call	_WriteCmdXLCD
  3088  000D8E  0E01               	movlw	1
  3089  000D90  EC24  F009         	call	_Delay10KTCYx
  3090  000D94  0E32               	movlw	50
  3091  000D96  ECAC  F008         	call	_WriteCmdXLCD
  3092  000D9A                     l3088:
  3093  000D9A  ECCB  F008         	call	_BusyXLCD	;wreg free
  3094  000D9E  0900               	iorlw	0
  3095  000DA0  A4D8               	btfss	status,2,c
  3096  000DA2  D7FB               	goto	l3088
  3097  000DA4                     l3090:
  3098  000DA4  ECCB  F008         	call	_BusyXLCD	;wreg free
  3099  000DA8  0900               	iorlw	0
  3100  000DAA  A4D8               	btfss	status,2,c
  3101  000DAC  D7FB               	goto	l3090
  3102  000DAE  5017               	movf	OpenXLCD@lcdtype,w,c
  3103  000DB0  ECAC  F008         	call	_WriteCmdXLCD
  3104  000DB4                     l3094:
  3105  000DB4  ECCB  F008         	call	_BusyXLCD	;wreg free
  3106  000DB8  0900               	iorlw	0
  3107  000DBA  A4D8               	btfss	status,2,c
  3108  000DBC  D7FB               	goto	l3094
  3109  000DBE  0E08               	movlw	8
  3110  000DC0  ECAC  F008         	call	_WriteCmdXLCD
  3111  000DC4                     l3098:
  3112  000DC4  ECCB  F008         	call	_BusyXLCD	;wreg free
  3113  000DC8  0900               	iorlw	0
  3114  000DCA  A4D8               	btfss	status,2,c
  3115  000DCC  D7FB               	goto	l3098
  3116  000DCE  0E0F               	movlw	15
  3117  000DD0  ECAC  F008         	call	_WriteCmdXLCD
  3118  000DD4                     l3102:
  3119  000DD4  ECCB  F008         	call	_BusyXLCD	;wreg free
  3120  000DD8  0900               	iorlw	0
  3121  000DDA  A4D8               	btfss	status,2,c
  3122  000DDC  D7FB               	goto	l3102
  3123  000DDE  0E01               	movlw	1
  3124  000DE0  ECAC  F008         	call	_WriteCmdXLCD
  3125  000DE4                     l3106:
  3126  000DE4  ECCB  F008         	call	_BusyXLCD	;wreg free
  3127  000DE8  0900               	iorlw	0
  3128  000DEA  A4D8               	btfss	status,2,c
  3129  000DEC  D7FB               	goto	l3106
  3130  000DEE  0E04               	movlw	4
  3131  000DF0  ECAC  F008         	call	_WriteCmdXLCD
  3132  000DF4                     l3110:
  3133  000DF4  ECCB  F008         	call	_BusyXLCD	;wreg free
  3134  000DF8  0900               	iorlw	0
  3135  000DFA  A4D8               	btfss	status,2,c
  3136  000DFC  D7FB               	goto	l3110
  3137  000DFE  0E80               	movlw	128
  3138  000E00  EC43  F008         	call	_SetDDRamAddr
  3139  000E04  0012               	return	
  3140  000E06                     __end_of_OpenXLCD:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           intcon	equ	0xFF2
  3149                           indf0	equ	0xFEF
  3150                           postinc0	equ	0xFEE
  3151                           fsr0h	equ	0xFEA
  3152                           fsr0l	equ	0xFE9
  3153                           wreg	equ	0xFE8
  3154                           postdec1	equ	0xFE5
  3155                           fsr1l	equ	0xFE1
  3156                           indf2	equ	0xFDF
  3157                           postinc2	equ	0xFDE
  3158                           postdec2	equ	0xFDD
  3159                           fsr2h	equ	0xFDA
  3160                           fsr2l	equ	0xFD9
  3161                           status	equ	0xFD8
  3162                           
  3163 ;; *************** function _WriteCmdXLCD *****************
  3164 ;; Defined at:
  3165 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  cmd             1    wreg     unsigned char 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  cmd             1   18[COMRAM] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3179 ;;      Params:         0       0       0       0       0       0       0       0       0
  3180 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3182 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3183 ;;Total ram usage:        1 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    3
  3186 ;; This function calls:
  3187 ;;		_DelayFor18TCY
  3188 ;; This function is called by:
  3189 ;;		_init_XLCD
  3190 ;;		_OpenXLCD
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text15
  3195  001158                     __ptext15:
  3196                           	opt stack 0
  3197  001158                     _WriteCmdXLCD:
  3198                           	opt stack 26
  3199                           
  3200                           ;incstack = 0
  3201                           ;WriteCmdXLCD@cmd stored from wreg
  3202  001158  6E13               	movwf	WriteCmdXLCD@cmd,c
  3203  00115A  0EF0               	movlw	240
  3204  00115C  1693               	andwf	3987,f,c	;volatile
  3205  00115E  0EF0               	movlw	240
  3206  001160  1681               	andwf	3969,f,c	;volatile
  3207  001162  3813               	swapf	WriteCmdXLCD@cmd,w,c
  3208  001164  0B0F               	andlw	15
  3209  001166  0B0F               	andlw	15
  3210  001168  1281               	iorwf	3969,f,c	;volatile
  3211  00116A  9C8A               	bcf	3978,6,c	;volatile
  3212  00116C  9A8A               	bcf	3978,5,c	;volatile
  3213  00116E  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3214  001172  888A               	bsf	3978,4,c	;volatile
  3215  001174  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3216  001178  988A               	bcf	3978,4,c	;volatile
  3217  00117A  0EF0               	movlw	240
  3218  00117C  1681               	andwf	3969,f,c	;volatile
  3219  00117E  5013               	movf	WriteCmdXLCD@cmd,w,c
  3220  001180  0B0F               	andlw	15
  3221  001182  1281               	iorwf	3969,f,c	;volatile
  3222  001184  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3223  001188  888A               	bsf	3978,4,c	;volatile
  3224  00118A  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3225  00118E  988A               	bcf	3978,4,c	;volatile
  3226  001190  0E0F               	movlw	15
  3227  001192  1293               	iorwf	3987,f,c	;volatile
  3228  001194  0012               	return	
  3229  001196                     __end_of_WriteCmdXLCD:
  3230                           	opt stack 0
  3231                           tblptru	equ	0xFF8
  3232                           tblptrh	equ	0xFF7
  3233                           tblptrl	equ	0xFF6
  3234                           tablat	equ	0xFF5
  3235                           prodh	equ	0xFF4
  3236                           prodl	equ	0xFF3
  3237                           intcon	equ	0xFF2
  3238                           indf0	equ	0xFEF
  3239                           postinc0	equ	0xFEE
  3240                           fsr0h	equ	0xFEA
  3241                           fsr0l	equ	0xFE9
  3242                           wreg	equ	0xFE8
  3243                           postdec1	equ	0xFE5
  3244                           fsr1l	equ	0xFE1
  3245                           indf2	equ	0xFDF
  3246                           postinc2	equ	0xFDE
  3247                           postdec2	equ	0xFDD
  3248                           fsr2h	equ	0xFDA
  3249                           fsr2l	equ	0xFD9
  3250                           status	equ	0xFD8
  3251                           
  3252 ;; *************** function _SetDDRamAddr *****************
  3253 ;; Defined at:
  3254 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  DDaddr          1    wreg     unsigned char 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  DDaddr          1   21[COMRAM] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3268 ;;      Params:         0       0       0       0       0       0       0       0       0
  3269 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3270 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3271 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3272 ;;Total ram usage:        4 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    3
  3275 ;; This function calls:
  3276 ;;		_DelayFor18TCY
  3277 ;; This function is called by:
  3278 ;;		_atualiza_Tela
  3279 ;;		_OpenXLCD
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text16
  3284  001086                     __ptext16:
  3285                           	opt stack 0
  3286  001086                     _SetDDRamAddr:
  3287                           	opt stack 25
  3288                           
  3289                           ;incstack = 0
  3290                           ;SetDDRamAddr@DDaddr stored from wreg
  3291  001086  6E16               	movwf	SetDDRamAddr@DDaddr,c
  3292  001088  0EF0               	movlw	240
  3293  00108A  1693               	andwf	3987,f,c	;volatile
  3294  00108C  0EF0               	movlw	240
  3295  00108E  1681               	andwf	3969,f,c	;volatile
  3296  001090  5016               	movf	SetDDRamAddr@DDaddr,w,c
  3297  001092  6E13               	movwf	??_SetDDRamAddr& (0+255),c
  3298  001094  6A14               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  3299  001096  8E13               	bsf	??_SetDDRamAddr,7,c
  3300  001098  0E04               	movlw	4
  3301  00109A  6E15               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  3302  00109C                     u2065:
  3303  00109C  3414               	rlcf	??_SetDDRamAddr+1,w,c
  3304  00109E  3214               	rrcf	??_SetDDRamAddr+1,f,c
  3305  0010A0  3213               	rrcf	??_SetDDRamAddr,f,c
  3306  0010A2  2E15               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  3307  0010A4  D7FB               	goto	u2065
  3308  0010A6  5013               	movf	??_SetDDRamAddr,w,c
  3309  0010A8  0B0F               	andlw	15
  3310  0010AA  1281               	iorwf	3969,f,c	;volatile
  3311  0010AC  9C8A               	bcf	3978,6,c	;volatile
  3312  0010AE  9A8A               	bcf	3978,5,c	;volatile
  3313  0010B0  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3314  0010B4  888A               	bsf	3978,4,c	;volatile
  3315  0010B6  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3316  0010BA  988A               	bcf	3978,4,c	;volatile
  3317  0010BC  0EF0               	movlw	240
  3318  0010BE  1681               	andwf	3969,f,c	;volatile
  3319  0010C0  5016               	movf	SetDDRamAddr@DDaddr,w,c
  3320  0010C2  0B0F               	andlw	15
  3321  0010C4  1281               	iorwf	3969,f,c	;volatile
  3322  0010C6  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3323  0010CA  888A               	bsf	3978,4,c	;volatile
  3324  0010CC  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3325  0010D0  988A               	bcf	3978,4,c	;volatile
  3326  0010D2  0E0F               	movlw	15
  3327  0010D4  1293               	iorwf	3987,f,c	;volatile
  3328  0010D6  0012               	return	
  3329  0010D8                     __end_of_SetDDRamAddr:
  3330                           	opt stack 0
  3331                           tblptru	equ	0xFF8
  3332                           tblptrh	equ	0xFF7
  3333                           tblptrl	equ	0xFF6
  3334                           tablat	equ	0xFF5
  3335                           prodh	equ	0xFF4
  3336                           prodl	equ	0xFF3
  3337                           intcon	equ	0xFF2
  3338                           indf0	equ	0xFEF
  3339                           postinc0	equ	0xFEE
  3340                           fsr0h	equ	0xFEA
  3341                           fsr0l	equ	0xFE9
  3342                           wreg	equ	0xFE8
  3343                           postdec1	equ	0xFE5
  3344                           fsr1l	equ	0xFE1
  3345                           indf2	equ	0xFDF
  3346                           postinc2	equ	0xFDE
  3347                           postdec2	equ	0xFDD
  3348                           fsr2h	equ	0xFDA
  3349                           fsr2l	equ	0xFD9
  3350                           status	equ	0xFD8
  3351                           
  3352 ;; *************** function _DelayPORXLCD *****************
  3353 ;; Defined at:
  3354 ;;		line 76 in file "main.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3368 ;;      Params:         0       0       0       0       0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3371 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3372 ;;Total ram usage:        0 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    2
  3375 ;; This function calls:
  3376 ;;		_Delay1KTCYx
  3377 ;; This function is called by:
  3378 ;;		_OpenXLCD
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text17
  3383  00128A                     __ptext17:
  3384                           	opt stack 0
  3385  00128A                     _DelayPORXLCD:
  3386                           	opt stack 26
  3387                           
  3388                           ;main.c: 77: Delay1KTCYx(180);
  3389                           
  3390                           ;incstack = 0
  3391  00128A  0EB4               	movlw	180
  3392  00128C  EC2F  F009         	call	_Delay1KTCYx
  3393  001290  0012               	return	
  3394  001292                     __end_of_DelayPORXLCD:
  3395                           	opt stack 0
  3396                           tblptru	equ	0xFF8
  3397                           tblptrh	equ	0xFF7
  3398                           tblptrl	equ	0xFF6
  3399                           tablat	equ	0xFF5
  3400                           prodh	equ	0xFF4
  3401                           prodl	equ	0xFF3
  3402                           intcon	equ	0xFF2
  3403                           indf0	equ	0xFEF
  3404                           postinc0	equ	0xFEE
  3405                           fsr0h	equ	0xFEA
  3406                           fsr0l	equ	0xFE9
  3407                           wreg	equ	0xFE8
  3408                           postdec1	equ	0xFE5
  3409                           fsr1l	equ	0xFE1
  3410                           indf2	equ	0xFDF
  3411                           postinc2	equ	0xFDE
  3412                           postdec2	equ	0xFDD
  3413                           fsr2h	equ	0xFDA
  3414                           fsr2l	equ	0xFD9
  3415                           status	equ	0xFD8
  3416                           
  3417 ;; *************** function _Delay1KTCYx *****************
  3418 ;; Defined at:
  3419 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  unit            1    wreg     unsigned char 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  unit            1   17[COMRAM] unsigned char 
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		wreg
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3433 ;;      Params:         0       0       0       0       0       0       0       0       0
  3434 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3436 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3437 ;;Total ram usage:        1 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    1
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_DelayPORXLCD
  3444 ;;		_DelayXLCD
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text18
  3449  00125E                     __ptext18:
  3450                           	opt stack 0
  3451  00125E                     _Delay1KTCYx:
  3452                           	opt stack 26
  3453                           
  3454                           ;incstack = 0
  3455                           ;Delay1KTCYx@unit stored from wreg
  3456  00125E  6E12               	movwf	Delay1KTCYx@unit,c
  3457  001260  0EC8               	movlw	200
  3458  001262                     u2587:
  3459  001262  D000               	nop2	
  3460  001264  2EE8               	decfsz	wreg,f,c
  3461  001266  D7FD               	bra	u2587
  3462  001268  2E12               	decfsz	Delay1KTCYx@unit,f,c
  3463  00126A  D7FA               	goto	l2792
  3464  00126C  0012               	return	
  3465  00126E                     __end_of_Delay1KTCYx:
  3466                           	opt stack 0
  3467                           tblptru	equ	0xFF8
  3468                           tblptrh	equ	0xFF7
  3469                           tblptrl	equ	0xFF6
  3470                           tablat	equ	0xFF5
  3471                           prodh	equ	0xFF4
  3472                           prodl	equ	0xFF3
  3473                           intcon	equ	0xFF2
  3474                           indf0	equ	0xFEF
  3475                           postinc0	equ	0xFEE
  3476                           fsr0h	equ	0xFEA
  3477                           fsr0l	equ	0xFE9
  3478                           wreg	equ	0xFE8
  3479                           postdec1	equ	0xFE5
  3480                           fsr1l	equ	0xFE1
  3481                           indf2	equ	0xFDF
  3482                           postinc2	equ	0xFDE
  3483                           postdec2	equ	0xFDD
  3484                           fsr2h	equ	0xFDA
  3485                           fsr2l	equ	0xFD9
  3486                           status	equ	0xFD8
  3487                           
  3488 ;; *************** function _Delay10KTCYx *****************
  3489 ;; Defined at:
  3490 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  unit            1    wreg     unsigned char 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  unit            1   18[COMRAM] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3504 ;;      Params:         0       0       0       0       0       0       0       0       0
  3505 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3506 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3507 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3508 ;;Total ram usage:        2 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    1
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_setaDespertador
  3515 ;;		_main
  3516 ;;		_OpenXLCD
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text19
  3521  001248                     __ptext19:
  3522                           	opt stack 0
  3523  001248                     _Delay10KTCYx:
  3524                           	opt stack 28
  3525                           
  3526                           ;incstack = 0
  3527                           ;Delay10KTCYx@unit stored from wreg
  3528  001248  6E13               	movwf	Delay10KTCYx@unit,c
  3529  00124A  0E0D               	movlw	13
  3530  00124C  6E12               	movwf	??_Delay10KTCYx& (0+255),c
  3531  00124E  0EFC               	movlw	252
  3532  001250                     u2597:
  3533  001250  2EE8               	decfsz	wreg,f,c
  3534  001252  D7FE               	bra	u2597
  3535  001254  2E12               	decfsz	??_Delay10KTCYx& (0+255),f,c
  3536  001256  D7FC               	bra	u2597
  3537  001258  2E13               	decfsz	Delay10KTCYx@unit,f,c
  3538  00125A  D7F7               	goto	l2996
  3539  00125C  0012               	return	
  3540  00125E                     __end_of_Delay10KTCYx:
  3541                           	opt stack 0
  3542                           tblptru	equ	0xFF8
  3543                           tblptrh	equ	0xFF7
  3544                           tblptrl	equ	0xFF6
  3545                           tablat	equ	0xFF5
  3546                           prodh	equ	0xFF4
  3547                           prodl	equ	0xFF3
  3548                           intcon	equ	0xFF2
  3549                           indf0	equ	0xFEF
  3550                           postinc0	equ	0xFEE
  3551                           fsr0h	equ	0xFEA
  3552                           fsr0l	equ	0xFE9
  3553                           wreg	equ	0xFE8
  3554                           postdec1	equ	0xFE5
  3555                           fsr1l	equ	0xFE1
  3556                           indf2	equ	0xFDF
  3557                           postinc2	equ	0xFDE
  3558                           postdec2	equ	0xFDD
  3559                           fsr2h	equ	0xFDA
  3560                           fsr2l	equ	0xFD9
  3561                           status	equ	0xFD8
  3562                           
  3563 ;; *************** function _BusyXLCD *****************
  3564 ;; Defined at:
  3565 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      unsigned char 
  3572 ;; Registers used:
  3573 ;;		wreg, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3579 ;;      Params:         0       0       0       0       0       0       0       0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3581 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3582 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3583 ;;Total ram usage:        0 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    3
  3586 ;; This function calls:
  3587 ;;		_DelayFor18TCY
  3588 ;; This function is called by:
  3589 ;;		_init_XLCD
  3590 ;;		_OpenXLCD
  3591 ;;		_putrsXLCD
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text20
  3596  001196                     __ptext20:
  3597                           	opt stack 0
  3598  001196                     _BusyXLCD:
  3599                           	opt stack 24
  3600                           
  3601                           ;incstack = 0
  3602  001196  8C8A               	bsf	3978,6,c	;volatile
  3603  001198  9A8A               	bcf	3978,5,c	;volatile
  3604  00119A  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3605  00119E  888A               	bsf	3978,4,c	;volatile
  3606  0011A0  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3607  0011A4  A681               	btfss	3969,3,c	;volatile
  3608  0011A6  D00A               	goto	l303
  3609  0011A8  988A               	bcf	3978,4,c	;volatile
  3610  0011AA  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3611  0011AE  888A               	bsf	3978,4,c	;volatile
  3612  0011B0  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3613  0011B4  988A               	bcf	3978,4,c	;volatile
  3614  0011B6  9C8A               	bcf	3978,6,c	;volatile
  3615  0011B8  0E01               	movlw	1
  3616  0011BA  0012               	return	
  3617  0011BC                     l303:
  3618  0011BC  988A               	bcf	3978,4,c	;volatile
  3619  0011BE  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3620  0011C2  888A               	bsf	3978,4,c	;volatile
  3621  0011C4  EC49  F009         	call	_DelayFor18TCY	;wreg free
  3622  0011C8  988A               	bcf	3978,4,c	;volatile
  3623  0011CA  9C8A               	bcf	3978,6,c	;volatile
  3624  0011CC  0E00               	movlw	0
  3625  0011CE  0012               	return	
  3626  0011D0                     __end_of_BusyXLCD:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           tblptrh	equ	0xFF7
  3630                           tblptrl	equ	0xFF6
  3631                           tablat	equ	0xFF5
  3632                           prodh	equ	0xFF4
  3633                           prodl	equ	0xFF3
  3634                           intcon	equ	0xFF2
  3635                           indf0	equ	0xFEF
  3636                           postinc0	equ	0xFEE
  3637                           fsr0h	equ	0xFEA
  3638                           fsr0l	equ	0xFE9
  3639                           wreg	equ	0xFE8
  3640                           postdec1	equ	0xFE5
  3641                           fsr1l	equ	0xFE1
  3642                           indf2	equ	0xFDF
  3643                           postinc2	equ	0xFDE
  3644                           postdec2	equ	0xFDD
  3645                           fsr2h	equ	0xFDA
  3646                           fsr2l	equ	0xFD9
  3647                           status	equ	0xFD8
  3648                           
  3649 ;; *************** function _DelayFor18TCY *****************
  3650 ;; Defined at:
  3651 ;;		line 72 in file "main.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;		None
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3665 ;;      Params:         0       0       0       0       0       0       0       0       0
  3666 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3668 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3669 ;;Total ram usage:        0 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    2
  3672 ;; This function calls:
  3673 ;;		_Delay10TCYx
  3674 ;; This function is called by:
  3675 ;;		_BusyXLCD
  3676 ;;		_SetDDRamAddr
  3677 ;;		_WriteCmdXLCD
  3678 ;;		_WriteDataXLCD
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text21
  3683  001292                     __ptext21:
  3684                           	opt stack 0
  3685  001292                     _DelayFor18TCY:
  3686                           	opt stack 24
  3687                           
  3688                           ;main.c: 73: Delay10TCYx(120);
  3689                           
  3690                           ;incstack = 0
  3691  001292  0E78               	movlw	120
  3692  001294  EC37  F009         	call	_Delay10TCYx
  3693  001298  0012               	return		;funcret
  3694  00129A                     __end_of_DelayFor18TCY:
  3695                           	opt stack 0
  3696                           tblptru	equ	0xFF8
  3697                           tblptrh	equ	0xFF7
  3698                           tblptrl	equ	0xFF6
  3699                           tablat	equ	0xFF5
  3700                           prodh	equ	0xFF4
  3701                           prodl	equ	0xFF3
  3702                           intcon	equ	0xFF2
  3703                           indf0	equ	0xFEF
  3704                           postinc0	equ	0xFEE
  3705                           fsr0h	equ	0xFEA
  3706                           fsr0l	equ	0xFE9
  3707                           wreg	equ	0xFE8
  3708                           postdec1	equ	0xFE5
  3709                           fsr1l	equ	0xFE1
  3710                           indf2	equ	0xFDF
  3711                           postinc2	equ	0xFDE
  3712                           postdec2	equ	0xFDD
  3713                           fsr2h	equ	0xFDA
  3714                           fsr2l	equ	0xFD9
  3715                           status	equ	0xFD8
  3716                           
  3717 ;; *************** function _Delay10TCYx *****************
  3718 ;; Defined at:
  3719 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  unit            1    wreg     unsigned char 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  unit            1   17[COMRAM] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3733 ;;      Params:         0       0       0       0       0       0       0       0       0
  3734 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3736 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3737 ;;Total ram usage:        1 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_DelayFor18TCY
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text22
  3748  00126E                     __ptext22:
  3749                           	opt stack 0
  3750  00126E                     _Delay10TCYx:
  3751                           	opt stack 24
  3752                           
  3753                           ;incstack = 0
  3754                           ;Delay10TCYx@unit stored from wreg
  3755  00126E  6E12               	movwf	Delay10TCYx@unit,c
  3756  001270  0E03               	movlw	3
  3757  001272                     u2607:
  3758  001272  2EE8               	decfsz	wreg,f,c
  3759  001274  D7FE               	bra	u2607
  3760  001276  F000               	nop	
  3761  001278  2E12               	decfsz	Delay10TCYx@unit,f,c
  3762  00127A  D7FA               	goto	l2748
  3763  00127C  0012               	return	
  3764  00127E                     __end_of_Delay10TCYx:
  3765                           	opt stack 0
  3766                           tblptru	equ	0xFF8
  3767                           tblptrh	equ	0xFF7
  3768                           tblptrl	equ	0xFF6
  3769                           tablat	equ	0xFF5
  3770                           prodh	equ	0xFF4
  3771                           prodl	equ	0xFF3
  3772                           intcon	equ	0xFF2
  3773                           indf0	equ	0xFEF
  3774                           postinc0	equ	0xFEE
  3775                           fsr0h	equ	0xFEA
  3776                           fsr0l	equ	0xFE9
  3777                           wreg	equ	0xFE8
  3778                           postdec1	equ	0xFE5
  3779                           fsr1l	equ	0xFE1
  3780                           indf2	equ	0xFDF
  3781                           postinc2	equ	0xFDE
  3782                           postdec2	equ	0xFDD
  3783                           fsr2h	equ	0xFDA
  3784                           fsr2l	equ	0xFD9
  3785                           status	equ	0xFD8
  3786                           
  3787 ;; *************** function _pic_isr *****************
  3788 ;; Defined at:
  3789 ;;		line 90 in file "main.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3805 ;;      Temps:         17       0       0       0       0       0       0       0       0
  3806 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3807 ;;Total ram usage:       17 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		Interrupt level 1
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	intcodelo
  3817  000018                     __pintcodelo:
  3818                           	opt stack 0
  3819  000018                     _pic_isr:
  3820                           	opt stack 24
  3821                           
  3822                           ;incstack = 0
  3823  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  3824  00001A  CFD8 F001          	movff	status,??_pic_isr
  3825  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
  3826  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
  3827  000026  CFFA F004          	movff	pclath,??_pic_isr+3
  3828  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
  3829  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
  3830  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
  3831  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
  3832  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
  3833  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
  3834  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
  3835  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
  3836  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
  3837  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
  3838  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
  3839  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
  3840  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
  3841                           
  3842                           ;main.c: 94: if(TMR0IF){
  3843  00005E  A4F2               	btfss	intcon,2,c	;volatile
  3844  000060  D00D               	goto	i1l114
  3845                           
  3846                           ;main.c: 96: cont++;
  3847  000062  2A2D               	incf	_cont,f,c
  3848                           
  3849                           ;main.c: 97: if(cont > 1){
  3850  000064  0E01               	movlw	1
  3851  000066  642D               	cpfsgt	_cont,c
  3852  000068  D004               	goto	i1l113
  3853                           
  3854                           ;main.c: 98: flagSegundo = 1;
  3855  00006A  0E01               	movlw	1
  3856  00006C  6E2E               	movwf	_flagSegundo,c
  3857                           
  3858                           ;main.c: 99: cont = 0;
  3859  00006E  0E00               	movlw	0
  3860  000070  6E2D               	movwf	_cont,c
  3861  000072                     i1l113:
  3862                           
  3863                           ;main.c: 100: }
  3864                           ;main.c: 103: TMR0 = 26474;
  3865  000072  0E67               	movlw	103
  3866  000074  6ED7               	movwf	4055,c	;volatile
  3867  000076  0E6A               	movlw	106
  3868  000078  6ED6               	movwf	4054,c	;volatile
  3869                           
  3870                           ;main.c: 104: INTCONbits.TMR0IF = 0;
  3871  00007A  94F2               	bcf	intcon,2,c	;volatile
  3872  00007C                     i1l114:
  3873  00007C  C011  FFF5         	movff	??_pic_isr+16,tablat
  3874  000080  C010  FFF8         	movff	??_pic_isr+15,tblptru
  3875  000084  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
  3876  000088  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
  3877  00008C  C00D  FFF4         	movff	??_pic_isr+12,prodh
  3878  000090  C00C  FFF3         	movff	??_pic_isr+11,prodl
  3879  000094  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
  3880  000098  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
  3881  00009C  C009  FFE2         	movff	??_pic_isr+8,fsr1h
  3882  0000A0  C008  FFE1         	movff	??_pic_isr+7,fsr1l
  3883  0000A4  C007  FFEA         	movff	??_pic_isr+6,fsr0h
  3884  0000A8  C006  FFE9         	movff	??_pic_isr+5,fsr0l
  3885  0000AC  C005  FFFB         	movff	??_pic_isr+4,pclatu
  3886  0000B0  C004  FFFA         	movff	??_pic_isr+3,pclath
  3887  0000B4  C003  FFE0         	movff	??_pic_isr+2,bsr
  3888  0000B8  C002  FFE8         	movff	??_pic_isr+1,wreg
  3889  0000BC  C001  FFD8         	movff	??_pic_isr,status
  3890  0000C0  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  3891  0000C2  0010               	retfie	
  3892  0000C4                     __end_of_pic_isr:
  3893                           	opt stack 0
  3894                           pclatu	equ	0xFFB
  3895                           pclath	equ	0xFFA
  3896                           tblptru	equ	0xFF8
  3897                           tblptrh	equ	0xFF7
  3898                           tblptrl	equ	0xFF6
  3899                           tablat	equ	0xFF5
  3900                           prodh	equ	0xFF4
  3901                           prodl	equ	0xFF3
  3902                           intcon	equ	0xFF2
  3903                           indf0	equ	0xFEF
  3904                           postinc0	equ	0xFEE
  3905                           fsr0h	equ	0xFEA
  3906                           fsr0l	equ	0xFE9
  3907                           wreg	equ	0xFE8
  3908                           postdec1	equ	0xFE5
  3909                           fsr1h	equ	0xFE2
  3910                           fsr1l	equ	0xFE1
  3911                           bsr	equ	0xFE0
  3912                           indf2	equ	0xFDF
  3913                           postinc2	equ	0xFDE
  3914                           postdec2	equ	0xFDD
  3915                           fsr2h	equ	0xFDA
  3916                           fsr2l	equ	0xFD9
  3917                           status	equ	0xFD8
  3918                           pclatu	equ	0xFFB
  3919                           pclath	equ	0xFFA
  3920                           tblptru	equ	0xFF8
  3921                           tblptrh	equ	0xFF7
  3922                           tblptrl	equ	0xFF6
  3923                           tablat	equ	0xFF5
  3924                           prodh	equ	0xFF4
  3925                           prodl	equ	0xFF3
  3926                           intcon	equ	0xFF2
  3927                           indf0	equ	0xFEF
  3928                           postinc0	equ	0xFEE
  3929                           fsr0h	equ	0xFEA
  3930                           fsr0l	equ	0xFE9
  3931                           wreg	equ	0xFE8
  3932                           postdec1	equ	0xFE5
  3933                           fsr1h	equ	0xFE2
  3934                           fsr1l	equ	0xFE1
  3935                           bsr	equ	0xFE0
  3936                           indf2	equ	0xFDF
  3937                           postinc2	equ	0xFDE
  3938                           postdec2	equ	0xFDD
  3939                           fsr2h	equ	0xFDA
  3940                           fsr2l	equ	0xFD9
  3941                           status	equ	0xFD8
  3942                           
  3943                           	psect	rparam
  3944  0000                     pclatu	equ	0xFFB
  3945                           pclath	equ	0xFFA
  3946                           tblptru	equ	0xFF8
  3947                           tblptrh	equ	0xFF7
  3948                           tblptrl	equ	0xFF6
  3949                           tablat	equ	0xFF5
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           intcon	equ	0xFF2
  3953                           indf0	equ	0xFEF
  3954                           postinc0	equ	0xFEE
  3955                           fsr0h	equ	0xFEA
  3956                           fsr0l	equ	0xFE9
  3957                           wreg	equ	0xFE8
  3958                           postdec1	equ	0xFE5
  3959                           fsr1h	equ	0xFE2
  3960                           fsr1l	equ	0xFE1
  3961                           bsr	equ	0xFE0
  3962                           indf2	equ	0xFDF
  3963                           postinc2	equ	0xFDE
  3964                           postdec2	equ	0xFDD
  3965                           fsr2h	equ	0xFDA
  3966                           fsr2l	equ	0xFD9
  3967                           status	equ	0xFD8
  3968                           
  3969                           	psect	temp
  3970  00004E                     btemp:
  3971                           	opt stack 0
  3972  00004E                     	ds	1
  3973  0000                     int$flags	set	btemp
  3974                           pclatu	equ	0xFFB
  3975                           pclath	equ	0xFFA
  3976                           tblptru	equ	0xFF8
  3977                           tblptrh	equ	0xFF7
  3978                           tblptrl	equ	0xFF6
  3979                           tablat	equ	0xFF5
  3980                           prodh	equ	0xFF4
  3981                           prodl	equ	0xFF3
  3982                           intcon	equ	0xFF2
  3983                           indf0	equ	0xFEF
  3984                           postinc0	equ	0xFEE
  3985                           fsr0h	equ	0xFEA
  3986                           fsr0l	equ	0xFE9
  3987                           wreg	equ	0xFE8
  3988                           postdec1	equ	0xFE5
  3989                           fsr1h	equ	0xFE2
  3990                           fsr1l	equ	0xFE1
  3991                           bsr	equ	0xFE0
  3992                           indf2	equ	0xFDF
  3993                           postinc2	equ	0xFDE
  3994                           postdec2	equ	0xFDD
  3995                           fsr2h	equ	0xFDA
  3996                           fsr2l	equ	0xFD9
  3997                           status	equ	0xFD8


Data Sizes:
    Strings     67
    Constant    10
    Data        19
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      77
    BANK0           160     14      46
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[17]), STR_5(CODE[7]), 
		 -> STR_4(CODE[7]), versao(COMRAM[6]), STR_3(CODE[9]), STR_2(CODE[17]), 
		 -> horarioDespertador(COMRAM[6]), data_horario.data(BANK0[7]), data_horario.horario(BANK0[9]), data_horario(BANK0[20]), 
		 -> converteAnoString@anoStr(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 4
		 -> converteAnoString@anoStr(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), 

    sp__converteAnoString	PTR unsigned char  size(2) Largest target is 4
		 -> converteAnoString@anoStr(BANK0[4]), 


Critical Paths under _main in COMRAM

    _main->_atualiza_Tela
    _trata_relogio_data->_verificaAnoBissexto
    _verificaAnoBissexto->___awmod
    _setaDespertador->_atualiza_Tela
    _atualiza_Tela->_converteAnoString
    _putrsXLCD->_converteAnoString
    _converteAnoString->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _DelayFor18TCY->_Delay10TCYx

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _atualiza_Tela->_putrsXLCD
    _putrsXLCD->_converteAnoString
    _converteAnoString->_sprintf

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8535
                                             13 BANK0      1     1      0
                       _Delay10KTCYx
                      _atualiza_Tela
                          _init_XLCD
                    _setaDespertador
                 _trata_relogio_data
 ---------------------------------------------------------------------------------
 (1) _trata_relogio_data                                   5     5      0    1835
                                             27 COMRAM     5     5      0
                _verificaAnoBissexto
 ---------------------------------------------------------------------------------
 (2) _verificaAnoBissexto                                  4     2      2    1835
                                             23 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1665
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setaDespertador                                      0     0      0    3099
                       _Delay10KTCYx
                      _atualiza_Tela
 ---------------------------------------------------------------------------------
 (2) _atualiza_Tela                                        1     1      0    3068
                                             38 COMRAM     1     1      0
                       _SetDDRamAddr
                  _acionaDespertador
                  _converteAnoString
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (3) _putrsXLCD                                            2     0      2    1113
                                             11 BANK0      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
                  _converteAnoString (ARG)
 ---------------------------------------------------------------------------------
 (4) _WriteDataXLCD                                        1     1      0      93
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _converteAnoString                                    6     4      2    1831
                                             36 COMRAM     2     0      2
                                              7 BANK0      4     4      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             23    17      6    1631
                                             29 COMRAM     7     1      6
                                              0 BANK0      7     7      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     386
                                             24 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     395
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _acionaDespertador                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     434
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     310
                                             22 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      93
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      93
                                             18 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      31
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      31
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _BusyXLCD                                             0     0      0      31
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0      31
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (6) _Delay10TCYx                                          1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay10KTCYx
   _atualiza_Tela
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     _acionaDespertador
     _converteAnoString
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _converteAnoString (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _setaDespertador
     _Delay10KTCYx
     _atualiza_Tela
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _acionaDespertador
       _converteAnoString
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _converteAnoString (ARG)
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
   _trata_relogio_data
     _verificaAnoBissexto
       ___awmod

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      2E       5       28.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      4D       1       81.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7B      20        0.0%
DATA                 0      0      7B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed May 23 10:13:53 2018

                          bsr 000FE0                           l303 11BC                           l837 107C  
                         l847 1110         __size_of_WriteCmdXLCD 003E                  ___awmod@sign 0017  
                         wreg 000FE8                  __CFG_WDT$OFF 000000                          l3020 0EDE  
                        l3012 0EC4                          l3110 0DF4                          l3102 0DD4  
                        l3032 0F0A                          l3024 0EF2                          l3016 0ED2  
                        l3008 0EB8                          l3200 0C94                          l3106 0DE4  
                        l3130 0A14                          l3018 0EDA                          l3124 09D6  
                        l3028 0EFC                          l3054 102C                          l3046 100C  
                        l3230 0D20                          l3240 0D5A                          l3216 0CCC  
                        l3090 0DA4                          l3058 1030                          l3244 1230  
                        l3156 0A9C                          l3164 0AEA                          l3420 0BFC  
                        l3412 0BDA                          l3094 0DB4                          l3270 0E4E  
                        l3262 0E30                          l3422 0C06                          l3088 0D9A  
                        l3272 0E56                          l3432 0C24                          l3424 0C10  
                        l3098 0DC4                          l2810 08A8                          l3274 0E5C  
                        l2820 08D8                          l2804 087A                          l3292 0E8C  
                        l3268 0E46                          l2822 08DE                          l3294 0E94  
                        l3286 0E76                          l2760 104A                          l2840 0930  
                        l3296 0E9C                          l2762 1052                          l2842 0936  
                        l2834 0914                          l2850 0998                          l2748 1270  
                        l2772 1072                          l2764 1056                          l2780 10E6  
                        l2852 09B2                          l2782 10EE                          l2792 1260  
                        l2784 10F2                          l2848 098C                          l2788 1106  
                        l2798 085E                          l2994 0FB0                          l2996 124A  
                        l2988 0F7C   __end_of_verificaAnoBissexto 1034                          STR_1 084B  
                        STR_2 081C                          STR_3 082D                          STR_4 083D  
                        STR_5 0844                          STR_6 080B                          STR_7 0837  
                        STR_8 0836                          u2080 0FA6                          u2065 109C  
                        u2090 0FD0                          u2087 0F9C                          u2097 0FC6  
                        u2607 1272                          u2587 1262                          _PEIE 007F96  
                        u2597 1250                          _RCIE 007CED                          _RCIF 007CF5  
                        _RCIP 007CFD                          _TMR0 000FD6                          _TXIF 007CF4  
                        _cont 002D                          _main 0B00                          fsr0h 000FEA  
                        fsr1h 000FE2                          indf0 000FEF                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 004E        __size_of_WriteDataXLCD 003E  
                        prodh 000FF4                          prodl 000FF3                          start 00C4  
                ___param_bank 000000                 _atualiza_Tela 09C0                   _Delay10TCYx 126E  
       _flagDespertadorLigado 002C                  _WriteCmdXLCD 1158                   _Delay1KTCYx 125E  
               ?_SetDDRamAddr 0001                         ?_main 0001               __end_of___awmod 0F14  
             __end_of___lwdiv 1086                         i1l113 0072                         i1l114 007C  
             __end_of___lwmod 111A                         _RCREG 000FAE                         _RCSTA 000FAB  
                       _SPBRG 000FAF                         _PORTB 000F81                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TXREG 000FAD  
       __size_of_Delay10KTCYx 0016                         _TXSTA 000FAC               __end_of_dpowers 080B  
             __end_of_pic_isr 00C4                         pclath 000FFA                         tablat 000FF5  
                       status 000FD8               __end_of_sprintf 09C0             ??_setaDespertador 0028  
             __initialization 0F14                ?_atualiza_Tela 0001                  __end_of_main 0C32  
            __end_of_BusyXLCD 11D0                  _Delay10KTCYx 1248         __size_of_DelayPORXLCD 0008  
              ??_SetDDRamAddr 0013    __end_of_trata_relogio_data 0D62              __end_of_OpenXLCD 0E06  
                      ??_main 0028                 __activetblptr 000002                 _WriteDataXLCD 111A  
            _tempoDespertador 0029                        _ADCON1 000FC1                        _TMR0IF 007F92  
                _DelayPORXLCD 128A                     ??___awmod 0016                     ??___lwdiv 0016  
                   ??___lwmod 001D                        _estado 002F                        clear_0 0F5A  
                      clear_1 0F66               ___awmod@divisor 0014               ___awmod@counter 0016  
                      _versao 0048                ?_WriteDataXLCD 0001     atualiza_Tela@troca_ou_nao 0027  
                __pdataCOMRAM 0047                     ??_pic_isr 0001                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
           _converteAnoString 1204                     ??_sprintf 0024            ?_converteAnoString 0025  
                  __accesstop 0060       __end_of__initialization 0F6C               __CFG_PBADEN$OFF 000000  
               ___rparam_used 000001               ??_atualiza_Tela 0027           ??_converteAnoString 0027  
              __pcstackCOMRAM 0001                  __pidataBANK0 127E                  _data_horario 0060  
   __end_of_converteAnoString 122A        __size_of_DelayFor18TCY 0008                    __pbssBANK0 0060  
                   ?_BusyXLCD 0001               WriteCmdXLCD@cmd 0013          __end_of_SetDDRamAddr 10D8  
          __size_of_init_XLCD 001E                     ?_OpenXLCD 0001             WriteDataXLCD@data 0013  
                ?_Delay10TCYx 0001               ??_WriteDataXLCD 0013                  ?_Delay1KTCYx 0001  
      verificaAnoBissexto@ano 0018                       _BUFFCOM 0037          converteAnoString@ano 0025  
             _setaDespertador 0E06            __size_of_putrsXLCD 005E                    ??_BusyXLCD 0013  
                  ??_OpenXLCD 0017  __size_of_verificaAnoBissexto 005C                       __Hparam 0000  
                     __Lparam 0000                 _DelayFor18TCY 1292                       ___awmod 0EA4  
                     ___lwdiv 1034                       ___lwmod 10D8                  __psmallconst 0800  
                     __pcinit 0F14               putrsXLCD@buffer 007F               Delay10TCYx@unit 0012  
                     __ramtop 0800                       __ptext0 0B00                       __ptext1 0C32  
                     __ptext2 0FD8                       __ptext3 0EA4                       __ptext4 0E06  
                     __ptext5 09C0                       __ptext6 0F7A                       __ptext7 111A  
                     __ptext8 1204                       __ptext9 0850             __end_of_init_XLCD 1248  
                   _T0CONbits 000FD5                       _dpowers 0801                       _pic_isr 0018  
  __size_of_converteAnoString 0026              ___awmod@dividend 0012                       _sprintf 0850  
        end_of_initialization 0F6C            _trata_relogio_data 0C32                 __Lmediumconst 0000  
                  _tela_atual 0028           ?_trata_relogio_data 0001                ?_DelayFor18TCY 0001  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE             __end_of_putrsXLCD 0FD8                     _PORTCbits 000F82  
                   _PORTDbits 000F83          ??_trata_relogio_data 001C       __end_of_setaDespertador 0EA4  
                   _TRISBbits 000F93                     _TRISCbits 000F94         __size_of_SetDDRamAddr 0052  
        __size_of_Delay10TCYx 0010                 __pidataCOMRAM 129A                  _SetDDRamAddr 1086  
          _horarioDespertador 003E          __size_of_Delay1KTCYx 0010            SetDDRamAddr@DDaddr 0016  
         start_initialization 0F14             __size_of_BusyXLCD 003A                  _pegaHoraData 0044  
             ??_DelayFor18TCY 0013         __end_of_atualiza_Tela 0B00             __size_of_OpenXLCD 00A4  
               ?_WriteCmdXLCD 0001                   __pdataBANK0 0082              ?_setaDespertador 0001  
                 __pbssCOMRAM 0028           _verificaAnoBissexto 0FD8                 __pcstackBANK0 0074  
             Delay1KTCYx@unit 0012                   sprintf@flag 0076                   sprintf@prec 0077  
        ?_verificaAnoBissexto 0018              ___lwdiv@dividend 0012                ??_WriteCmdXLCD 0013  
                    ?___awmod 0012                 ?_Delay10KTCYx 0001                      ?___lwdiv 0012  
                    ?___lwmod 0019                   __pintcodelo 0018                     _botaoHora 002B  
                 _flagSegundo 002E         __end_of_WriteDataXLCD 1158                   __smallconst 0800  
                    ?_pic_isr 0001                     _init_XLCD 122A              ___lwdiv@quotient 0017  
                    ?_sprintf 001E                      _BUFFRESP 0030             _acionaDespertador 11D0  
          ?_acionaDespertador 0001                      _LATBbits 000F8A         ??_verificaAnoBissexto 001A  
               ?_DelayPORXLCD 0001                      _PIR1bits 000F9E               OpenXLCD@lcdtype 0017  
         ??_acionaDespertador 0012                ??_Delay10KTCYx 0012                     main@botao 0081  
                   _putrsXLCD 0F7A              Delay10KTCYx@unit 0013                    ?_init_XLCD 0001  
   __end_of_acionaDespertador 1204                     copy_data0 0F28                     copy_data1 0F48  
                    _BusyXLCD 1196                ??_DelayPORXLCD 0013                      _OpenXLCD 0D62  
                    __Hrparam 0000                      __Lrparam 0000              __size_of___awmod 0070  
            __size_of___lwdiv 0052              __size_of___lwmod 0042                    sprintf@val 0078  
                  ?_putrsXLCD 007F   __size_of_trata_relogio_data 0130              __size_of_pic_isr 00AC  
                    _dias_mes 0082               ___lwdiv@divisor 0014               ___lwdiv@counter 0016  
                    __ptext10 10D8                      __ptext11 1034                      __ptext20 1196  
                    __ptext12 11D0                      __ptext21 1292                      __ptext13 122A  
                    __ptext22 126E                      __ptext14 0D62                      __ptext15 1158  
                    __ptext16 1086                      __ptext17 128A                      __ptext18 125E  
                    __ptext19 1248                      _botaoMin 002A          __end_of_WriteCmdXLCD 1196  
            __size_of_sprintf 0170                 __size_of_main 0132       converteAnoString@anoStr 007B  
               ??_Delay10TCYx 0012                      int$flags 004E                 ??_Delay1KTCYx 0012  
                    _virouDia 0047                    _INTCONbits 000FF2                   ??_init_XLCD 0018  
  __size_of_acionaDespertador 0034          __end_of_Delay10KTCYx 125E                      intlevel1 0000  
                   sprintf@ap 0074                     sprintf@sp 001E              ___lwmod@dividend 0019  
       __end_of_DelayFor18TCY 129A           __end_of_Delay10TCYx 127E                      sprintf@c 007A  
                    sprintf@f 0020          __end_of_DelayPORXLCD 1292                   ??_putrsXLCD 0027  
             ___lwmod@divisor 001B           __end_of_Delay1KTCYx 126E               ___lwmod@counter 001D  
      __size_of_atualiza_Tela 0140      __size_of_setaDespertador 009E  
