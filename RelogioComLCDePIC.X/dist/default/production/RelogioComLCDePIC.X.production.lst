

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jun 13 15:47:42 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 1.41
    62                           ; Generated 25/01/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataCOMRAM
    97  001A4C                     __pidataCOMRAM:
    98                           	opt stack 0
    99                           
   100                           ;initializer for _virouDia
   101  001A4C  01                 	db	1
   102                           
   103                           	psect	idataBANK0
   104  0019E2                     __pidataBANK0:
   105                           	opt stack 0
   106                           
   107                           ;initializer for _dias_mes
   108  0019E2  1F                 	db	31
   109  0019E3  1C                 	db	28
   110  0019E4  1F                 	db	31
   111  0019E5  1E                 	db	30
   112  0019E6  1F                 	db	31
   113  0019E7  1E                 	db	30
   114  0019E8  1F                 	db	31
   115  0019E9  1F                 	db	31
   116  0019EA  1E                 	db	30
   117  0019EB  1F                 	db	31
   118  0019EC  1E                 	db	30
   119  0019ED  1F                 	db	31
   120                           
   121                           ;initializer for _versao
   122  0019EE  30                 	db	48
   123  0019EF  31                 	db	49
   124  0019F0  2E                 	db	46
   125  0019F1  30                 	db	48
   126  0019F2  30                 	db	48
   127  0019F3  00                 	db	0
   128                           
   129                           	psect	smallconst
   130  000800                     __psmallconst:
   131                           	opt stack 0
   132  000800  00                 	db	0
   133  000801                     _dpowers:
   134                           	opt stack 0
   135  000801  0001               	dw	1
   136  000803  000A               	dw	10
   137  000805  0064               	dw	100
   138  000807  03E8               	dw	1000
   139  000809  2710               	dw	10000
   140  00080B                     __end_of_dpowers:
   141                           	opt stack 0
   142  0000                     _TMR0	set	4054
   143  0000                     _TRISBbits	set	3987
   144  0000                     _PORTB	set	3969
   145  0000                     _LATBbits	set	3978
   146  0000                     _T0CONbits	set	4053
   147  0000                     _TRISCbits	set	3988
   148  0000                     _TXSTA	set	4012
   149  0000                     _RCSTA	set	4011
   150  0000                     _SPBRG	set	4015
   151  0000                     _TRISD	set	3989
   152  0000                     _TRISB	set	3987
   153  0000                     _ADCON1	set	4033
   154  0000                     _PORTCbits	set	3970
   155  0000                     _PORTDbits	set	3971
   156  0000                     _RCREG	set	4014
   157  0000                     _PIR1bits	set	3998
   158  0000                     _INTCONbits	set	4082
   159  0000                     _TXREG	set	4013
   160  0000                     _PEIE	set	32662
   161  0000                     _RCIE	set	31981
   162  0000                     _RCIP	set	31997
   163  0000                     _RCIF	set	31989
   164  0000                     _TMR0IF	set	32658
   165  0000                     _TXIF	set	31988
   166  00080B                     STR_8:
   167  00080B  20                 	db	32
   168  00080C  20                 	db	32
   169  00080D  20                 	db	32
   170  00080E  20                 	db	32
   171  00080F  20                 	db	32
   172  000810  41                 	db	65	;'A'
   173  000811  4C                 	db	76	;'L'
   174  000812  41                 	db	65	;'A'
   175  000813  52                 	db	82	;'R'
   176  000814  4D                 	db	77	;'M'
   177  000815  45                 	db	69	;'E'
   178  000816  20                 	db	32
   179  000817  20                 	db	32
   180  000818  20                 	db	32
   181  000819  20                 	db	32
   182  00081A  20                 	db	32
   183  00081B  00                 	db	0
   184  00081C                     STR_2:
   185  00081C  44                 	db	68	;'D'
   186  00081D  65                 	db	101	;'e'
   187  00081E  73                 	db	115	;'s'
   188  00081F  70                 	db	112	;'p'
   189  000820  65                 	db	101	;'e'
   190  000821  72                 	db	114	;'r'
   191  000822  74                 	db	116	;'t'
   192  000823  61                 	db	97	;'a'
   193  000824  64                 	db	100	;'d'
   194  000825  6F                 	db	111	;'o'
   195  000826  72                 	db	114	;'r'
   196  000827  20                 	db	32
   197  000828  20                 	db	32
   198  000829  20                 	db	32
   199  00082A  20                 	db	32
   200  00082B  20                 	db	32
   201  00082C  00                 	db	0
   202  00082D                     STR_5:
   203  00082D  25                 	db	37
   204  00082E  69                 	db	105	;'i'
   205  00082F  25                 	db	37
   206  000830  69                 	db	105	;'i'
   207  000831  3A                 	db	58	;':'
   208  000832  25                 	db	37
   209  000833  69                 	db	105	;'i'
   210  000834  25                 	db	37
   211  000835  69                 	db	105	;'i'
   212  000836  3A                 	db	58	;':'
   213  000837  25                 	db	37
   214  000838  69                 	db	105	;'i'
   215  000839  25                 	db	37
   216  00083A  69                 	db	105	;'i'
   217  00083B  00                 	db	0
   218  00083C                     STR_7:
   219  00083C  25                 	db	37
   220  00083D  69                 	db	105	;'i'
   221  00083E  25                 	db	37
   222  00083F  69                 	db	105	;'i'
   223  000840  2F                 	db	47
   224  000841  25                 	db	37
   225  000842  69                 	db	105	;'i'
   226  000843  25                 	db	37
   227  000844  69                 	db	105	;'i'
   228  000845  2F                 	db	47
   229  000846  00                 	db	0
   230  000847                     STR_3:
   231  000847  56                 	db	86	;'V'
   232  000848  65                 	db	101	;'e'
   233  000849  72                 	db	114	;'r'
   234  00084A  73                 	db	115	;'s'
   235  00084B  61                 	db	97	;'a'
   236  00084C  6F                 	db	111	;'o'
   237  00084D  3A                 	db	58	;':'
   238  00084E  20                 	db	32
   239  00084F  00                 	db	0
   240  000850                     STR_11:
   241  000850  20                 	db	32
   242  000851  20                 	db	32
   243  000852  20                 	db	32
   244  000853  20                 	db	32
   245  000854  20                 	db	32
   246  000855  20                 	db	32
   247  000856  00                 	db	0
   248  000857                     STR_4:
   249  000857  48                 	db	72	;'H'
   250  000858  6F                 	db	111	;'o'
   251  000859  72                 	db	114	;'r'
   252  00085A  61                 	db	97	;'a'
   253  00085B  3A                 	db	58	;':'
   254  00085C  20                 	db	32
   255  00085D  00                 	db	0
   256  00085E                     STR_6:
   257  00085E  44                 	db	68	;'D'
   258  00085F  61                 	db	97	;'a'
   259  000860  74                 	db	116	;'t'
   260  000861  61                 	db	97	;'a'
   261  000862  3A                 	db	58	;':'
   262  000863  20                 	db	32
   263  000864  00                 	db	0
   264  0000                     
   265                           ; #config settings
   266  000865  00                 	db	0	; dummy byte at the end
   267  0000                     
   268                           	psect	cinit
   269  001580                     __pcinit:
   270                           	opt stack 0
   271  001580                     start_initialization:
   272                           	opt stack 0
   273  001580                     __initialization:
   274                           	opt stack 0
   275                           
   276                           ; Initialize objects allocated to BANK0 (18 bytes)
   277                           ; load TBLPTR registers with __pidataBANK0
   278  001580  0EE2               	movlw	low __pidataBANK0
   279  001582  6EF6               	movwf	tblptrl,c
   280  001584  0E19               	movlw	high __pidataBANK0
   281  001586  6EF7               	movwf	tblptrh,c
   282  001588  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   283  00158A  6EF8               	movwf	tblptru,c
   284  00158C  EE00  F099         	lfsr	0,__pdataBANK0
   285  001590  EE10 F012          	lfsr	1,18
   286  001594                     copy_data0:
   287  001594  0009               	tblrd		*+
   288  001596  CFF5 FFEE          	movff	tablat,postinc0
   289  00159A  50E5               	movf	postdec1,w,c
   290  00159C  50E1               	movf	fsr1l,w,c
   291  00159E  E1FA               	bnz	copy_data0
   292                           
   293                           ; Initialize objects allocated to COMRAM (1 bytes)
   294                           ; load TBLPTR registers with __pidataCOMRAM
   295  0015A0  0E4C               	movlw	low __pidataCOMRAM
   296  0015A2  6EF6               	movwf	tblptrl,c
   297  0015A4  0E1A               	movlw	high __pidataCOMRAM
   298  0015A6  6EF7               	movwf	tblptrh,c
   299  0015A8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   300  0015AA  6EF8               	movwf	tblptru,c
   301  0015AC  0009               	tblrd		*+	;fetch initializer
   302  0015AE  CFF5 F048          	movff	tablat,__pdataCOMRAM
   303                           
   304                           ; Clear objects allocated to BANK0 (35 bytes)
   305  0015B2  EE00  F060         	lfsr	0,__pbssBANK0
   306  0015B6  0E23               	movlw	35
   307  0015B8                     clear_0:
   308  0015B8  6AEE               	clrf	postinc0,c
   309  0015BA  06E8               	decf	wreg,f,c
   310  0015BC  E1FD               	bnz	clear_0
   311                           
   312                           ; Clear objects allocated to COMRAM (25 bytes)
   313  0015BE  EE00  F02F         	lfsr	0,__pbssCOMRAM
   314  0015C2  0E19               	movlw	25
   315  0015C4                     clear_1:
   316  0015C4  6AEE               	clrf	postinc0,c
   317  0015C6  06E8               	decf	wreg,f,c
   318  0015C8  E1FD               	bnz	clear_1
   319  0015CA                     end_of_initialization:
   320                           	opt stack 0
   321  0015CA                     __end_of__initialization:
   322                           	opt stack 0
   323  0015CA  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   324  0015CC  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   325  0015CE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   326  0015D0  6EF8               	movwf	tblptru,c
   327  0015D2  0100               	movlb	0
   328  0015D4  EFB6  F007         	goto	_main	;jump to C main() function
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           
   338                           	psect	bssCOMRAM
   339  00002F                     __pbssCOMRAM:
   340                           	opt stack 0
   341  00002F                     _horarioDespertador:
   342                           	opt stack 0
   343  00002F                     	ds	6
   344  000035                     _tela_atual:
   345                           	opt stack 0
   346  000035                     	ds	1
   347  000036                     _tempoDespertador:
   348                           	opt stack 0
   349  000036                     	ds	1
   350  000037                     _botaoMin:
   351                           	opt stack 0
   352  000037                     	ds	1
   353  000038                     _botaoHora:
   354                           	opt stack 0
   355  000038                     	ds	1
   356  000039                     _flagDespertadorLigado:
   357                           	opt stack 0
   358  000039                     	ds	1
   359  00003A                     _cont:
   360                           	opt stack 0
   361  00003A                     	ds	1
   362  00003B                     _flagSegundo:
   363                           	opt stack 0
   364  00003B                     	ds	1
   365  00003C                     _i:
   366                           	opt stack 0
   367  00003C                     	ds	1
   368  00003D                     _estado:
   369                           	opt stack 0
   370  00003D                     	ds	1
   371  00003E                     _BUFFCOM:
   372                           	opt stack 0
   373  00003E                     	ds	7
   374  000045                     _pegaHoraData:
   375                           	opt stack 0
   376  000045                     	ds	3
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	dataCOMRAM
   387  000048                     __pdataCOMRAM:
   388                           	opt stack 0
   389  000048                     _virouDia:
   390                           	opt stack 0
   391  000048                     	ds	1
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	bssBANK0
   402  000060                     __pbssBANK0:
   403                           	opt stack 0
   404  000060                     _data_horario:
   405                           	opt stack 0
   406  000060                     	ds	20
   407  000074                     _vet:
   408                           	opt stack 0
   409  000074                     	ds	8
   410  00007C                     _BUFFRESP:
   411                           	opt stack 0
   412  00007C                     	ds	7
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           wreg	equ	0xFE8
   419                           postdec1	equ	0xFE5
   420                           fsr1l	equ	0xFE1
   421                           
   422                           	psect	dataBANK0
   423  000099                     __pdataBANK0:
   424                           	opt stack 0
   425  000099                     _dias_mes:
   426                           	opt stack 0
   427  000099                     	ds	12
   428  0000A5                     _versao:
   429                           	opt stack 0
   430  0000A5                     	ds	6
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           postdec1	equ	0xFE5
   438                           fsr1l	equ	0xFE1
   439                           
   440                           	psect	cstackBANK0
   441  000083                     __pcstackBANK0:
   442                           	opt stack 0
   443  000083                     ?_sprintf:
   444                           	opt stack 0
   445  000083                     sprintf@sp:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x0
   449  000083                     	ds	2
   450  000085                     sprintf@f:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x2
   454  000085                     	ds	14
   455  000093                     converteAnoString@anoStr:
   456                           	opt stack 0
   457                           
   458                           ; 4 bytes @ 0x10
   459  000093                     	ds	4
   460  000097                     atualiza_Tela@troca_ou_nao:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x14
   464  000097                     	ds	1
   465  000098                     main@botao:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x15
   469  000098                     	ds	1
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	cstackCOMRAM
   480  000001                     __pcstackCOMRAM:
   481                           	opt stack 0
   482  000001                     i1Delay10TCYx@unit:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x0
   486  000001                     	ds	1
   487  000002                     ??i1_SetDDRamAddr:
   488                           
   489                           ; 1 bytes @ 0x1
   490  000002                     	ds	3
   491  000005                     i1SetDDRamAddr@DDaddr:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x4
   495  000005                     	ds	1
   496  000006                     ??_pic_isr:
   497  000006                     
   498                           ; 1 bytes @ 0x5
   499  000006                     	ds	17
   500  000017                     ??_Delay10KTCYx:
   501  000017                     ??_isdigit:
   502  000017                     ?_strlen:
   503                           	opt stack 0
   504  000017                     ?_crc16:
   505                           	opt stack 0
   506  000017                     ?___wmul:
   507                           	opt stack 0
   508  000017                     ?___awdiv:
   509                           	opt stack 0
   510  000017                     ?___awmod:
   511                           	opt stack 0
   512  000017                     ?___lwdiv:
   513                           	opt stack 0
   514  000017                     enviaByte@BYTE:
   515                           	opt stack 0
   516  000017                     Delay10TCYx@unit:
   517                           	opt stack 0
   518  000017                     Delay1KTCYx@unit:
   519                           	opt stack 0
   520  000017                     crc16@data_p:
   521                           	opt stack 0
   522  000017                     tx_data@cont:
   523                           	opt stack 0
   524  000017                     ___wmul@multiplier:
   525                           	opt stack 0
   526  000017                     ___awdiv@dividend:
   527                           	opt stack 0
   528  000017                     ___awmod@dividend:
   529                           	opt stack 0
   530  000017                     ___lwdiv@dividend:
   531                           	opt stack 0
   532  000017                     strlen@s:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x16
   536  000017                     	ds	1
   537  000018                     ??_SetDDRamAddr:
   538  000018                     WriteCmdXLCD@cmd:
   539                           	opt stack 0
   540  000018                     WriteDataXLCD@data:
   541                           	opt stack 0
   542  000018                     Delay10KTCYx@unit:
   543                           	opt stack 0
   544  000018                     _isdigit$1102:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x17
   548  000018                     	ds	1
   549  000019                     ??_strlen:
   550  000019                     isdigit@c:
   551                           	opt stack 0
   552  000019                     crc16@length:
   553                           	opt stack 0
   554  000019                     ___wmul@multiplicand:
   555                           	opt stack 0
   556  000019                     ___awdiv@divisor:
   557                           	opt stack 0
   558  000019                     ___awmod@divisor:
   559                           	opt stack 0
   560  000019                     ___lwdiv@divisor:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x18
   564  000019                     	ds	2
   565  00001B                     ??_crc16:
   566  00001B                     SetDDRamAddr@DDaddr:
   567                           	opt stack 0
   568  00001B                     ___awdiv@counter:
   569                           	opt stack 0
   570  00001B                     ___awmod@counter:
   571                           	opt stack 0
   572  00001B                     ___lwdiv@counter:
   573                           	opt stack 0
   574  00001B                     ___wmul@product:
   575                           	opt stack 0
   576  00001B                     strlen@cp:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x1A
   580  00001B                     	ds	1
   581  00001C                     OpenXLCD@lcdtype:
   582                           	opt stack 0
   583  00001C                     ___awdiv@sign:
   584                           	opt stack 0
   585  00001C                     ___awmod@sign:
   586                           	opt stack 0
   587  00001C                     ___lwdiv@quotient:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x1B
   591  00001C                     	ds	1
   592  00001D                     ?_atoi:
   593                           	opt stack 0
   594  00001D                     verificaAnoBissexto@ano:
   595                           	opt stack 0
   596  00001D                     atoi@s:
   597                           	opt stack 0
   598  00001D                     ___awdiv@quotient:
   599                           	opt stack 0
   600  00001D                     memcpy@d1:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x1C
   604  00001D                     	ds	1
   605  00001E                     ?___lwmod:
   606                           	opt stack 0
   607  00001E                     ___lwmod@dividend:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x1D
   611  00001E                     	ds	1
   612  00001F                     ??_atoi:
   613  00001F                     ??_verificaAnoBissexto:
   614  00001F                     crc16@i:
   615                           	opt stack 0
   616  00001F                     memcpy@s1:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x1E
   620  00001F                     	ds	1
   621  000020                     crc16@data:
   622                           	opt stack 0
   623  000020                     ___lwmod@divisor:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x1F
   627  000020                     	ds	1
   628  000021                     ??_trata_relogio_data:
   629  000021                     atoi@sign:
   630                           	opt stack 0
   631  000021                     memcpy@n:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x20
   635  000021                     	ds	1
   636  000022                     ___lwmod@counter:
   637                           	opt stack 0
   638  000022                     crc16@crc:
   639                           	opt stack 0
   640  000022                     atoi@a:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x21
   644  000022                     	ds	1
   645  000023                     ??_sprintf:
   646  000023                     memcpy@d:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x22
   650  000023                     	ds	1
   651  000024                     ??_verificaCRCBUFFCOM:
   652  000024                     calculaCRCBUFFRESP@crc:
   653                           	opt stack 0
   654  000024                     sprintf@ap:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x23
   658  000024                     	ds	1
   659  000025                     memcpy@s:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x24
   663  000025                     	ds	1
   664  000026                     sprintf@flag:
   665                           	opt stack 0
   666  000026                     verificaCRCBUFFCOM@crc1:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x25
   670  000026                     	ds	1
   671  000027                     sprintf@prec:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x26
   675  000027                     	ds	1
   676  000028                     verificaCRCBUFFCOM@crc2:
   677                           	opt stack 0
   678  000028                     sprintf@val:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x27
   682  000028                     	ds	2
   683  00002A                     verificaCRCBUFFCOM@CRC_OK:
   684                           	opt stack 0
   685  00002A                     sprintf@c:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x29
   689  00002A                     	ds	1
   690  00002B                     ?_converteAnoString:
   691                           	opt stack 0
   692  00002B                     converteAnoString@ano:
   693                           	opt stack 0
   694  00002B                     verificaCRCBUFFCOM@crc:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x2A
   698  00002B                     	ds	2
   699  00002D                     putrsXLCD@buffer:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x2C
   703  00002D                     	ds	2
   704  00002F                     tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           postdec1	equ	0xFE5
   711                           fsr1l	equ	0xFE1
   712                           
   713                           ; 1 bytes @ 0x2E
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 610 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  botao           1   21[BANK0 ] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   733 ;;      Params:         0       0       0       0       0       0       0       0       0
   734 ;;      Locals:         0       1       0       0       0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0       0       0       0       0
   736 ;;      Totals:         0       1       0       0       0       0       0       0       0
   737 ;;Total ram usage:        1 bytes
   738 ;; Hardware stack levels required when called:   12
   739 ;; This function calls:
   740 ;;		_Delay10KTCYx
   741 ;;		_atualiza_Tela
   742 ;;		_init_XLCD
   743 ;;		_maquinaEstado
   744 ;;		_setaDespertador
   745 ;;		_trata_relogio_data
   746 ;; This function is called by:
   747 ;;		Startup code after reset
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text0
   752  000F6C                     __ptext0:
   753                           	opt stack 0
   754  000F6C                     _main:
   755                           	opt stack 19
   756                           
   757                           ;main.c: 611: ADCON1 = 0x0F;
   758                           
   759                           ;incstack = 0
   760  000F6C  0E0F               	movlw	15
   761  000F6E  6EC1               	movwf	4033,c	;volatile
   762                           
   763                           ;main.c: 612: TRISB = 0x00;
   764  000F70  0E00               	movlw	0
   765  000F72  6E93               	movwf	3987,c	;volatile
   766                           
   767                           ;main.c: 613: TRISD = 0x00;
   768  000F74  0E00               	movlw	0
   769  000F76  6E95               	movwf	3989,c	;volatile
   770                           
   771                           ;main.c: 615: SPBRG=(((12000000/64)/9600)-1);
   772  000F78  0E12               	movlw	18
   773  000F7A  6EAF               	movwf	4015,c	;volatile
   774                           
   775                           ;main.c: 621: RCSTA = 0b10010000;
   776  000F7C  0E90               	movlw	144
   777  000F7E  6EAB               	movwf	4011,c	;volatile
   778                           
   779                           ;main.c: 622: TXSTA = 0b00100000;
   780  000F80  0E20               	movlw	32
   781  000F82  6EAC               	movwf	4012,c	;volatile
   782                           
   783                           ;main.c: 624: TRISCbits.RC0 = 1;
   784  000F84  8094               	bsf	3988,0,c	;volatile
   785                           
   786                           ;main.c: 625: TRISCbits.RC1 = 1;
   787  000F86  8294               	bsf	3988,1,c	;volatile
   788                           
   789                           ;main.c: 626: TRISCbits.RC2 = 1;
   790  000F88  8494               	bsf	3988,2,c	;volatile
   791                           
   792                           ;main.c: 628: TRISCbits.RC6 = 0;
   793  000F8A  9C94               	bcf	3988,6,c	;volatile
   794                           
   795                           ;main.c: 629: TRISCbits.RC7 = 1;
   796  000F8C  8E94               	bsf	3988,7,c	;volatile
   797                           
   798                           ;main.c: 632: RCIF = 0;
   799  000F8E  9A9E               	bcf	3998,5,c	;volatile
   800                           
   801                           ;main.c: 633: RCIP = 0;
   802  000F90  9A9F               	bcf	3999,5,c	;volatile
   803                           
   804                           ;main.c: 634: RCIE = 1;
   805  000F92  8A9D               	bsf	3997,5,c	;volatile
   806                           
   807                           ;main.c: 635: PEIE = 1;
   808  000F94  8CF2               	bsf	intcon,6,c	;volatile
   809                           
   810                           ;main.c: 636: char botao;
   811                           ;main.c: 640: data_horario.horario[0] = 2;
   812  000F96  0E02               	movlw	2
   813  000F98  0100               	movlb	0	; () banked
   814  000F9A  6F60               	movwf	_data_horario& (0+255),b
   815                           
   816                           ;main.c: 641: data_horario.horario[1] = 3;
   817  000F9C  0E03               	movlw	3
   818  000F9E  0100               	movlb	0	; () banked
   819  000FA0  6F61               	movwf	(_data_horario+1)& (0+255),b
   820                           
   821                           ;main.c: 642: data_horario.horario[3] = 5;
   822  000FA2  0E05               	movlw	5
   823  000FA4  0100               	movlb	0	; () banked
   824  000FA6  6F63               	movwf	(_data_horario+3)& (0+255),b
   825                           
   826                           ;main.c: 643: data_horario.horario[4] = 9;
   827  000FA8  0E09               	movlw	9
   828  000FAA  0100               	movlb	0	; () banked
   829  000FAC  6F64               	movwf	(_data_horario+4)& (0+255),b
   830                           
   831                           ;main.c: 644: data_horario.horario[6] = 5;
   832  000FAE  0E05               	movlw	5
   833  000FB0  0100               	movlb	0	; () banked
   834  000FB2  6F66               	movwf	(_data_horario+6)& (0+255),b
   835                           
   836                           ;main.c: 645: data_horario.horario[7] = 0;
   837  000FB4  0E00               	movlw	0
   838  000FB6  0100               	movlb	0	; () banked
   839  000FB8  6F67               	movwf	(_data_horario+7)& (0+255),b
   840                           
   841                           ;main.c: 646: data_horario.horario[8] = '\0';
   842  000FBA  0E00               	movlw	0
   843  000FBC  0100               	movlb	0	; () banked
   844  000FBE  6F68               	movwf	(_data_horario+8)& (0+255),b
   845                           
   846                           ;main.c: 648: data_horario.data[0] = 3;
   847  000FC0  0E03               	movlw	3
   848  000FC2  0100               	movlb	0	; () banked
   849  000FC4  6F69               	movwf	(_data_horario+9)& (0+255),b
   850                           
   851                           ;main.c: 649: data_horario.data[1] = 1;
   852  000FC6  0E01               	movlw	1
   853  000FC8  0100               	movlb	0	; () banked
   854  000FCA  6F6A               	movwf	(_data_horario+10)& (0+255),b
   855                           
   856                           ;main.c: 650: data_horario.data[3] = 1;
   857  000FCC  0E01               	movlw	1
   858  000FCE  0100               	movlb	0	; () banked
   859  000FD0  6F6C               	movwf	(_data_horario+12)& (0+255),b
   860                           
   861                           ;main.c: 651: data_horario.data[4] = 2;
   862  000FD2  0E02               	movlw	2
   863  000FD4  0100               	movlb	0	; () banked
   864  000FD6  6F6D               	movwf	(_data_horario+13)& (0+255),b
   865                           
   866                           ;main.c: 652: data_horario.data[6] = '\0';
   867  000FD8  0E00               	movlw	0
   868  000FDA  0100               	movlb	0	; () banked
   869  000FDC  6F6F               	movwf	(_data_horario+15)& (0+255),b
   870                           
   871                           ;main.c: 653: data_horario.ano = 2018;
   872  000FDE  0E07               	movlw	7
   873  000FE0  0100               	movlb	0	; () banked
   874  000FE2  6F73               	movwf	(_data_horario+19)& (0+255),b
   875  000FE4  0EE2               	movlw	226
   876  000FE6  6F72               	movwf	(_data_horario+18)& (0+255),b
   877                           
   878                           ;main.c: 654: data_horario.dias = 31;
   879  000FE8  0E1F               	movlw	31
   880  000FEA  0100               	movlb	0	; () banked
   881  000FEC  6F70               	movwf	(_data_horario+16)& (0+255),b
   882                           
   883                           ;main.c: 655: data_horario.mes_atual = 11;
   884  000FEE  0E0B               	movlw	11
   885  000FF0  0100               	movlb	0	; () banked
   886  000FF2  6F71               	movwf	(_data_horario+17)& (0+255),b
   887                           
   888                           ;main.c: 657: horarioDespertador[0] = 0;
   889  000FF4  0E00               	movlw	0
   890  000FF6  6E2F               	movwf	_horarioDespertador,c
   891                           
   892                           ;main.c: 658: horarioDespertador[1] = 0;
   893  000FF8  0E00               	movlw	0
   894  000FFA  6E30               	movwf	_horarioDespertador+1,c
   895                           
   896                           ;main.c: 659: horarioDespertador[3] = 0;
   897  000FFC  0E00               	movlw	0
   898  000FFE  6E32               	movwf	_horarioDespertador+3,c
   899                           
   900                           ;main.c: 660: horarioDespertador[4] = 1;
   901  001000  0E01               	movlw	1
   902  001002  6E33               	movwf	_horarioDespertador+4,c
   903                           
   904                           ;main.c: 661: horarioDespertador[5] = '\0';
   905  001004  0E00               	movlw	0
   906  001006  6E34               	movwf	_horarioDespertador+5,c
   907                           
   908                           ; BSR set to: 0
   909                           ;main.c: 663: T0CONbits.TMR0ON = 0;
   910  001008  9ED5               	bcf	4053,7,c	;volatile
   911                           
   912                           ; BSR set to: 0
   913                           ;main.c: 664: INTCONbits.TMR0IE = 1;
   914  00100A  8AF2               	bsf	intcon,5,c	;volatile
   915                           
   916                           ; BSR set to: 0
   917                           ;main.c: 665: INTCONbits.TMR0IF = 0;
   918  00100C  94F2               	bcf	intcon,2,c	;volatile
   919                           
   920                           ; BSR set to: 0
   921                           ;main.c: 666: T0CONbits.T08BIT = 0;
   922  00100E  9CD5               	bcf	4053,6,c	;volatile
   923                           
   924                           ; BSR set to: 0
   925                           ;main.c: 667: T0CONbits.PSA = 0;
   926  001010  96D5               	bcf	4053,3,c	;volatile
   927                           
   928                           ; BSR set to: 0
   929                           ;main.c: 668: T0CONbits.T0PS0 = 1;
   930  001012  80D5               	bsf	4053,0,c	;volatile
   931                           
   932                           ; BSR set to: 0
   933                           ;main.c: 669: T0CONbits.T0PS1 = 0;
   934  001014  92D5               	bcf	4053,1,c	;volatile
   935                           
   936                           ; BSR set to: 0
   937                           ;main.c: 670: T0CONbits.T0PS2 = 1;
   938  001016  84D5               	bsf	4053,2,c	;volatile
   939                           
   940                           ; BSR set to: 0
   941                           ;main.c: 671: T0CONbits.T0CS = 0;
   942  001018  9AD5               	bcf	4053,5,c	;volatile
   943                           
   944                           ;main.c: 672: TMR0 = 26474;
   945  00101A  0E67               	movlw	103
   946  00101C  6ED7               	movwf	4055,c	;volatile
   947  00101E  0E6A               	movlw	106
   948  001020  6ED6               	movwf	4054,c	;volatile
   949                           
   950                           ; BSR set to: 0
   951                           ;main.c: 673: T0CONbits.TMR0ON = 1;
   952  001022  8ED5               	bsf	4053,7,c	;volatile
   953                           
   954                           ; BSR set to: 0
   955                           ;main.c: 674: INTCONbits.GIEH = 1;
   956  001024  8EF2               	bsf	intcon,7,c	;volatile
   957                           
   958                           ; BSR set to: 0
   959                           ;main.c: 675: INTCONbits.GIEL = 1;
   960  001026  8CF2               	bsf	intcon,6,c	;volatile
   961                           
   962                           ; BSR set to: 0
   963                           ;main.c: 678: init_XLCD();
   964  001028  ECD7  F00C         	call	_init_XLCD	;wreg free
   965  00102C                     l3909:
   966                           
   967                           ;main.c: 682: maquinaEstado();
   968  00102C  EC67  F00B         	call	_maquinaEstado	;wreg free
   969                           
   970                           ;main.c: 683: botao = PORTCbits.RC0;
   971  001030  0E00               	movlw	0
   972  001032  B082               	btfsc	3970,0,c	;volatile
   973  001034  0E01               	movlw	1
   974  001036  0100               	movlb	0	; () banked
   975  001038  6F98               	movwf	main@botao& (0+255),b
   976                           
   977                           ; BSR set to: 0
   978                           ;main.c: 684: if(botao){
   979  00103A  0100               	movlb	0	; () banked
   980  00103C  5198               	movf	main@botao& (0+255),w,b
   981  00103E  0100               	movlb	0	; () banked
   982  001040  B4D8               	btfsc	status,2,c
   983  001042  D011               	goto	l3923
   984                           
   985                           ; BSR set to: 0
   986                           ;main.c: 685: Delay10KTCYx(180);
   987  001044  0EB4               	movlw	180
   988  001046  ECE6  F00C         	call	_Delay10KTCYx
   989                           
   990                           ;main.c: 687: atualiza_Tela(1);
   991  00104A  0E01               	movlw	1
   992  00104C  EC87  F005         	call	_atualiza_Tela
   993                           
   994                           ;main.c: 689: while(botao){
   995  001050  D005               	goto	l3921
   996  001052                     l3919:
   997                           
   998                           ;main.c: 690: botao = PORTCbits.RC0;
   999  001052  0E00               	movlw	0
  1000  001054  B082               	btfsc	3970,0,c	;volatile
  1001  001056  0E01               	movlw	1
  1002  001058  0100               	movlb	0	; () banked
  1003  00105A  6F98               	movwf	main@botao& (0+255),b
  1004  00105C                     l3921:
  1005  00105C  0100               	movlb	0	; () banked
  1006  00105E  5198               	movf	main@botao& (0+255),w,b
  1007  001060  0100               	movlb	0	; () banked
  1008  001062  A4D8               	btfss	status,2,c
  1009  001064  D7F6               	goto	l3919
  1010  001066                     l3923:
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;main.c: 691: }
  1014                           ;main.c: 692: }
  1015                           ;main.c: 694: if(flagSegundo){
  1016  001066  503B               	movf	_flagSegundo,w,c
  1017  001068  B4D8               	btfsc	status,2,c
  1018  00106A  D007               	goto	l3931
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;main.c: 696: atualiza_Tela(0);
  1022  00106C  0E00               	movlw	0
  1023  00106E  EC87  F005         	call	_atualiza_Tela
  1024                           
  1025                           ;main.c: 697: trata_relogio_data();
  1026  001072  EC1E  F007         	call	_trata_relogio_data	;wreg free
  1027                           
  1028                           ;main.c: 698: flagSegundo=0;
  1029  001076  0E00               	movlw	0
  1030  001078  6E3B               	movwf	_flagSegundo,c
  1031  00107A                     l3931:
  1032                           
  1033                           ;main.c: 700: }
  1034                           ;main.c: 702: if(tela_atual == 2){
  1035  00107A  0E02               	movlw	2
  1036  00107C  1835               	xorwf	_tela_atual,w,c
  1037  00107E  A4D8               	btfss	status,2,c
  1038  001080  D7D5               	goto	l3909
  1039                           
  1040                           ;main.c: 703: setaDespertador();
  1041  001082  EC66  F009         	call	_setaDespertador	;wreg free
  1042  001086  D7D2               	goto	l3909
  1043  001088                     __end_of_main:
  1044                           	opt stack 0
  1045                           tblptru	equ	0xFF8
  1046                           tblptrh	equ	0xFF7
  1047                           tblptrl	equ	0xFF6
  1048                           tablat	equ	0xFF5
  1049                           intcon	equ	0xFF2
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postdec1	equ	0xFE5
  1053                           fsr1l	equ	0xFE1
  1054                           status	equ	0xFD8
  1055                           
  1056 ;; *************** function _trata_relogio_data *****************
  1057 ;; Defined at:
  1058 ;;		line 177 in file "main.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1072 ;;      Params:         0       0       0       0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1074 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1075 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1076 ;;Total ram usage:        5 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    7
  1079 ;; This function calls:
  1080 ;;		_verificaAnoBissexto
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text1
  1087  000E3C                     __ptext1:
  1088                           	opt stack 0
  1089  000E3C                     _trata_relogio_data:
  1090                           	opt stack 23
  1091                           
  1092                           ;main.c: 178: data_horario.horario[7]++;
  1093                           
  1094                           ;incstack = 0
  1095  000E3C  0100               	movlb	0	; () banked
  1096  000E3E  2B67               	incf	(_data_horario+7)& (0+255),f,b
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;main.c: 179: if(data_horario.horario[7]> 9){
  1100  000E40  0E09               	movlw	9
  1101  000E42  0100               	movlb	0	; () banked
  1102  000E44  6567               	cpfsgt	(_data_horario+7)& (0+255),b
  1103  000E46  0012               	return	
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;main.c: 180: data_horario.horario[7]= 0;
  1107  000E48  0E00               	movlw	0
  1108  000E4A  0100               	movlb	0	; () banked
  1109  000E4C  6F67               	movwf	(_data_horario+7)& (0+255),b
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;main.c: 181: data_horario.horario[6]++;
  1113  000E4E  0100               	movlb	0	; () banked
  1114  000E50  2B66               	incf	(_data_horario+6)& (0+255),f,b
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;main.c: 182: if(data_horario.horario[6]> 5 ){
  1118  000E52  0E05               	movlw	5
  1119  000E54  0100               	movlb	0	; () banked
  1120  000E56  6566               	cpfsgt	(_data_horario+6)& (0+255),b
  1121  000E58  0012               	return	
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;main.c: 183: data_horario.horario[6] = 0;
  1125  000E5A  0E00               	movlw	0
  1126  000E5C  0100               	movlb	0	; () banked
  1127  000E5E  6F66               	movwf	(_data_horario+6)& (0+255),b
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;main.c: 184: data_horario.horario[4]++;
  1131  000E60  0100               	movlb	0	; () banked
  1132  000E62  2B64               	incf	(_data_horario+4)& (0+255),f,b
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;main.c: 185: virouDia = 1;
  1136  000E64  0E01               	movlw	1
  1137  000E66  6E48               	movwf	_virouDia,c
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;main.c: 186: if(data_horario.horario[4]>9){
  1141  000E68  0E09               	movlw	9
  1142  000E6A  0100               	movlb	0	; () banked
  1143  000E6C  6564               	cpfsgt	(_data_horario+4)& (0+255),b
  1144  000E6E  0012               	return	
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;main.c: 187: data_horario.horario[4] = 0;
  1148  000E70  0E00               	movlw	0
  1149  000E72  0100               	movlb	0	; () banked
  1150  000E74  6F64               	movwf	(_data_horario+4)& (0+255),b
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;main.c: 188: data_horario.horario[3]++;
  1154  000E76  0100               	movlb	0	; () banked
  1155  000E78  2B63               	incf	(_data_horario+3)& (0+255),f,b
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;main.c: 189: if( data_horario.horario[3]> 5){
  1159  000E7A  0E05               	movlw	5
  1160  000E7C  0100               	movlb	0	; () banked
  1161  000E7E  6563               	cpfsgt	(_data_horario+3)& (0+255),b
  1162  000E80  0012               	return	
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;main.c: 190: data_horario.horario[3] = 0;
  1166  000E82  0E00               	movlw	0
  1167  000E84  0100               	movlb	0	; () banked
  1168  000E86  6F63               	movwf	(_data_horario+3)& (0+255),b
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;main.c: 191: data_horario.horario[1]++;
  1172  000E88  0100               	movlb	0	; () banked
  1173  000E8A  2B61               	incf	(_data_horario+1)& (0+255),f,b
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;main.c: 192: if( data_horario.horario[1]> 9){
  1177  000E8C  0E09               	movlw	9
  1178  000E8E  0100               	movlb	0	; () banked
  1179  000E90  6561               	cpfsgt	(_data_horario+1)& (0+255),b
  1180  000E92  D005               	goto	l3745
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;main.c: 193: data_horario.horario[1]= 0;
  1184  000E94  0E00               	movlw	0
  1185  000E96  0100               	movlb	0	; () banked
  1186  000E98  6F61               	movwf	(_data_horario+1)& (0+255),b
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;main.c: 194: data_horario.horario[0]++;
  1190  000E9A  0100               	movlb	0	; () banked
  1191  000E9C  2B60               	incf	_data_horario& (0+255),f,b
  1192  000E9E                     l3745:
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;main.c: 195: }
  1196                           ;main.c: 196: if( data_horario.horario[0] == 2 && data_horario.horario[1] > 3){
  1197  000E9E  0E02               	movlw	2
  1198  000EA0  0100               	movlb	0	; () banked
  1199  000EA2  1960               	xorwf	_data_horario& (0+255),w,b
  1200  000EA4  A4D8               	btfss	status,2,c
  1201  000EA6  0012               	return	
  1202                           
  1203                           ; BSR set to: 0
  1204  000EA8  0E03               	movlw	3
  1205  000EAA  0100               	movlb	0	; () banked
  1206  000EAC  6561               	cpfsgt	(_data_horario+1)& (0+255),b
  1207  000EAE  0012               	return	
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;main.c: 197: data_horario.horario[0] = 0;
  1211  000EB0  0E00               	movlw	0
  1212  000EB2  0100               	movlb	0	; () banked
  1213  000EB4  6F60               	movwf	_data_horario& (0+255),b
  1214                           
  1215                           ;main.c: 198: data_horario.horario[1] = 0;
  1216  000EB6  0E00               	movlw	0
  1217  000EB8  0100               	movlb	0	; () banked
  1218  000EBA  6F61               	movwf	(_data_horario+1)& (0+255),b
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;main.c: 199: data_horario.data[1]++;
  1222  000EBC  0100               	movlb	0	; () banked
  1223  000EBE  2B6A               	incf	(_data_horario+10)& (0+255),f,b
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;main.c: 200: data_horario.dias++;
  1227  000EC0  0100               	movlb	0	; () banked
  1228  000EC2  2B70               	incf	(_data_horario+16)& (0+255),f,b
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;main.c: 201: if(data_horario.data[1]> 9){
  1232  000EC4  0E09               	movlw	9
  1233  000EC6  0100               	movlb	0	; () banked
  1234  000EC8  656A               	cpfsgt	(_data_horario+10)& (0+255),b
  1235  000ECA  D005               	goto	l3761
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;main.c: 202: data_horario.data[1]=0;
  1239  000ECC  0E00               	movlw	0
  1240  000ECE  0100               	movlb	0	; () banked
  1241  000ED0  6F6A               	movwf	(_data_horario+10)& (0+255),b
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;main.c: 203: data_horario.data[0]++;
  1245  000ED2  0100               	movlb	0	; () banked
  1246  000ED4  2B69               	incf	(_data_horario+9)& (0+255),f,b
  1247  000ED6                     l3761:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;main.c: 204: }
  1251                           ;main.c: 205: if(data_horario.dias > dias_mes[data_horario.mes_atual-1]){
  1252  000ED6  0EFF               	movlw	255
  1253  000ED8  6E21               	movwf	??_trata_relogio_data& (0+255),c
  1254  000EDA  0EFF               	movlw	255
  1255  000EDC  6E22               	movwf	(??_trata_relogio_data+1)& (0+255),c
  1256  000EDE  0100               	movlb	0	; () banked
  1257  000EE0  5171               	movf	(_data_horario+17)& (0+255),w,b
  1258  000EE2  6E23               	movwf	(??_trata_relogio_data+2)& (0+255),c
  1259  000EE4  6A24               	clrf	(??_trata_relogio_data+3)& (0+255),c
  1260  000EE6  5021               	movf	??_trata_relogio_data,w,c
  1261  000EE8  2623               	addwf	??_trata_relogio_data+2,f,c
  1262  000EEA  5022               	movf	??_trata_relogio_data+1,w,c
  1263  000EEC  2224               	addwfc	??_trata_relogio_data+3,f,c
  1264  000EEE  0E99               	movlw	low _dias_mes
  1265  000EF0  2423               	addwf	??_trata_relogio_data+2,w,c
  1266  000EF2  6ED9               	movwf	fsr2l,c
  1267  000EF4  0E00               	movlw	high _dias_mes
  1268  000EF6  2024               	addwfc	??_trata_relogio_data+3,w,c
  1269  000EF8  6EDA               	movwf	fsr2h,c
  1270  000EFA  0100               	movlb	0	; () banked
  1271  000EFC  5170               	movf	(_data_horario+16)& (0+255),w,b
  1272  000EFE  5CDE               	subwf	postinc2,w,c
  1273  000F00  B0D8               	btfsc	status,0,c
  1274  000F02  0012               	return	
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;main.c: 206: data_horario.data[1]= 1;
  1278  000F04  0E01               	movlw	1
  1279  000F06  0100               	movlb	0	; () banked
  1280  000F08  6F6A               	movwf	(_data_horario+10)& (0+255),b
  1281                           
  1282                           ;main.c: 207: data_horario.data[0]= 0;
  1283  000F0A  0E00               	movlw	0
  1284  000F0C  0100               	movlb	0	; () banked
  1285  000F0E  6F69               	movwf	(_data_horario+9)& (0+255),b
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;main.c: 208: data_horario.mes_atual++;
  1289  000F10  0100               	movlb	0	; () banked
  1290  000F12  2B71               	incf	(_data_horario+17)& (0+255),f,b
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;main.c: 209: data_horario.data[4]++;
  1294  000F14  0100               	movlb	0	; () banked
  1295  000F16  2B6D               	incf	(_data_horario+13)& (0+255),f,b
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;main.c: 210: if( data_horario.data[4] > 9){
  1299  000F18  0E09               	movlw	9
  1300  000F1A  0100               	movlb	0	; () banked
  1301  000F1C  656D               	cpfsgt	(_data_horario+13)& (0+255),b
  1302  000F1E  D005               	goto	l3775
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;main.c: 211: data_horario.data[4] = 0;
  1306  000F20  0E00               	movlw	0
  1307  000F22  0100               	movlb	0	; () banked
  1308  000F24  6F6D               	movwf	(_data_horario+13)& (0+255),b
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;main.c: 212: data_horario.data[3]++;
  1312  000F26  0100               	movlb	0	; () banked
  1313  000F28  2B6C               	incf	(_data_horario+12)& (0+255),f,b
  1314  000F2A                     l3775:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;main.c: 213: }
  1318                           ;main.c: 214: if(data_horario.mes_atual >11){
  1319  000F2A  0E0B               	movlw	11
  1320  000F2C  0100               	movlb	0	; () banked
  1321  000F2E  6571               	cpfsgt	(_data_horario+17)& (0+255),b
  1322  000F30  0012               	return	
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;main.c: 215: data_horario.data[4] =1;
  1326  000F32  0E01               	movlw	1
  1327  000F34  0100               	movlb	0	; () banked
  1328  000F36  6F6D               	movwf	(_data_horario+13)& (0+255),b
  1329                           
  1330                           ;main.c: 216: data_horario.data[3]= 0;
  1331  000F38  0E00               	movlw	0
  1332  000F3A  0100               	movlb	0	; () banked
  1333  000F3C  6F6C               	movwf	(_data_horario+12)& (0+255),b
  1334                           
  1335                           ;main.c: 217: data_horario.mes_atual =1;
  1336  000F3E  0E01               	movlw	1
  1337  000F40  0100               	movlb	0	; () banked
  1338  000F42  6F71               	movwf	(_data_horario+17)& (0+255),b
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;main.c: 218: data_horario.ano++;
  1342  000F44  0100               	movlb	0	; () banked
  1343  000F46  4B72               	infsnz	(_data_horario+18)& (0+255),f,b
  1344  000F48  2B73               	incf	(_data_horario+19)& (0+255),f,b
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;main.c: 219: if(verificaAnoBissexto(data_horario.ano)){
  1348  000F4A  C072  F01D         	movff	_data_horario+18,verificaAnoBissexto@ano
  1349  000F4E  C073  F01E         	movff	_data_horario+19,verificaAnoBissexto@ano+1
  1350  000F52  EC64  F00A         	call	_verificaAnoBissexto	;wreg free
  1351  000F56  0900               	iorlw	0
  1352  000F58  B4D8               	btfsc	status,2,c
  1353  000F5A  D004               	goto	l3785
  1354                           
  1355                           ;main.c: 220: dias_mes[1] = 29;
  1356  000F5C  0E1D               	movlw	29
  1357  000F5E  0100               	movlb	0	; () banked
  1358  000F60  6F9A               	movwf	(_dias_mes+1)& (0+255),b
  1359                           
  1360                           ;main.c: 221: }
  1361  000F62  0012               	return	
  1362  000F64                     l3785:
  1363                           
  1364                           ;main.c: 222: else
  1365                           ;main.c: 223: {
  1366                           ;main.c: 224: dias_mes[1] = 28;
  1367  000F64  0E1C               	movlw	28
  1368  000F66  0100               	movlb	0	; () banked
  1369  000F68  6F9A               	movwf	(_dias_mes+1)& (0+255),b
  1370                           
  1371                           ; BSR set to: 0
  1372                           
  1373                           ; BSR set to: 0
  1374                           
  1375                           ; BSR set to: 0
  1376                           
  1377                           ; BSR set to: 0
  1378                           
  1379                           ; BSR set to: 0
  1380                           
  1381                           ; BSR set to: 0
  1382                           
  1383                           ; BSR set to: 0
  1384  000F6A  0012               	return	
  1385  000F6C                     __end_of_trata_relogio_data:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           intcon	equ	0xFF2
  1392                           postinc0	equ	0xFEE
  1393                           wreg	equ	0xFE8
  1394                           postdec1	equ	0xFE5
  1395                           fsr1l	equ	0xFE1
  1396                           postinc2	equ	0xFDE
  1397                           fsr2h	equ	0xFDA
  1398                           fsr2l	equ	0xFD9
  1399                           status	equ	0xFD8
  1400                           
  1401 ;; *************** function _verificaAnoBissexto *****************
  1402 ;; Defined at:
  1403 ;;		line 149 in file "main.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  ano             2   28[COMRAM] int 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      unsigned char 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1417 ;;      Params:         2       0       0       0       0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1419 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1420 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1421 ;;Total ram usage:        4 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:    6
  1424 ;; This function calls:
  1425 ;;		___awmod
  1426 ;; This function is called by:
  1427 ;;		_trata_relogio_data
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text2
  1432  0014C8                     __ptext2:
  1433                           	opt stack 0
  1434  0014C8                     _verificaAnoBissexto:
  1435                           	opt stack 23
  1436                           
  1437                           ;main.c: 150: if(ano % 4 == 0 ){
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;incstack = 0
  1441  0014C8  0E03               	movlw	3
  1442  0014CA  141D               	andwf	verificaAnoBissexto@ano,w,c
  1443  0014CC  6E1F               	movwf	??_verificaAnoBissexto& (0+255),c
  1444  0014CE  0E00               	movlw	0
  1445  0014D0  141E               	andwf	verificaAnoBissexto@ano+1,w,c
  1446  0014D2  6E20               	movwf	(??_verificaAnoBissexto+1)& (0+255),c
  1447  0014D4  501F               	movf	??_verificaAnoBissexto,w,c
  1448  0014D6  1020               	iorwf	??_verificaAnoBissexto+1,w,c
  1449  0014D8  A4D8               	btfss	status,2,c
  1450  0014DA  D022               	goto	l3549
  1451                           
  1452                           ;main.c: 151: if( ano % 100 != 0){
  1453  0014DC  C01D  F017         	movff	verificaAnoBissexto@ano,___awmod@dividend
  1454  0014E0  C01E  F018         	movff	verificaAnoBissexto@ano+1,___awmod@dividend+1
  1455  0014E4  0E00               	movlw	0
  1456  0014E6  6E1A               	movwf	___awmod@divisor+1,c
  1457  0014E8  0E64               	movlw	100
  1458  0014EA  6E19               	movwf	___awmod@divisor,c
  1459  0014EC  ECF7  F009         	call	___awmod	;wreg free
  1460  0014F0  5017               	movf	?___awmod,w,c
  1461  0014F2  1018               	iorwf	?___awmod+1,w,c
  1462  0014F4  B4D8               	btfsc	status,2,c
  1463  0014F6  D002               	goto	l3537
  1464                           
  1465                           ;main.c: 152: return 1;
  1466  0014F8  0E01               	movlw	1
  1467                           
  1468                           ;main.c: 153: }
  1469  0014FA  0012               	return	
  1470  0014FC                     l3537:
  1471                           
  1472                           ;main.c: 154: else
  1473                           ;main.c: 155: {
  1474                           ;main.c: 156: if( ano % 400 != 0){
  1475  0014FC  C01D  F017         	movff	verificaAnoBissexto@ano,___awmod@dividend
  1476  001500  C01E  F018         	movff	verificaAnoBissexto@ano+1,___awmod@dividend+1
  1477  001504  0E01               	movlw	1
  1478  001506  6E1A               	movwf	___awmod@divisor+1,c
  1479  001508  0E90               	movlw	144
  1480  00150A  6E19               	movwf	___awmod@divisor,c
  1481  00150C  ECF7  F009         	call	___awmod	;wreg free
  1482  001510  5017               	movf	?___awmod,w,c
  1483  001512  1018               	iorwf	?___awmod+1,w,c
  1484  001514  B4D8               	btfsc	status,2,c
  1485  001516  D002               	goto	l3545
  1486                           
  1487                           ;main.c: 157: return 0;
  1488  001518  0E00               	movlw	0
  1489                           
  1490                           ;main.c: 158: }
  1491  00151A  0012               	return	
  1492  00151C                     l3545:
  1493                           
  1494                           ;main.c: 159: else{
  1495                           ;main.c: 160: return 1;
  1496  00151C  0E01               	movlw	1
  1497                           
  1498                           ;main.c: 161: }
  1499                           ;main.c: 162: }
  1500                           ;main.c: 163: }
  1501  00151E  0012               	return	
  1502  001520                     l3549:
  1503                           
  1504                           ;main.c: 164: else{
  1505                           ;main.c: 165: return 0;
  1506  001520  0E00               	movlw	0
  1507  001522  0012               	return	
  1508  001524                     __end_of_verificaAnoBissexto:
  1509                           	opt stack 0
  1510                           tblptru	equ	0xFF8
  1511                           tblptrh	equ	0xFF7
  1512                           tblptrl	equ	0xFF6
  1513                           tablat	equ	0xFF5
  1514                           intcon	equ	0xFF2
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           postdec1	equ	0xFE5
  1518                           fsr1l	equ	0xFE1
  1519                           postinc2	equ	0xFDE
  1520                           fsr2h	equ	0xFDA
  1521                           fsr2l	equ	0xFD9
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _setaDespertador *****************
  1525 ;; Defined at:
  1526 ;;		line 308 in file "main.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1540 ;;      Params:         0       0       0       0       0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:   10
  1547 ;; This function calls:
  1548 ;;		_Delay10KTCYx
  1549 ;;		_atualiza_Tela
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text3
  1556  0012CC                     __ptext3:
  1557                           	opt stack 0
  1558  0012CC                     _setaDespertador:
  1559                           	opt stack 20
  1560                           
  1561                           ;main.c: 309: botaoHora = PORTCbits.RC1;
  1562                           
  1563                           ;incstack = 0
  1564  0012CC  0E00               	movlw	0
  1565  0012CE  B282               	btfsc	3970,1,c	;volatile
  1566  0012D0  0E01               	movlw	1
  1567  0012D2  6E38               	movwf	_botaoHora,c
  1568                           
  1569                           ;main.c: 310: botaoMin = PORTCbits.RC2;
  1570  0012D4  0E00               	movlw	0
  1571  0012D6  B482               	btfsc	3970,2,c	;volatile
  1572  0012D8  0E01               	movlw	1
  1573  0012DA  6E37               	movwf	_botaoMin,c
  1574                           
  1575                           ;main.c: 311: if(botaoHora){
  1576  0012DC  5038               	movf	_botaoHora,w,c
  1577  0012DE  B4D8               	btfsc	status,2,c
  1578  0012E0  D020               	goto	l3819
  1579                           
  1580                           ;main.c: 312: Delay10KTCYx(180);
  1581  0012E2  0EB4               	movlw	180
  1582  0012E4  ECE6  F00C         	call	_Delay10KTCYx
  1583                           
  1584                           ;main.c: 314: horarioDespertador[1]++;
  1585  0012E8  2A30               	incf	_horarioDespertador+1,f,c
  1586                           
  1587                           ;main.c: 315: if(horarioDespertador[1]>9){
  1588  0012EA  0E09               	movlw	9
  1589  0012EC  6430               	cpfsgt	_horarioDespertador+1,c
  1590  0012EE  D003               	goto	l3807
  1591                           
  1592                           ;main.c: 316: horarioDespertador[1] = 0;
  1593  0012F0  0E00               	movlw	0
  1594  0012F2  6E30               	movwf	_horarioDespertador+1,c
  1595                           
  1596                           ;main.c: 317: horarioDespertador[0]++;
  1597  0012F4  2A2F               	incf	_horarioDespertador,f,c
  1598  0012F6                     l3807:
  1599                           
  1600                           ;main.c: 318: }
  1601                           ;main.c: 319: if(horarioDespertador[0] == 2 && horarioDespertador[1] > 3){
  1602  0012F6  0E02               	movlw	2
  1603  0012F8  182F               	xorwf	_horarioDespertador,w,c
  1604  0012FA  A4D8               	btfss	status,2,c
  1605  0012FC  D007               	goto	l3813
  1606  0012FE  0E03               	movlw	3
  1607  001300  6430               	cpfsgt	_horarioDespertador+1,c
  1608  001302  D004               	goto	l3813
  1609                           
  1610                           ;main.c: 320: horarioDespertador[1] = 0;
  1611  001304  0E00               	movlw	0
  1612  001306  6E30               	movwf	_horarioDespertador+1,c
  1613                           
  1614                           ;main.c: 321: horarioDespertador[0] = 0;
  1615  001308  0E00               	movlw	0
  1616  00130A  6E2F               	movwf	_horarioDespertador,c
  1617  00130C                     l3813:
  1618                           
  1619                           ;main.c: 322: }
  1620                           ;main.c: 324: atualiza_Tela(0);
  1621  00130C  0E00               	movlw	0
  1622  00130E  EC87  F005         	call	_atualiza_Tela
  1623                           
  1624                           ;main.c: 325: while(botaoHora){
  1625  001312  D004               	goto	l3817
  1626  001314                     l3815:
  1627                           
  1628                           ;main.c: 326: botaoHora = PORTCbits.RC1;
  1629  001314  0E00               	movlw	0
  1630  001316  B282               	btfsc	3970,1,c	;volatile
  1631  001318  0E01               	movlw	1
  1632  00131A  6E38               	movwf	_botaoHora,c
  1633  00131C                     l3817:
  1634  00131C  5038               	movf	_botaoHora,w,c
  1635  00131E  A4D8               	btfss	status,2,c
  1636  001320  D7F9               	goto	l3815
  1637  001322                     l3819:
  1638                           
  1639                           ;main.c: 327: }
  1640                           ;main.c: 328: }
  1641                           ;main.c: 330: if(botaoMin){
  1642  001322  5037               	movf	_botaoMin,w,c
  1643  001324  B4D8               	btfsc	status,2,c
  1644  001326  0012               	return	
  1645                           
  1646                           ;main.c: 331: Delay10KTCYx(180);
  1647  001328  0EB4               	movlw	180
  1648  00132A  ECE6  F00C         	call	_Delay10KTCYx
  1649                           
  1650                           ;main.c: 333: horarioDespertador[4]++;
  1651  00132E  2A33               	incf	_horarioDespertador+4,f,c
  1652                           
  1653                           ;main.c: 334: if(horarioDespertador[4]>9){
  1654  001330  0E09               	movlw	9
  1655  001332  6433               	cpfsgt	_horarioDespertador+4,c
  1656  001334  D003               	goto	l3831
  1657                           
  1658                           ;main.c: 335: horarioDespertador[4]=0;
  1659  001336  0E00               	movlw	0
  1660  001338  6E33               	movwf	_horarioDespertador+4,c
  1661                           
  1662                           ;main.c: 336: horarioDespertador[3]++;
  1663  00133A  2A32               	incf	_horarioDespertador+3,f,c
  1664  00133C                     l3831:
  1665                           
  1666                           ;main.c: 338: }
  1667                           ;main.c: 339: if(horarioDespertador[3] == 5 && horarioDespertador[4] > 9){
  1668  00133C  0E05               	movlw	5
  1669  00133E  1832               	xorwf	_horarioDespertador+3,w,c
  1670  001340  A4D8               	btfss	status,2,c
  1671  001342  D007               	goto	l3837
  1672  001344  0E09               	movlw	9
  1673  001346  6433               	cpfsgt	_horarioDespertador+4,c
  1674  001348  D004               	goto	l3837
  1675                           
  1676                           ;main.c: 340: horarioDespertador[4] = 0;
  1677  00134A  0E00               	movlw	0
  1678  00134C  6E33               	movwf	_horarioDespertador+4,c
  1679                           
  1680                           ;main.c: 341: horarioDespertador[3] = 0;
  1681  00134E  0E00               	movlw	0
  1682  001350  6E32               	movwf	_horarioDespertador+3,c
  1683  001352                     l3837:
  1684                           
  1685                           ;main.c: 342: }
  1686                           ;main.c: 343: atualiza_Tela(0);
  1687  001352  0E00               	movlw	0
  1688  001354  EC87  F005         	call	_atualiza_Tela
  1689                           
  1690                           ;main.c: 344: while(botaoMin){
  1691  001358  D004               	goto	l3841
  1692  00135A                     l3839:
  1693                           
  1694                           ;main.c: 345: botaoMin = PORTCbits.RC2;
  1695  00135A  0E00               	movlw	0
  1696  00135C  B482               	btfsc	3970,2,c	;volatile
  1697  00135E  0E01               	movlw	1
  1698  001360  6E37               	movwf	_botaoMin,c
  1699  001362                     l3841:
  1700  001362  5037               	movf	_botaoMin,w,c
  1701  001364  B4D8               	btfsc	status,2,c
  1702  001366  0012               	return	
  1703  001368  D7F8               	goto	l3839
  1704  00136A                     __end_of_setaDespertador:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           intcon	equ	0xFF2
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           postdec1	equ	0xFE5
  1714                           fsr1l	equ	0xFE1
  1715                           postinc2	equ	0xFDE
  1716                           fsr2h	equ	0xFDA
  1717                           fsr2l	equ	0xFD9
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _maquinaEstado *****************
  1721 ;; Defined at:
  1722 ;;		line 572 in file "main.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1739 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:   11
  1743 ;; This function calls:
  1744 ;;		_enviaByte
  1745 ;;		_trataComando
  1746 ;;		_tx_data
  1747 ;;		_verificaCRCBUFFCOM
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text4
  1754  0016CE                     __ptext4:
  1755                           	opt stack 0
  1756  0016CE                     _maquinaEstado:
  1757                           	opt stack 19
  1758                           
  1759                           ;main.c: 574: switch(estado){
  1760                           
  1761                           ;incstack = 0
  1762  0016CE  D011               	goto	l3857
  1763  0016D0                     l3845:
  1764                           
  1765                           ;main.c: 577: verificaCRCBUFFCOM();
  1766  0016D0  EC2F  F00A         	call	_verificaCRCBUFFCOM	;wreg free
  1767                           
  1768                           ;main.c: 579: break;
  1769  0016D4  0012               	return	
  1770  0016D6                     l3847:
  1771                           
  1772                           ;main.c: 583: trataComando();
  1773  0016D6  EC33  F004         	call	_trataComando	;wreg free
  1774                           
  1775                           ;main.c: 585: break;
  1776  0016DA  0012               	return	
  1777  0016DC                     l3849:
  1778                           
  1779                           ;main.c: 588: tx_data();
  1780  0016DC  EC43  F00C         	call	_tx_data	;wreg free
  1781                           
  1782                           ;main.c: 589: break;
  1783  0016E0  0012               	return	
  1784  0016E2                     l3851:
  1785                           
  1786                           ;main.c: 592: enviaByte(0x05);
  1787  0016E2  0E05               	movlw	5
  1788  0016E4  ECC8  F00C         	call	_enviaByte
  1789                           
  1790                           ;main.c: 594: break;
  1791  0016E8  0012               	return	
  1792  0016EA                     l3853:
  1793                           
  1794                           ;main.c: 597: enviaByte(0x0F);
  1795  0016EA  0E0F               	movlw	15
  1796  0016EC  ECC8  F00C         	call	_enviaByte
  1797                           
  1798                           ;main.c: 606: }
  1799                           
  1800                           ;main.c: 603: break;
  1801                           
  1802                           ;main.c: 601: default:
  1803                           
  1804                           ;main.c: 599: break;
  1805  0016F0  0012               	return	
  1806  0016F2                     l3857:
  1807  0016F2  503D               	movf	_estado,w,c
  1808                           
  1809                           ; Switch size 1, requested type "space"
  1810                           ; Number of cases is 5, Range of values is 1 to 5
  1811                           ; switch strategies available:
  1812                           ; Name         Instructions Cycles
  1813                           ; simple_byte           16     9 (average)
  1814                           ;	Chosen strategy is simple_byte
  1815  0016F4  0A01               	xorlw	1	; case 1
  1816  0016F6  B4D8               	btfsc	status,2,c
  1817  0016F8  D7EB               	goto	l3845
  1818  0016FA  0A03               	xorlw	3	; case 2
  1819  0016FC  B4D8               	btfsc	status,2,c
  1820  0016FE  D7EB               	goto	l3847
  1821  001700  0A01               	xorlw	1	; case 3
  1822  001702  B4D8               	btfsc	status,2,c
  1823  001704  D7EB               	goto	l3849
  1824  001706  0A07               	xorlw	7	; case 4
  1825  001708  B4D8               	btfsc	status,2,c
  1826  00170A  D7EB               	goto	l3851
  1827  00170C  0A01               	xorlw	1	; case 5
  1828  00170E  A4D8               	btfss	status,2,c
  1829  001710  0012               	return	
  1830  001712  D7EB               	goto	l3853
  1831  001714                     __end_of_maquinaEstado:
  1832                           	opt stack 0
  1833                           tblptru	equ	0xFF8
  1834                           tblptrh	equ	0xFF7
  1835                           tblptrl	equ	0xFF6
  1836                           tablat	equ	0xFF5
  1837                           intcon	equ	0xFF2
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           postdec1	equ	0xFE5
  1841                           fsr1l	equ	0xFE1
  1842                           postinc2	equ	0xFDE
  1843                           fsr2h	equ	0xFDA
  1844                           fsr2l	equ	0xFD9
  1845                           status	equ	0xFD8
  1846                           
  1847 ;; *************** function _verificaCRCBUFFCOM *****************
  1848 ;; Defined at:
  1849 ;;		line 542 in file "main.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  crc             2   42[COMRAM] unsigned short 
  1854 ;;  crc2            2   39[COMRAM] unsigned short 
  1855 ;;  crc1            2   37[COMRAM] unsigned short 
  1856 ;;  CRC_OK          1   41[COMRAM] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1866 ;;      Params:         0       0       0       0       0       0       0       0       0
  1867 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1868 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1869 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1870 ;;Total ram usage:        9 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    6
  1873 ;; This function calls:
  1874 ;;		_crc16
  1875 ;; This function is called by:
  1876 ;;		_maquinaEstado
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text5
  1881  00145E                     __ptext5:
  1882                           	opt stack 0
  1883  00145E                     _verificaCRCBUFFCOM:
  1884                           	opt stack 23
  1885                           
  1886                           ;main.c: 545: char CRC_OK =0;
  1887                           
  1888                           ;incstack = 0
  1889  00145E  0E00               	movlw	0
  1890  001460  6E2A               	movwf	verificaCRCBUFFCOM@CRC_OK,c
  1891                           
  1892                           ;main.c: 546: unsigned short crc, crc1, crc2;
  1893                           ;main.c: 548: crc = crc16(BUFFCOM,5);
  1894  001462  0E3E               	movlw	low _BUFFCOM
  1895  001464  6E17               	movwf	crc16@data_p,c
  1896  001466  0E00               	movlw	high _BUFFCOM
  1897  001468  6E18               	movwf	crc16@data_p+1,c
  1898  00146A  0E00               	movlw	0
  1899  00146C  6E1A               	movwf	crc16@length+1,c
  1900  00146E  0E05               	movlw	5
  1901  001470  6E19               	movwf	crc16@length,c
  1902  001472  EC44  F008         	call	_crc16	;wreg free
  1903  001476  C017  F02B         	movff	?_crc16,verificaCRCBUFFCOM@crc
  1904  00147A  C018  F02C         	movff	?_crc16+1,verificaCRCBUFFCOM@crc+1
  1905                           
  1906                           ;main.c: 549: crc1 = crc >> 8;
  1907  00147E  502C               	movf	verificaCRCBUFFCOM@crc+1,w,c
  1908  001480  6E26               	movwf	verificaCRCBUFFCOM@crc1,c
  1909  001482  6A27               	clrf	verificaCRCBUFFCOM@crc1+1,c
  1910                           
  1911                           ;main.c: 550: crc2 = crc & 0xFF;
  1912  001484  502B               	movf	verificaCRCBUFFCOM@crc,w,c
  1913  001486  6E28               	movwf	verificaCRCBUFFCOM@crc2,c
  1914  001488  6A29               	clrf	verificaCRCBUFFCOM@crc2+1,c
  1915                           
  1916                           ;main.c: 552: if(BUFFCOM[5] == crc1 && BUFFCOM[6] == crc2){
  1917  00148A  5043               	movf	_BUFFCOM+5,w,c
  1918  00148C  6E24               	movwf	??_verificaCRCBUFFCOM& (0+255),c
  1919  00148E  6A25               	clrf	(??_verificaCRCBUFFCOM+1)& (0+255),c
  1920  001490  5026               	movf	verificaCRCBUFFCOM@crc1,w,c
  1921  001492  1824               	xorwf	??_verificaCRCBUFFCOM,w,c
  1922  001494  E110               	bnz	l3705
  1923  001496  5027               	movf	verificaCRCBUFFCOM@crc1+1,w,c
  1924  001498  1825               	xorwf	??_verificaCRCBUFFCOM+1,w,c
  1925  00149A  A4D8               	btfss	status,2,c
  1926  00149C  D00C               	goto	l3705
  1927  00149E  5044               	movf	_BUFFCOM+6,w,c
  1928  0014A0  6E24               	movwf	??_verificaCRCBUFFCOM& (0+255),c
  1929  0014A2  6A25               	clrf	(??_verificaCRCBUFFCOM+1)& (0+255),c
  1930  0014A4  5028               	movf	verificaCRCBUFFCOM@crc2,w,c
  1931  0014A6  1824               	xorwf	??_verificaCRCBUFFCOM,w,c
  1932  0014A8  E106               	bnz	l3705
  1933  0014AA  5029               	movf	verificaCRCBUFFCOM@crc2+1,w,c
  1934  0014AC  1825               	xorwf	??_verificaCRCBUFFCOM+1,w,c
  1935  0014AE  A4D8               	btfss	status,2,c
  1936  0014B0  D002               	goto	l3705
  1937                           
  1938                           ;main.c: 553: CRC_OK = 1;
  1939  0014B2  0E01               	movlw	1
  1940  0014B4  6E2A               	movwf	verificaCRCBUFFCOM@CRC_OK,c
  1941  0014B6                     l3705:
  1942                           
  1943                           ;main.c: 554: }
  1944                           ;main.c: 559: if (CRC_OK == 1)
  1945  0014B6  042A               	decf	verificaCRCBUFFCOM@CRC_OK,w,c
  1946  0014B8  A4D8               	btfss	status,2,c
  1947  0014BA  D003               	goto	l3709
  1948                           
  1949                           ;main.c: 560: {
  1950                           ;main.c: 561: estado = 4;
  1951  0014BC  0E04               	movlw	4
  1952  0014BE  6E3D               	movwf	_estado,c
  1953                           
  1954                           ;main.c: 562: }
  1955  0014C0  0012               	return	
  1956  0014C2                     l3709:
  1957                           
  1958                           ;main.c: 563: else{
  1959                           ;main.c: 566: estado = 5;
  1960  0014C2  0E05               	movlw	5
  1961  0014C4  6E3D               	movwf	_estado,c
  1962  0014C6  0012               	return	
  1963  0014C8                     __end_of_verificaCRCBUFFCOM:
  1964                           	opt stack 0
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           intcon	equ	0xFF2
  1970                           postinc0	equ	0xFEE
  1971                           wreg	equ	0xFE8
  1972                           postdec1	equ	0xFE5
  1973                           fsr1l	equ	0xFE1
  1974                           postinc2	equ	0xFDE
  1975                           fsr2h	equ	0xFDA
  1976                           fsr2l	equ	0xFD9
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function _tx_data *****************
  1980 ;; Defined at:
  1981 ;;		line 382 in file "main.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  cont            2   22[COMRAM] int 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0
  1996 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1998 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1999 ;;Total ram usage:        2 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    5
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_maquinaEstado
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text6
  2010  001886                     __ptext6:
  2011                           	opt stack 0
  2012  001886                     _tx_data:
  2013                           	opt stack 24
  2014                           
  2015                           ;main.c: 384: int cont;
  2016                           ;main.c: 386: for(cont=0;cont<7;cont++)
  2017                           
  2018                           ;incstack = 0
  2019  001886  0E00               	movlw	0
  2020  001888  6E18               	movwf	tx_data@cont+1,c
  2021  00188A  0E00               	movlw	0
  2022  00188C  6E17               	movwf	tx_data@cont,c
  2023  00188E                     l3609:
  2024  00188E  BE18               	btfsc	tx_data@cont+1,7,c
  2025  001890  D006               	goto	l210
  2026  001892  5018               	movf	tx_data@cont+1,w,c
  2027  001894  E111               	bnz	l3619
  2028  001896  0E07               	movlw	7
  2029  001898  5C17               	subwf	tx_data@cont,w,c
  2030  00189A  B0D8               	btfsc	status,0,c
  2031  00189C  D00D               	goto	l3619
  2032  00189E                     l210:
  2033  00189E  A89E               	btfss	3998,4,c	;volatile
  2034  0018A0  D7FE               	goto	l210
  2035                           
  2036                           ;main.c: 389: TXREG = BUFFRESP[cont];
  2037  0018A2  0E7C               	movlw	low _BUFFRESP
  2038  0018A4  2417               	addwf	tx_data@cont,w,c
  2039  0018A6  6ED9               	movwf	fsr2l,c
  2040  0018A8  0E00               	movlw	high _BUFFRESP
  2041  0018AA  2018               	addwfc	tx_data@cont+1,w,c
  2042  0018AC  6EDA               	movwf	fsr2h,c
  2043  0018AE  50DF               	movf	indf2,w,c
  2044  0018B0  6EAD               	movwf	4013,c	;volatile
  2045  0018B2  4A17               	infsnz	tx_data@cont,f,c
  2046  0018B4  2A18               	incf	tx_data@cont+1,f,c
  2047  0018B6  D7EB               	goto	l3609
  2048  0018B8                     l3619:
  2049                           
  2050                           ;main.c: 390: }
  2051                           ;main.c: 392: estado = 0;
  2052  0018B8  0E00               	movlw	0
  2053  0018BA  6E3D               	movwf	_estado,c
  2054  0018BC  0012               	return		;funcret
  2055  0018BE                     __end_of_tx_data:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           intcon	equ	0xFF2
  2062                           postinc0	equ	0xFEE
  2063                           wreg	equ	0xFE8
  2064                           postdec1	equ	0xFE5
  2065                           fsr1l	equ	0xFE1
  2066                           indf2	equ	0xFDF
  2067                           postinc2	equ	0xFDE
  2068                           fsr2h	equ	0xFDA
  2069                           fsr2l	equ	0xFD9
  2070                           status	equ	0xFD8
  2071                           
  2072 ;; *************** function _trataComando *****************
  2073 ;; Defined at:
  2074 ;;		line 421 in file "main.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2091 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:   10
  2095 ;; This function calls:
  2096 ;;		___awdiv
  2097 ;;		___awmod
  2098 ;;		_atoi
  2099 ;;		_atualiza_Tela
  2100 ;;		_calculaCRCBUFFRESP
  2101 ;;		_memcpy
  2102 ;;		_printaDisplay
  2103 ;;		_strlen
  2104 ;; This function is called by:
  2105 ;;		_maquinaEstado
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text7
  2110  000866                     __ptext7:
  2111                           	opt stack 0
  2112  000866                     _trataComando:
  2113                           	opt stack 19
  2114                           
  2115                           ;main.c: 424: switch(BUFFCOM[0])
  2116                           
  2117                           ;incstack = 0
  2118  000866  D149               	goto	l3687
  2119  000868                     l228:
  2120                           
  2121                           ;main.c: 428: BUFFRESP[0] = BUFFCOM[0];
  2122  000868  C03E  F07C         	movff	_BUFFCOM,_BUFFRESP
  2123                           
  2124                           ;main.c: 429: BUFFRESP[1] = BUFFCOM[1];
  2125  00086C  C03F  F07D         	movff	_BUFFCOM+1,_BUFFRESP+1
  2126                           
  2127                           ;main.c: 432: switch(BUFFCOM[1])
  2128  000870  D068               	goto	l3661
  2129  000872                     l230:
  2130                           
  2131                           ;main.c: 437: BUFFRESP[2] = versao[1];
  2132  000872  C0A6  F07E         	movff	_versao+1,_BUFFRESP+2
  2133                           
  2134                           ;main.c: 438: BUFFRESP[3] = versao[4];
  2135  000876  C0A9  F07F         	movff	_versao+4,_BUFFRESP+3
  2136  00087A  D060               	goto	l3657
  2137  00087C                     l232:
  2138                           
  2139                           ;main.c: 445: pegaHoraData[0] = data_horario.horario[0];
  2140  00087C  C060  F045         	movff	_data_horario,_pegaHoraData
  2141                           
  2142                           ;main.c: 446: pegaHoraData[1] = data_horario.horario[1];
  2143  000880  C061  F046         	movff	_data_horario+1,_pegaHoraData+1
  2144                           
  2145                           ;main.c: 447: BUFFRESP[2] = atoi(pegaHoraData);
  2146  000884  0E45               	movlw	low _pegaHoraData
  2147  000886  6E1D               	movwf	atoi@s,c
  2148  000888  0E00               	movlw	high _pegaHoraData
  2149  00088A  6E1E               	movwf	atoi@s+1,c
  2150  00088C  ECAD  F008         	call	_atoi	;wreg free
  2151  000890  501D               	movf	?_atoi,w,c
  2152  000892  0100               	movlb	0	; () banked
  2153  000894  6F7E               	movwf	(_BUFFRESP+2)& (0+255),b
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;main.c: 448: pegaHoraData[0] = data_horario.horario[3];
  2157  000896  C063  F045         	movff	_data_horario+3,_pegaHoraData
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;main.c: 449: pegaHoraData[1] = data_horario.horario[4];
  2161  00089A  C064  F046         	movff	_data_horario+4,_pegaHoraData+1
  2162                           
  2163                           ;main.c: 450: BUFFRESP[3] = atoi(pegaHoraData);
  2164  00089E  0E45               	movlw	low _pegaHoraData
  2165  0008A0  6E1D               	movwf	atoi@s,c
  2166  0008A2  0E00               	movlw	high _pegaHoraData
  2167  0008A4  6E1E               	movwf	atoi@s+1,c
  2168  0008A6  ECAD  F008         	call	_atoi	;wreg free
  2169  0008AA  501D               	movf	?_atoi,w,c
  2170  0008AC  0100               	movlb	0	; () banked
  2171  0008AE  6F7F               	movwf	(_BUFFRESP+3)& (0+255),b
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;main.c: 451: pegaHoraData[0] = data_horario.horario[6];
  2175  0008B0  C066  F045         	movff	_data_horario+6,_pegaHoraData
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;main.c: 452: pegaHoraData[1] = data_horario.horario[7];
  2179  0008B4  C067  F046         	movff	_data_horario+7,_pegaHoraData+1
  2180                           
  2181                           ;main.c: 453: BUFFRESP[4] = atoi(pegaHoraData);
  2182  0008B8  0E45               	movlw	low _pegaHoraData
  2183  0008BA  6E1D               	movwf	atoi@s,c
  2184  0008BC  0E00               	movlw	high _pegaHoraData
  2185  0008BE  6E1E               	movwf	atoi@s+1,c
  2186  0008C0  ECAD  F008         	call	_atoi	;wreg free
  2187  0008C4  501D               	movf	?_atoi,w,c
  2188  0008C6  D01D               	goto	L1
  2189  0008C8                     l233:
  2190                           
  2191                           ;main.c: 457: pegaHoraData[0] = data_horario.data[0];
  2192  0008C8  C069  F045         	movff	_data_horario+9,_pegaHoraData
  2193                           
  2194                           ;main.c: 458: pegaHoraData[1] = data_horario.data[1];
  2195  0008CC  C06A  F046         	movff	_data_horario+10,_pegaHoraData+1
  2196                           
  2197                           ;main.c: 459: BUFFRESP[2] = atoi(pegaHoraData);
  2198  0008D0  0E45               	movlw	low _pegaHoraData
  2199  0008D2  6E1D               	movwf	atoi@s,c
  2200  0008D4  0E00               	movlw	high _pegaHoraData
  2201  0008D6  6E1E               	movwf	atoi@s+1,c
  2202  0008D8  ECAD  F008         	call	_atoi	;wreg free
  2203  0008DC  501D               	movf	?_atoi,w,c
  2204  0008DE  0100               	movlb	0	; () banked
  2205  0008E0  6F7E               	movwf	(_BUFFRESP+2)& (0+255),b
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;main.c: 460: pegaHoraData[0] = data_horario.data[3];
  2209  0008E2  C06C  F045         	movff	_data_horario+12,_pegaHoraData
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;main.c: 461: pegaHoraData[1] = data_horario.data[4];
  2213  0008E6  C06D  F046         	movff	_data_horario+13,_pegaHoraData+1
  2214                           
  2215                           ;main.c: 462: BUFFRESP[3] = atoi(pegaHoraData);
  2216  0008EA  0E45               	movlw	low _pegaHoraData
  2217  0008EC  6E1D               	movwf	atoi@s,c
  2218  0008EE  0E00               	movlw	high _pegaHoraData
  2219  0008F0  6E1E               	movwf	atoi@s+1,c
  2220  0008F2  ECAD  F008         	call	_atoi	;wreg free
  2221  0008F6  501D               	movf	?_atoi,w,c
  2222  0008F8  0100               	movlb	0	; () banked
  2223  0008FA  6F7F               	movwf	(_BUFFRESP+3)& (0+255),b
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;main.c: 463: BUFFRESP[4] = data_horario.ano - 2000;
  2227  0008FC  0100               	movlb	0	; () banked
  2228  0008FE  5172               	movf	(_data_horario+18)& (0+255),w,b
  2229  000900  0F30               	addlw	48
  2230  000902                     L1:
  2231  000902  0100               	movlb	0	; () banked
  2232  000904  6F80               	movwf	(_BUFFRESP+4)& (0+255),b
  2233                           
  2234                           ;main.c: 465: break;
  2235  000906  D100               	goto	l3689
  2236  000908                     l234:
  2237                           
  2238                           ;main.c: 467: pegaHoraData[0] = horarioDespertador[0];
  2239  000908  C02F  F045         	movff	_horarioDespertador,_pegaHoraData
  2240                           
  2241                           ;main.c: 468: pegaHoraData[1] = horarioDespertador[1];
  2242  00090C  C030  F046         	movff	_horarioDespertador+1,_pegaHoraData+1
  2243                           
  2244                           ;main.c: 469: BUFFRESP[2] = atoi(pegaHoraData);
  2245  000910  0E45               	movlw	low _pegaHoraData
  2246  000912  6E1D               	movwf	atoi@s,c
  2247  000914  0E00               	movlw	high _pegaHoraData
  2248  000916  6E1E               	movwf	atoi@s+1,c
  2249  000918  ECAD  F008         	call	_atoi	;wreg free
  2250  00091C  501D               	movf	?_atoi,w,c
  2251  00091E  0100               	movlb	0	; () banked
  2252  000920  6F7E               	movwf	(_BUFFRESP+2)& (0+255),b
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;main.c: 470: pegaHoraData[0] = horarioDespertador[3];
  2256  000922  C032  F045         	movff	_horarioDespertador+3,_pegaHoraData
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;main.c: 471: pegaHoraData[1] = horarioDespertador[4];
  2260  000926  C033  F046         	movff	_horarioDespertador+4,_pegaHoraData+1
  2261                           
  2262                           ;main.c: 472: BUFFRESP[3] = atoi(pegaHoraData);
  2263  00092A  0E45               	movlw	low _pegaHoraData
  2264  00092C  6E1D               	movwf	atoi@s,c
  2265  00092E  0E00               	movlw	high _pegaHoraData
  2266  000930  6E1E               	movwf	atoi@s+1,c
  2267  000932  ECAD  F008         	call	_atoi	;wreg free
  2268  000936  501D               	movf	?_atoi,w,c
  2269  000938  0100               	movlb	0	; () banked
  2270  00093A  6F7F               	movwf	(_BUFFRESP+3)& (0+255),b
  2271  00093C                     l3657:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;main.c: 473: BUFFRESP[4] = 0xFF;
  2275  00093C  0100               	movlb	0	; () banked
  2276  00093E  6980               	setf	(_BUFFRESP+4)& (0+255),b
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;main.c: 479: }
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;main.c: 477: break;
  2283                           
  2284                           ;main.c: 476: default:
  2285                           
  2286                           ;main.c: 474: break;
  2287  000940  D0E3               	goto	l3689
  2288  000942                     l3661:
  2289  000942  503F               	movf	_BUFFCOM+1,w,c
  2290                           
  2291                           ; Switch size 1, requested type "space"
  2292                           ; Number of cases is 4, Range of values is 0 to 3
  2293                           ; switch strategies available:
  2294                           ; Name         Instructions Cycles
  2295                           ; simple_byte           13     7 (average)
  2296                           ;	Chosen strategy is simple_byte
  2297  000944  0A00               	xorlw	0	; case 0
  2298  000946  B4D8               	btfsc	status,2,c
  2299  000948  D794               	goto	l230
  2300  00094A  0A01               	xorlw	1	; case 1
  2301  00094C  B4D8               	btfsc	status,2,c
  2302  00094E  D796               	goto	l232
  2303  000950  0A03               	xorlw	3	; case 2
  2304  000952  B4D8               	btfsc	status,2,c
  2305  000954  D7B9               	goto	l233
  2306  000956  0A01               	xorlw	1	; case 3
  2307  000958  B4D8               	btfsc	status,2,c
  2308  00095A  D7D6               	goto	l234
  2309                           
  2310                           ;main.c: 481: break;
  2311  00095C  D0D5               	goto	l3689
  2312  00095E                     l3663:
  2313                           
  2314                           ;main.c: 488: memcpy(BUFFRESP,BUFFCOM,strlen(BUFFCOM));
  2315  00095E  0E7C               	movlw	low _BUFFRESP
  2316  000960  6E1D               	movwf	memcpy@d1,c
  2317  000962  0E00               	movlw	high _BUFFRESP
  2318  000964  6E1E               	movwf	memcpy@d1+1,c
  2319  000966  0E3E               	movlw	low _BUFFCOM
  2320  000968  6E1F               	movwf	memcpy@s1,c
  2321  00096A  0E00               	movlw	high _BUFFCOM
  2322  00096C  6E20               	movwf	memcpy@s1+1,c
  2323  00096E  0E3E               	movlw	low _BUFFCOM
  2324  000970  6E17               	movwf	strlen@s,c
  2325  000972  0E00               	movlw	high _BUFFCOM
  2326  000974  6E18               	movwf	strlen@s+1,c
  2327  000976  EC09  F00C         	call	_strlen	;wreg free
  2328  00097A  C017  F021         	movff	?_strlen,memcpy@n
  2329  00097E  C018  F022         	movff	?_strlen+1,memcpy@n+1
  2330  000982  ECAB  F00B         	call	_memcpy	;wreg free
  2331                           
  2332                           ;main.c: 489: if(BUFFCOM[1] == (1+'0')){
  2333  000986  0E31               	movlw	49
  2334  000988  183F               	xorwf	_BUFFCOM+1,w,c
  2335  00098A  A4D8               	btfss	status,2,c
  2336  00098C  D0A8               	goto	l3683
  2337                           
  2338                           ;main.c: 490: printaDisplay();
  2339  00098E  EC12  F00D         	call	_printaDisplay	;wreg free
  2340                           
  2341                           ;main.c: 491: }
  2342                           ;main.c: 494: switch(BUFFCOM[1])
  2343  000992  D0A5               	goto	l3683
  2344  000994                     l3669:
  2345                           
  2346                           ;main.c: 499: versao[1] = BUFFCOM[2]+48;
  2347  000994  5040               	movf	_BUFFCOM+2,w,c
  2348  000996  0F30               	addlw	48
  2349  000998  0100               	movlb	0	; () banked
  2350  00099A  6FA6               	movwf	(_versao+1)& (0+255),b
  2351                           
  2352                           ;main.c: 500: versao[4] = BUFFCOM[3]+48;
  2353  00099C  5041               	movf	_BUFFCOM+3,w,c
  2354  00099E  0F30               	addlw	48
  2355  0009A0  0100               	movlb	0	; () banked
  2356  0009A2  6FA9               	movwf	(_versao+4)& (0+255),b
  2357                           
  2358                           ;main.c: 501: break;
  2359  0009A4  D0B1               	goto	l3689
  2360  0009A6                     l3671:
  2361                           
  2362                           ;main.c: 504: printaDisplay();
  2363  0009A6  EC12  F00D         	call	_printaDisplay	;wreg free
  2364                           
  2365                           ;main.c: 505: data_horario.data[0] = ((BUFFCOM[2]/10));
  2366  0009AA  C040  F017         	movff	_BUFFCOM+2,___awdiv@dividend
  2367  0009AE  6A18               	clrf	___awdiv@dividend+1,c
  2368  0009B0  0E00               	movlw	0
  2369  0009B2  6E1A               	movwf	___awdiv@divisor+1,c
  2370  0009B4  0E0A               	movlw	10
  2371  0009B6  6E19               	movwf	___awdiv@divisor,c
  2372  0009B8  ECB5  F009         	call	___awdiv	;wreg free
  2373  0009BC  5017               	movf	?___awdiv,w,c
  2374  0009BE  0100               	movlb	0	; () banked
  2375  0009C0  6F69               	movwf	(_data_horario+9)& (0+255),b
  2376                           
  2377                           ;main.c: 506: data_horario.data[1] = ((BUFFCOM[2]%10));
  2378  0009C2  C040  F017         	movff	_BUFFCOM+2,___awmod@dividend
  2379  0009C6  6A18               	clrf	___awmod@dividend+1,c
  2380  0009C8  0E00               	movlw	0
  2381  0009CA  6E1A               	movwf	___awmod@divisor+1,c
  2382  0009CC  0E0A               	movlw	10
  2383  0009CE  6E19               	movwf	___awmod@divisor,c
  2384  0009D0  ECF7  F009         	call	___awmod	;wreg free
  2385  0009D4  5017               	movf	?___awmod,w,c
  2386  0009D6  0100               	movlb	0	; () banked
  2387  0009D8  6F6A               	movwf	(_data_horario+10)& (0+255),b
  2388                           
  2389                           ;main.c: 507: data_horario.data[3] = ((BUFFCOM[3]/10));
  2390  0009DA  C041  F017         	movff	_BUFFCOM+3,___awdiv@dividend
  2391  0009DE  6A18               	clrf	___awdiv@dividend+1,c
  2392  0009E0  0E00               	movlw	0
  2393  0009E2  6E1A               	movwf	___awdiv@divisor+1,c
  2394  0009E4  0E0A               	movlw	10
  2395  0009E6  6E19               	movwf	___awdiv@divisor,c
  2396  0009E8  ECB5  F009         	call	___awdiv	;wreg free
  2397  0009EC  5017               	movf	?___awdiv,w,c
  2398  0009EE  0100               	movlb	0	; () banked
  2399  0009F0  6F6C               	movwf	(_data_horario+12)& (0+255),b
  2400                           
  2401                           ;main.c: 508: data_horario.data[4] = ((BUFFCOM[3]%10));
  2402  0009F2  C041  F017         	movff	_BUFFCOM+3,___awmod@dividend
  2403  0009F6  6A18               	clrf	___awmod@dividend+1,c
  2404  0009F8  0E00               	movlw	0
  2405  0009FA  6E1A               	movwf	___awmod@divisor+1,c
  2406  0009FC  0E0A               	movlw	10
  2407  0009FE  6E19               	movwf	___awmod@divisor,c
  2408  000A00  ECF7  F009         	call	___awmod	;wreg free
  2409  000A04  5017               	movf	?___awmod,w,c
  2410  000A06  0100               	movlb	0	; () banked
  2411  000A08  6F6D               	movwf	(_data_horario+13)& (0+255),b
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;main.c: 509: data_horario.ano = BUFFCOM[4] + 2000;
  2415  000A0A  0ED0               	movlw	208
  2416  000A0C  2442               	addwf	_BUFFCOM+4,w,c
  2417  000A0E  0100               	movlb	0	; () banked
  2418  000A10  6F72               	movwf	(_data_horario+18)& (0+255),b
  2419  000A12  0100               	movlb	0	; () banked
  2420  000A14  6B73               	clrf	(_data_horario+19)& (0+255),b
  2421  000A16  0E07               	movlw	7
  2422  000A18  2373               	addwfc	(_data_horario+19)& (0+255),f,b
  2423                           
  2424                           ;main.c: 511: break;
  2425  000A1A  D076               	goto	l3689
  2426  000A1C                     l3675:
  2427                           
  2428                           ;main.c: 514: data_horario.horario[0] = ((BUFFCOM[2]/10));
  2429  000A1C  C040  F017         	movff	_BUFFCOM+2,___awdiv@dividend
  2430  000A20  6A18               	clrf	___awdiv@dividend+1,c
  2431  000A22  0E00               	movlw	0
  2432  000A24  6E1A               	movwf	___awdiv@divisor+1,c
  2433  000A26  0E0A               	movlw	10
  2434  000A28  6E19               	movwf	___awdiv@divisor,c
  2435  000A2A  ECB5  F009         	call	___awdiv	;wreg free
  2436  000A2E  5017               	movf	?___awdiv,w,c
  2437  000A30  0100               	movlb	0	; () banked
  2438  000A32  6F60               	movwf	_data_horario& (0+255),b
  2439                           
  2440                           ;main.c: 515: data_horario.horario[1] = ((BUFFCOM[2]%10));
  2441  000A34  C040  F017         	movff	_BUFFCOM+2,___awmod@dividend
  2442  000A38  6A18               	clrf	___awmod@dividend+1,c
  2443  000A3A  0E00               	movlw	0
  2444  000A3C  6E1A               	movwf	___awmod@divisor+1,c
  2445  000A3E  0E0A               	movlw	10
  2446  000A40  6E19               	movwf	___awmod@divisor,c
  2447  000A42  ECF7  F009         	call	___awmod	;wreg free
  2448  000A46  5017               	movf	?___awmod,w,c
  2449  000A48  0100               	movlb	0	; () banked
  2450  000A4A  6F61               	movwf	(_data_horario+1)& (0+255),b
  2451                           
  2452                           ;main.c: 516: data_horario.horario[3] = ((BUFFCOM[3]/10));
  2453  000A4C  C041  F017         	movff	_BUFFCOM+3,___awdiv@dividend
  2454  000A50  6A18               	clrf	___awdiv@dividend+1,c
  2455  000A52  0E00               	movlw	0
  2456  000A54  6E1A               	movwf	___awdiv@divisor+1,c
  2457  000A56  0E0A               	movlw	10
  2458  000A58  6E19               	movwf	___awdiv@divisor,c
  2459  000A5A  ECB5  F009         	call	___awdiv	;wreg free
  2460  000A5E  5017               	movf	?___awdiv,w,c
  2461  000A60  0100               	movlb	0	; () banked
  2462  000A62  6F63               	movwf	(_data_horario+3)& (0+255),b
  2463                           
  2464                           ;main.c: 517: data_horario.horario[4] = ((BUFFCOM[3]%10));
  2465  000A64  C041  F017         	movff	_BUFFCOM+3,___awmod@dividend
  2466  000A68  6A18               	clrf	___awmod@dividend+1,c
  2467  000A6A  0E00               	movlw	0
  2468  000A6C  6E1A               	movwf	___awmod@divisor+1,c
  2469  000A6E  0E0A               	movlw	10
  2470  000A70  6E19               	movwf	___awmod@divisor,c
  2471  000A72  ECF7  F009         	call	___awmod	;wreg free
  2472  000A76  5017               	movf	?___awmod,w,c
  2473  000A78  0100               	movlb	0	; () banked
  2474  000A7A  6F64               	movwf	(_data_horario+4)& (0+255),b
  2475                           
  2476                           ;main.c: 520: break;
  2477  000A7C  D045               	goto	l3689
  2478  000A7E                     l3677:
  2479                           
  2480                           ;main.c: 522: horarioDespertador[0] = ((BUFFCOM[2]/10));
  2481  000A7E  C040  F017         	movff	_BUFFCOM+2,___awdiv@dividend
  2482  000A82  6A18               	clrf	___awdiv@dividend+1,c
  2483  000A84  0E00               	movlw	0
  2484  000A86  6E1A               	movwf	___awdiv@divisor+1,c
  2485  000A88  0E0A               	movlw	10
  2486  000A8A  6E19               	movwf	___awdiv@divisor,c
  2487  000A8C  ECB5  F009         	call	___awdiv	;wreg free
  2488  000A90  5017               	movf	?___awdiv,w,c
  2489  000A92  6E2F               	movwf	_horarioDespertador,c
  2490                           
  2491                           ;main.c: 523: horarioDespertador[1] = ((BUFFCOM[2]%10));
  2492  000A94  C040  F017         	movff	_BUFFCOM+2,___awmod@dividend
  2493  000A98  6A18               	clrf	___awmod@dividend+1,c
  2494  000A9A  0E00               	movlw	0
  2495  000A9C  6E1A               	movwf	___awmod@divisor+1,c
  2496  000A9E  0E0A               	movlw	10
  2497  000AA0  6E19               	movwf	___awmod@divisor,c
  2498  000AA2  ECF7  F009         	call	___awmod	;wreg free
  2499  000AA6  5017               	movf	?___awmod,w,c
  2500  000AA8  6E30               	movwf	_horarioDespertador+1,c
  2501                           
  2502                           ;main.c: 524: horarioDespertador[3] = ((BUFFCOM[3]/10));
  2503  000AAA  C041  F017         	movff	_BUFFCOM+3,___awdiv@dividend
  2504  000AAE  6A18               	clrf	___awdiv@dividend+1,c
  2505  000AB0  0E00               	movlw	0
  2506  000AB2  6E1A               	movwf	___awdiv@divisor+1,c
  2507  000AB4  0E0A               	movlw	10
  2508  000AB6  6E19               	movwf	___awdiv@divisor,c
  2509  000AB8  ECB5  F009         	call	___awdiv	;wreg free
  2510  000ABC  5017               	movf	?___awdiv,w,c
  2511  000ABE  6E32               	movwf	_horarioDespertador+3,c
  2512                           
  2513                           ;main.c: 525: horarioDespertador[4] = ((BUFFCOM[3]%10));
  2514  000AC0  C041  F017         	movff	_BUFFCOM+3,___awmod@dividend
  2515  000AC4  6A18               	clrf	___awmod@dividend+1,c
  2516  000AC6  0E00               	movlw	0
  2517  000AC8  6E1A               	movwf	___awmod@divisor+1,c
  2518  000ACA  0E0A               	movlw	10
  2519  000ACC  6E19               	movwf	___awmod@divisor,c
  2520  000ACE  ECF7  F009         	call	___awmod	;wreg free
  2521  000AD2  5017               	movf	?___awmod,w,c
  2522  000AD4  6E33               	movwf	_horarioDespertador+4,c
  2523                           
  2524                           ;main.c: 526: atualiza_Tela(0);
  2525  000AD6  0E00               	movlw	0
  2526  000AD8  EC87  F005         	call	_atualiza_Tela
  2527                           
  2528                           ;main.c: 531: }
  2529                           
  2530                           ;main.c: 529: break;
  2531                           
  2532                           ;main.c: 528: default:
  2533                           
  2534                           ;main.c: 527: break;
  2535  000ADC  D015               	goto	l3689
  2536  000ADE                     l3683:
  2537  000ADE  503F               	movf	_BUFFCOM+1,w,c
  2538                           
  2539                           ; Switch size 1, requested type "space"
  2540                           ; Number of cases is 4, Range of values is 0 to 3
  2541                           ; switch strategies available:
  2542                           ; Name         Instructions Cycles
  2543                           ; simple_byte           13     7 (average)
  2544                           ;	Chosen strategy is simple_byte
  2545  000AE0  0A00               	xorlw	0	; case 0
  2546  000AE2  B4D8               	btfsc	status,2,c
  2547  000AE4  D757               	goto	l3669
  2548  000AE6  0A01               	xorlw	1	; case 1
  2549  000AE8  B4D8               	btfsc	status,2,c
  2550  000AEA  D75D               	goto	l3671
  2551  000AEC  0A03               	xorlw	3	; case 2
  2552  000AEE  B4D8               	btfsc	status,2,c
  2553  000AF0  D795               	goto	l3675
  2554  000AF2  0A01               	xorlw	1	; case 3
  2555  000AF4  B4D8               	btfsc	status,2,c
  2556  000AF6  D7C3               	goto	l3677
  2557                           
  2558                           ;main.c: 535: }
  2559                           
  2560                           ;main.c: 534: break;
  2561  000AF8  D007               	goto	l3689
  2562  000AFA                     l3687:
  2563  000AFA  503E               	movf	_BUFFCOM,w,c
  2564                           
  2565                           ; Switch size 1, requested type "space"
  2566                           ; Number of cases is 2, Range of values is 1 to 2
  2567                           ; switch strategies available:
  2568                           ; Name         Instructions Cycles
  2569                           ; simple_byte            7     4 (average)
  2570                           ;	Chosen strategy is simple_byte
  2571  000AFC  0A01               	xorlw	1	; case 1
  2572  000AFE  B4D8               	btfsc	status,2,c
  2573  000B00  D6B3               	goto	l228
  2574  000B02  0A03               	xorlw	3	; case 2
  2575  000B04  B4D8               	btfsc	status,2,c
  2576  000B06  D72B               	goto	l3663
  2577  000B08                     l3689:
  2578                           
  2579                           ;main.c: 539: calculaCRCBUFFRESP();
  2580  000B08  EC90  F00C         	call	_calculaCRCBUFFRESP	;wreg free
  2581  000B0C  0012               	return		;funcret
  2582  000B0E                     __end_of_trataComando:
  2583                           	opt stack 0
  2584                           tblptru	equ	0xFF8
  2585                           tblptrh	equ	0xFF7
  2586                           tblptrl	equ	0xFF6
  2587                           tablat	equ	0xFF5
  2588                           intcon	equ	0xFF2
  2589                           postinc0	equ	0xFEE
  2590                           wreg	equ	0xFE8
  2591                           postdec1	equ	0xFE5
  2592                           fsr1l	equ	0xFE1
  2593                           indf2	equ	0xFDF
  2594                           postinc2	equ	0xFDE
  2595                           fsr2h	equ	0xFDA
  2596                           fsr2l	equ	0xFD9
  2597                           status	equ	0xFD8
  2598                           
  2599 ;; *************** function _strlen *****************
  2600 ;; Defined at:
  2601 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  s               2   22[COMRAM] PTR const unsigned char 
  2604 ;;		 -> BUFFCOM(7), 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  cp              2   26[COMRAM] PTR const unsigned char 
  2607 ;;		 -> BUFFCOM(7), 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  2   22[COMRAM] unsigned int 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2617 ;;      Params:         2       0       0       0       0       0       0       0       0
  2618 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2619 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2620 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2621 ;;Total ram usage:        6 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    5
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_trataComando
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text8
  2632  001812                     __ptext8:
  2633                           	opt stack 0
  2634  001812                     _strlen:
  2635                           	opt stack 23
  2636                           
  2637                           ;incstack = 0
  2638  001812  C017  F01B         	movff	strlen@s,strlen@cp
  2639  001816  C018  F01C         	movff	strlen@s+1,strlen@cp+1
  2640  00181A  D002               	goto	l3431
  2641  00181C                     l3429:
  2642  00181C  4A1B               	infsnz	strlen@cp,f,c
  2643  00181E  2A1C               	incf	strlen@cp+1,f,c
  2644  001820                     l3431:
  2645  001820  C01B  FFD9         	movff	strlen@cp,fsr2l
  2646  001824  C01C  FFDA         	movff	strlen@cp+1,fsr2h
  2647  001828  50DF               	movf	indf2,w,c
  2648  00182A  A4D8               	btfss	status,2,c
  2649  00182C  D7F7               	goto	l3429
  2650  00182E  C017  F019         	movff	strlen@s,??_strlen
  2651  001832  C018  F01A         	movff	strlen@s+1,??_strlen+1
  2652  001836  1E19               	comf	??_strlen,f,c
  2653  001838  1E1A               	comf	??_strlen+1,f,c
  2654  00183A  4A19               	infsnz	??_strlen,f,c
  2655  00183C  2A1A               	incf	??_strlen+1,f,c
  2656  00183E  501B               	movf	strlen@cp,w,c
  2657  001840  2419               	addwf	??_strlen,w,c
  2658  001842  6E17               	movwf	?_strlen,c
  2659  001844  501C               	movf	strlen@cp+1,w,c
  2660  001846  201A               	addwfc	??_strlen+1,w,c
  2661  001848  6E18               	movwf	?_strlen+1,c
  2662  00184A  0012               	return	
  2663  00184C                     __end_of_strlen:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           intcon	equ	0xFF2
  2670                           postinc0	equ	0xFEE
  2671                           wreg	equ	0xFE8
  2672                           postdec1	equ	0xFE5
  2673                           fsr1l	equ	0xFE1
  2674                           indf2	equ	0xFDF
  2675                           postinc2	equ	0xFDE
  2676                           fsr2h	equ	0xFDA
  2677                           fsr2l	equ	0xFD9
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _printaDisplay *****************
  2681 ;; Defined at:
  2682 ;;		line 99 in file "main.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2696 ;;      Params:         0       0       0       0       0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    8
  2703 ;; This function calls:
  2704 ;;		_SetDDRamAddr
  2705 ;; This function is called by:
  2706 ;;		_trataComando
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text9
  2711  001A24                     __ptext9:
  2712                           	opt stack 0
  2713  001A24                     _printaDisplay:
  2714                           	opt stack 20
  2715                           
  2716                           ;main.c: 100: SetDDRamAddr(0x00);
  2717                           
  2718                           ;incstack = 0
  2719  001A24  0E00               	movlw	0
  2720  001A26  EC15  F00B         	call	_SetDDRamAddr
  2721  001A2A  0012               	return		;funcret
  2722  001A2C                     __end_of_printaDisplay:
  2723                           	opt stack 0
  2724                           tblptru	equ	0xFF8
  2725                           tblptrh	equ	0xFF7
  2726                           tblptrl	equ	0xFF6
  2727                           tablat	equ	0xFF5
  2728                           intcon	equ	0xFF2
  2729                           postinc0	equ	0xFEE
  2730                           wreg	equ	0xFE8
  2731                           postdec1	equ	0xFE5
  2732                           fsr1l	equ	0xFE1
  2733                           indf2	equ	0xFDF
  2734                           postinc2	equ	0xFDE
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function _memcpy *****************
  2740 ;; Defined at:
  2741 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  d1              2   28[COMRAM] PTR void 
  2744 ;;		 -> BUFFRESP(7), 
  2745 ;;  s1              2   30[COMRAM] PTR const void 
  2746 ;;		 -> BUFFCOM(7), 
  2747 ;;  n               2   32[COMRAM] unsigned int 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  s               2   36[COMRAM] PTR const unsigned char 
  2750 ;;		 -> BUFFCOM(7), 
  2751 ;;  d               2   34[COMRAM] PTR unsigned char 
  2752 ;;		 -> BUFFRESP(7), 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  2   28[COMRAM] PTR void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2762 ;;      Params:         6       0       0       0       0       0       0       0       0
  2763 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2765 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2766 ;;Total ram usage:       10 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    5
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_trataComando
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text10
  2777  001756                     __ptext10:
  2778                           	opt stack 0
  2779  001756                     _memcpy:
  2780                           	opt stack 23
  2781                           
  2782                           ;incstack = 0
  2783  001756  C01F  F025         	movff	memcpy@s1,memcpy@s
  2784  00175A  C020  F026         	movff	memcpy@s1+1,memcpy@s+1
  2785  00175E  C01D  F023         	movff	memcpy@d1,memcpy@d
  2786  001762  C01E  F024         	movff	memcpy@d1+1,memcpy@d+1
  2787  001766  D00E               	goto	l3445
  2788  001768                     l3439:
  2789  001768  C025  FFD9         	movff	memcpy@s,fsr2l
  2790  00176C  C026  FFDA         	movff	memcpy@s+1,fsr2h
  2791  001770  C023  FFE1         	movff	memcpy@d,fsr1l
  2792  001774  C024  FFE2         	movff	memcpy@d+1,fsr1h
  2793  001778  CFDF FFE7          	movff	indf2,indf1
  2794  00177C  4A25               	infsnz	memcpy@s,f,c
  2795  00177E  2A26               	incf	memcpy@s+1,f,c
  2796  001780  4A23               	infsnz	memcpy@d,f,c
  2797  001782  2A24               	incf	memcpy@d+1,f,c
  2798  001784                     l3445:
  2799  001784  0621               	decf	memcpy@n,f,c
  2800  001786  A0D8               	btfss	status,0,c
  2801  001788  0622               	decf	memcpy@n+1,f,c
  2802  00178A  2821               	incf	memcpy@n,w,c
  2803  00178C  E1ED               	bnz	l3439
  2804  00178E  2822               	incf	memcpy@n+1,w,c
  2805  001790  B4D8               	btfsc	status,2,c
  2806  001792  0012               	return	
  2807  001794  D7E9               	goto	l3439
  2808  001796                     __end_of_memcpy:
  2809                           	opt stack 0
  2810                           tblptru	equ	0xFF8
  2811                           tblptrh	equ	0xFF7
  2812                           tblptrl	equ	0xFF6
  2813                           tablat	equ	0xFF5
  2814                           intcon	equ	0xFF2
  2815                           postinc0	equ	0xFEE
  2816                           wreg	equ	0xFE8
  2817                           indf1	equ	0xFE7
  2818                           postdec1	equ	0xFE5
  2819                           fsr1h	equ	0xFE2
  2820                           fsr1l	equ	0xFE1
  2821                           indf2	equ	0xFDF
  2822                           postinc2	equ	0xFDE
  2823                           fsr2h	equ	0xFDA
  2824                           fsr2l	equ	0xFD9
  2825                           status	equ	0xFD8
  2826                           
  2827 ;; *************** function _calculaCRCBUFFRESP *****************
  2828 ;; Defined at:
  2829 ;;		line 409 in file "main.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  crc             2   35[COMRAM] unsigned short 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0
  2844 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2846 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        2 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    6
  2850 ;; This function calls:
  2851 ;;		_crc16
  2852 ;; This function is called by:
  2853 ;;		_trataComando
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text11
  2858  001920                     __ptext11:
  2859                           	opt stack 0
  2860  001920                     _calculaCRCBUFFRESP:
  2861                           	opt stack 22
  2862                           
  2863                           ;main.c: 411: unsigned short crc;
  2864                           ;main.c: 413: crc = crc16(BUFFRESP,5);
  2865                           
  2866                           ;incstack = 0
  2867  001920  0E7C               	movlw	low _BUFFRESP
  2868  001922  6E17               	movwf	crc16@data_p,c
  2869  001924  0E00               	movlw	high _BUFFRESP
  2870  001926  6E18               	movwf	crc16@data_p+1,c
  2871  001928  0E00               	movlw	0
  2872  00192A  6E1A               	movwf	crc16@length+1,c
  2873  00192C  0E05               	movlw	5
  2874  00192E  6E19               	movwf	crc16@length,c
  2875  001930  EC44  F008         	call	_crc16	;wreg free
  2876  001934  C017  F024         	movff	?_crc16,calculaCRCBUFFRESP@crc
  2877  001938  C018  F025         	movff	?_crc16+1,calculaCRCBUFFRESP@crc+1
  2878                           
  2879                           ;main.c: 415: BUFFRESP[5] = crc >> 8;
  2880  00193C  5025               	movf	calculaCRCBUFFRESP@crc+1,w,c
  2881  00193E  0100               	movlb	0	; () banked
  2882  001940  6F81               	movwf	(_BUFFRESP+5)& (0+255),b
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;main.c: 416: BUFFRESP[6] = crc & 0xFF;
  2886  001942  C024  F082         	movff	calculaCRCBUFFRESP@crc,_BUFFRESP+6
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;main.c: 418: estado = 3;
  2890  001946  0E03               	movlw	3
  2891  001948  6E3D               	movwf	_estado,c
  2892                           
  2893                           ; BSR set to: 0
  2894  00194A  0012               	return		;funcret
  2895  00194C                     __end_of_calculaCRCBUFFRESP:
  2896                           	opt stack 0
  2897                           tblptru	equ	0xFF8
  2898                           tblptrh	equ	0xFF7
  2899                           tblptrl	equ	0xFF6
  2900                           tablat	equ	0xFF5
  2901                           intcon	equ	0xFF2
  2902                           postinc0	equ	0xFEE
  2903                           wreg	equ	0xFE8
  2904                           indf1	equ	0xFE7
  2905                           postdec1	equ	0xFE5
  2906                           fsr1h	equ	0xFE2
  2907                           fsr1l	equ	0xFE1
  2908                           indf2	equ	0xFDF
  2909                           postinc2	equ	0xFDE
  2910                           fsr2h	equ	0xFDA
  2911                           fsr2l	equ	0xFD9
  2912                           status	equ	0xFD8
  2913                           
  2914 ;; *************** function _crc16 *****************
  2915 ;; Defined at:
  2916 ;;		line 354 in file "main.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  data_p          2   22[COMRAM] PTR unsigned char 
  2919 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  2920 ;;  length          2   24[COMRAM] unsigned short 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  crc             2   33[COMRAM] unsigned int 
  2923 ;;  data            2   31[COMRAM] unsigned int 
  2924 ;;  i               1   30[COMRAM] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  2   22[COMRAM] unsigned short 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2934 ;;      Params:         4       0       0       0       0       0       0       0       0
  2935 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2936 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2937 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2938 ;;Total ram usage:       13 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    5
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_calculaCRCBUFFRESP
  2945 ;;		_verificaCRCBUFFCOM
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text12
  2950  001088                     __ptext12:
  2951                           	opt stack 0
  2952  001088                     _crc16:
  2953                           	opt stack 23
  2954                           
  2955                           ;main.c: 356: unsigned char i;
  2956                           ;main.c: 357: unsigned int data;
  2957                           ;main.c: 358: unsigned int crc = 0xffff;
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;incstack = 0
  2961  001088  6822               	setf	crc16@crc,c
  2962  00108A  6823               	setf	crc16@crc+1,c
  2963                           
  2964                           ;main.c: 360: if (length == 0)
  2965  00108C  5019               	movf	crc16@length,w,c
  2966  00108E  101A               	iorwf	crc16@length+1,w,c
  2967  001090  A4D8               	btfss	status,2,c
  2968  001092  D005               	goto	l3249
  2969                           
  2970                           ;main.c: 361: return (~crc);
  2971  001094  1C22               	comf	crc16@crc,w,c
  2972  001096  6E17               	movwf	?_crc16,c
  2973  001098  1C23               	comf	crc16@crc+1,w,c
  2974  00109A  6E18               	movwf	?_crc16+1,c
  2975  00109C  0012               	return	
  2976  00109E                     l3249:
  2977                           
  2978                           ;main.c: 364: {
  2979                           ;main.c: 365: for (i=0, data=(unsigned int)0xff & *data_p++;
  2980  00109E  0E00               	movlw	0
  2981  0010A0  6E1F               	movwf	crc16@i,c
  2982  0010A2  C017  FFD9         	movff	crc16@data_p,fsr2l
  2983  0010A6  C018  FFDA         	movff	crc16@data_p+1,fsr2h
  2984  0010AA  50DF               	movf	indf2,w,c
  2985  0010AC  6E1B               	movwf	??_crc16& (0+255),c
  2986  0010AE  501B               	movf	??_crc16,w,c
  2987  0010B0  6E20               	movwf	crc16@data,c
  2988  0010B2  6A21               	clrf	crc16@data+1,c
  2989  0010B4  4A17               	infsnz	crc16@data_p,f,c
  2990  0010B6  2A18               	incf	crc16@data_p+1,f,c
  2991  0010B8                     l3255:
  2992                           
  2993                           ;main.c: 366: i < 8;
  2994                           ;main.c: 367: i++, data >>= 1)
  2995  0010B8  0E07               	movlw	7
  2996  0010BA  641F               	cpfsgt	crc16@i,c
  2997  0010BC  D001               	goto	l3259
  2998  0010BE  D028               	goto	l3267
  2999  0010C0                     l3259:
  3000                           
  3001                           ;main.c: 368: {
  3002                           ;main.c: 369: if ((crc & 0x0001) ^ (data & 0x0001))
  3003  0010C0  0E01               	movlw	1
  3004  0010C2  1420               	andwf	crc16@data,w,c
  3005  0010C4  6E1B               	movwf	??_crc16& (0+255),c
  3006  0010C6  0E00               	movlw	0
  3007  0010C8  1421               	andwf	crc16@data+1,w,c
  3008  0010CA  6E1C               	movwf	(??_crc16+1)& (0+255),c
  3009  0010CC  0E01               	movlw	1
  3010  0010CE  1422               	andwf	crc16@crc,w,c
  3011  0010D0  6E1D               	movwf	(??_crc16+2)& (0+255),c
  3012  0010D2  0E00               	movlw	0
  3013  0010D4  1423               	andwf	crc16@crc+1,w,c
  3014  0010D6  6E1E               	movwf	(??_crc16+3)& (0+255),c
  3015  0010D8  501B               	movf	??_crc16,w,c
  3016  0010DA  1A1D               	xorwf	??_crc16+2,f,c
  3017  0010DC  501C               	movf	??_crc16+1,w,c
  3018  0010DE  1A1E               	xorwf	??_crc16+3,f,c
  3019  0010E0  501D               	movf	??_crc16+2,w,c
  3020  0010E2  101E               	iorwf	??_crc16+3,w,c
  3021  0010E4  B4D8               	btfsc	status,2,c
  3022  0010E6  D00C               	goto	l3263
  3023                           
  3024                           ;main.c: 370: crc = (crc >> 1) ^ 0x8408;
  3025  0010E8  90D8               	bcf	status,0,c
  3026  0010EA  3023               	rrcf	crc16@crc+1,w,c
  3027  0010EC  6E1C               	movwf	(??_crc16+1)& (0+255),c
  3028  0010EE  3022               	rrcf	crc16@crc,w,c
  3029  0010F0  6E1B               	movwf	??_crc16& (0+255),c
  3030  0010F2  0E08               	movlw	8
  3031  0010F4  181B               	xorwf	??_crc16,w,c
  3032  0010F6  6E22               	movwf	crc16@crc,c
  3033  0010F8  0E84               	movlw	132
  3034  0010FA  181C               	xorwf	??_crc16+1,w,c
  3035  0010FC  6E23               	movwf	crc16@crc+1,c
  3036  0010FE  D003               	goto	l204
  3037  001100                     l3263:
  3038                           
  3039                           ;main.c: 371: else crc >>= 1;
  3040  001100  90D8               	bcf	status,0,c
  3041  001102  3223               	rrcf	crc16@crc+1,f,c
  3042  001104  3222               	rrcf	crc16@crc,f,c
  3043  001106                     l204:
  3044  001106  2A1F               	incf	crc16@i,f,c
  3045  001108  90D8               	bcf	status,0,c
  3046  00110A  3221               	rrcf	crc16@data+1,f,c
  3047  00110C  3220               	rrcf	crc16@data,f,c
  3048  00110E  D7D4               	goto	l3255
  3049  001110                     l3267:
  3050                           
  3051                           ;main.c: 372: }
  3052                           ;main.c: 373: } while (--length);
  3053  001110  0619               	decf	crc16@length,f,c
  3054  001112  A0D8               	btfss	status,0,c
  3055  001114  061A               	decf	crc16@length+1,f,c
  3056  001116  5019               	movf	crc16@length,w,c
  3057  001118  101A               	iorwf	crc16@length+1,w,c
  3058  00111A  A4D8               	btfss	status,2,c
  3059  00111C  D7C0               	goto	l3249
  3060                           
  3061                           ;main.c: 375: crc = ~crc;
  3062  00111E  1E22               	comf	crc16@crc,f,c
  3063  001120  1E23               	comf	crc16@crc+1,f,c
  3064                           
  3065                           ;main.c: 376: data = crc;
  3066  001122  C022  F020         	movff	crc16@crc,crc16@data
  3067  001126  C023  F021         	movff	crc16@crc+1,crc16@data+1
  3068                           
  3069                           ;main.c: 377: crc = (crc << 8) | (data >> 8 & 0xff);
  3070  00112A  C020  F01B         	movff	crc16@data,??_crc16
  3071  00112E  C021  F01C         	movff	crc16@data+1,??_crc16+1
  3072  001132  C01C  F01B         	movff	??_crc16+1,??_crc16
  3073  001136  6A1C               	clrf	??_crc16+1,c
  3074  001138  501B               	movf	??_crc16,w,c
  3075  00113A  C022  F01D         	movff	crc16@crc,??_crc16+2
  3076  00113E  C023  F01E         	movff	crc16@crc+1,??_crc16+3
  3077  001142  C01D  F01E         	movff	??_crc16+2,??_crc16+3
  3078  001146  6A1D               	clrf	??_crc16+2,c
  3079  001148  101D               	iorwf	??_crc16+2,w,c
  3080  00114A  6E22               	movwf	crc16@crc,c
  3081  00114C  501E               	movf	??_crc16+3,w,c
  3082  00114E  6E23               	movwf	crc16@crc+1,c
  3083                           
  3084                           ;main.c: 379: return (crc);
  3085  001150  C022  F017         	movff	crc16@crc,?_crc16
  3086  001154  C023  F018         	movff	crc16@crc+1,?_crc16+1
  3087  001158  0012               	return	
  3088  00115A                     __end_of_crc16:
  3089                           	opt stack 0
  3090                           tblptru	equ	0xFF8
  3091                           tblptrh	equ	0xFF7
  3092                           tblptrl	equ	0xFF6
  3093                           tablat	equ	0xFF5
  3094                           intcon	equ	0xFF2
  3095                           postinc0	equ	0xFEE
  3096                           wreg	equ	0xFE8
  3097                           indf1	equ	0xFE7
  3098                           postdec1	equ	0xFE5
  3099                           fsr1h	equ	0xFE2
  3100                           fsr1l	equ	0xFE1
  3101                           indf2	equ	0xFDF
  3102                           postinc2	equ	0xFDE
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _atualiza_Tela *****************
  3108 ;; Defined at:
  3109 ;;		line 257 in file "main.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  troca_ou_nao    1    wreg     unsigned char 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  troca_ou_nao    1   20[BANK0 ] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0
  3124 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3126 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3127 ;;Total ram usage:        1 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    9
  3130 ;; This function calls:
  3131 ;;		_SetDDRamAddr
  3132 ;;		_acionaDespertador
  3133 ;;		_converteAnoString
  3134 ;;		_putrsXLCD
  3135 ;;		_sprintf
  3136 ;; This function is called by:
  3137 ;;		_setaDespertador
  3138 ;;		_trataComando
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text13
  3144  000B0E                     __ptext13:
  3145                           	opt stack 0
  3146  000B0E                     _atualiza_Tela:
  3147                           	opt stack 20
  3148                           
  3149                           ;incstack = 0
  3150                           ;atualiza_Tela@troca_ou_nao stored from wreg
  3151  000B0E  0100               	movlb	0	; () banked
  3152  000B10  6F97               	movwf	atualiza_Tela@troca_ou_nao& (0+255),b
  3153                           
  3154                           ;main.c: 259: if(troca_ou_nao == 1){
  3155  000B12  0100               	movlb	0	; () banked
  3156  000B14  0597               	decf	atualiza_Tela@troca_ou_nao& (0+255),w,b
  3157  000B16  A4D8               	btfss	status,2,c
  3158  000B18  D0DD               	goto	l3385
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;main.c: 260: tela_atual++;
  3162  000B1A  2A35               	incf	_tela_atual,f,c
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;main.c: 261: if(tela_atual >2){
  3166  000B1C  0E02               	movlw	2
  3167  000B1E  6435               	cpfsgt	_tela_atual,c
  3168  000B20  D0D9               	goto	l3385
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;main.c: 262: tela_atual = 0;
  3172  000B22  0E00               	movlw	0
  3173  000B24  6E35               	movwf	_tela_atual,c
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;main.c: 263: }
  3177                           ;main.c: 264: }
  3178                           ;main.c: 265: switch(tela_atual){
  3179                           
  3180                           ; BSR set to: 0
  3181  000B26  D0D6               	goto	l3385
  3182  000B28                     l3335:
  3183                           
  3184                           ;main.c: 267: SetDDRamAddr(0x00);
  3185  000B28  0E00               	movlw	0
  3186  000B2A  EC15  F00B         	call	_SetDDRamAddr
  3187                           
  3188                           ;main.c: 268: putrsXLCD("Despertador     ");
  3189  000B2E  0E1C               	movlw	low STR_2
  3190  000B30  6E2D               	movwf	putrsXLCD@buffer,c
  3191  000B32  0E08               	movlw	high STR_2
  3192  000B34  6E2E               	movwf	putrsXLCD@buffer+1,c
  3193  000B36  EC92  F00A         	call	_putrsXLCD	;wreg free
  3194                           
  3195                           ;main.c: 269: SetDDRamAddr(0x40);
  3196  000B3A  0E40               	movlw	64
  3197  000B3C  EC15  F00B         	call	_SetDDRamAddr
  3198                           
  3199                           ;main.c: 270: putrsXLCD("Versao: ");
  3200  000B40  0E47               	movlw	low STR_3
  3201  000B42  6E2D               	movwf	putrsXLCD@buffer,c
  3202  000B44  0E08               	movlw	high STR_3
  3203  000B46  6E2E               	movwf	putrsXLCD@buffer+1,c
  3204  000B48  EC92  F00A         	call	_putrsXLCD	;wreg free
  3205                           
  3206                           ;main.c: 271: putrsXLCD(versao);
  3207  000B4C  0EA5               	movlw	low _versao
  3208  000B4E  6E2D               	movwf	putrsXLCD@buffer,c
  3209  000B50  0E00               	movlw	high _versao
  3210  000B52  6E2E               	movwf	putrsXLCD@buffer+1,c
  3211  000B54  EC92  F00A         	call	_putrsXLCD	;wreg free
  3212                           
  3213                           ;main.c: 273: break;
  3214  000B58  0012               	return	
  3215  000B5A                     l3341:
  3216                           
  3217                           ;main.c: 275: SetDDRamAddr(0x00);
  3218  000B5A  0E00               	movlw	0
  3219  000B5C  EC15  F00B         	call	_SetDDRamAddr
  3220                           
  3221                           ;main.c: 276: putrsXLCD("Hora: ");
  3222  000B60  0E57               	movlw	low STR_4
  3223  000B62  6E2D               	movwf	putrsXLCD@buffer,c
  3224  000B64  0E08               	movlw	high STR_4
  3225  000B66  6E2E               	movwf	putrsXLCD@buffer+1,c
  3226  000B68  EC92  F00A         	call	_putrsXLCD	;wreg free
  3227                           
  3228                           ;main.c: 277: sprintf(vet,"%i%i:%i%i:%i%i", data_horario.horario[0], data_horario.horari
      +                          o[1], data_horario.horario[3], data_horario.horario[4], data_horario.horario[6],data_hor
      +                          ario.horario[7]);
  3229  000B6C  0E74               	movlw	low _vet
  3230  000B6E  0100               	movlb	0	; () banked
  3231  000B70  6F83               	movwf	sprintf@sp& (0+255),b
  3232  000B72  0E00               	movlw	high _vet
  3233  000B74  0100               	movlb	0	; () banked
  3234  000B76  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  3235  000B78  0E2D               	movlw	low STR_5
  3236  000B7A  0100               	movlb	0	; () banked
  3237  000B7C  6F85               	movwf	sprintf@f& (0+255),b
  3238  000B7E  0E08               	movlw	high STR_5
  3239  000B80  0100               	movlb	0	; () banked
  3240  000B82  6F86               	movwf	(sprintf@f+1)& (0+255),b
  3241  000B84  C060  F087         	movff	_data_horario,?_sprintf+4
  3242  000B88  0100               	movlb	0	; () banked
  3243  000B8A  6B88               	clrf	(?_sprintf+5)& (0+255),b
  3244  000B8C  C061  F089         	movff	_data_horario+1,?_sprintf+6
  3245  000B90  0100               	movlb	0	; () banked
  3246  000B92  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  3247  000B94  C063  F08B         	movff	_data_horario+3,?_sprintf+8
  3248  000B98  0100               	movlb	0	; () banked
  3249  000B9A  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  3250  000B9C  C064  F08D         	movff	_data_horario+4,?_sprintf+10
  3251  000BA0  0100               	movlb	0	; () banked
  3252  000BA2  6B8E               	clrf	(?_sprintf+11)& (0+255),b
  3253  000BA4  C066  F08F         	movff	_data_horario+6,?_sprintf+12
  3254  000BA8  0100               	movlb	0	; () banked
  3255  000BAA  6B90               	clrf	(?_sprintf+13)& (0+255),b
  3256  000BAC  C067  F091         	movff	_data_horario+7,?_sprintf+14
  3257  000BB0  0100               	movlb	0	; () banked
  3258  000BB2  6B92               	clrf	(?_sprintf+15)& (0+255),b
  3259  000BB4  EC75  F006         	call	_sprintf	;wreg free
  3260                           
  3261                           ;main.c: 278: putrsXLCD(vet);
  3262  000BB8  0E74               	movlw	low _vet
  3263  000BBA  6E2D               	movwf	putrsXLCD@buffer,c
  3264  000BBC  0E00               	movlw	high _vet
  3265  000BBE  6E2E               	movwf	putrsXLCD@buffer+1,c
  3266  000BC0  EC92  F00A         	call	_putrsXLCD	;wreg free
  3267                           
  3268                           ;main.c: 279: SetDDRamAddr(0x40);
  3269  000BC4  0E40               	movlw	64
  3270  000BC6  EC15  F00B         	call	_SetDDRamAddr
  3271                           
  3272                           ;main.c: 280: putrsXLCD("Data: ");
  3273  000BCA  0E5E               	movlw	low STR_6
  3274  000BCC  6E2D               	movwf	putrsXLCD@buffer,c
  3275  000BCE  0E08               	movlw	high STR_6
  3276  000BD0  6E2E               	movwf	putrsXLCD@buffer+1,c
  3277  000BD2  EC92  F00A         	call	_putrsXLCD	;wreg free
  3278                           
  3279                           ;main.c: 281: sprintf(vet,"%i%i/%i%i/",data_horario.data[0],data_horario.data[1],data_ho
      +                          rario.data[3],data_horario.data[4]);
  3280  000BD6  0E74               	movlw	low _vet
  3281  000BD8  0100               	movlb	0	; () banked
  3282  000BDA  6F83               	movwf	sprintf@sp& (0+255),b
  3283  000BDC  0E00               	movlw	high _vet
  3284  000BDE  0100               	movlb	0	; () banked
  3285  000BE0  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  3286  000BE2  0E3C               	movlw	low STR_7
  3287  000BE4  0100               	movlb	0	; () banked
  3288  000BE6  6F85               	movwf	sprintf@f& (0+255),b
  3289  000BE8  0E08               	movlw	high STR_7
  3290  000BEA  0100               	movlb	0	; () banked
  3291  000BEC  6F86               	movwf	(sprintf@f+1)& (0+255),b
  3292  000BEE  C069  F087         	movff	_data_horario+9,?_sprintf+4
  3293  000BF2  0100               	movlb	0	; () banked
  3294  000BF4  6B88               	clrf	(?_sprintf+5)& (0+255),b
  3295  000BF6  C06A  F089         	movff	_data_horario+10,?_sprintf+6
  3296  000BFA  0100               	movlb	0	; () banked
  3297  000BFC  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  3298  000BFE  C06C  F08B         	movff	_data_horario+12,?_sprintf+8
  3299  000C02  0100               	movlb	0	; () banked
  3300  000C04  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  3301  000C06  C06D  F08D         	movff	_data_horario+13,?_sprintf+10
  3302  000C0A  0100               	movlb	0	; () banked
  3303  000C0C  6B8E               	clrf	(?_sprintf+11)& (0+255),b
  3304  000C0E  EC75  F006         	call	_sprintf	;wreg free
  3305                           
  3306                           ;main.c: 282: putrsXLCD(vet);
  3307  000C12  0E74               	movlw	low _vet
  3308  000C14  6E2D               	movwf	putrsXLCD@buffer,c
  3309  000C16  0E00               	movlw	high _vet
  3310  000C18  6E2E               	movwf	putrsXLCD@buffer+1,c
  3311  000C1A  EC92  F00A         	call	_putrsXLCD	;wreg free
  3312                           
  3313                           ;main.c: 283: putrsXLCD(converteAnoString(data_horario.ano));
  3314  000C1E  C072  F02B         	movff	_data_horario+18,converteAnoString@ano
  3315  000C22  C073  F02C         	movff	_data_horario+19,converteAnoString@ano+1
  3316  000C26  EC79  F00C         	call	_converteAnoString	;wreg free
  3317  000C2A  C02B  F02D         	movff	?_converteAnoString,putrsXLCD@buffer
  3318  000C2E  C02C  F02E         	movff	?_converteAnoString+1,putrsXLCD@buffer+1
  3319  000C32  EC92  F00A         	call	_putrsXLCD	;wreg free
  3320                           
  3321                           ;main.c: 284: acionaDespertador();
  3322  000C36  EC5F  F00C         	call	_acionaDespertador	;wreg free
  3323                           
  3324                           ;main.c: 285: if(flagDespertadorLigado){
  3325  000C3A  5039               	movf	_flagDespertadorLigado,w,c
  3326  000C3C  B4D8               	btfsc	status,2,c
  3327  000C3E  0012               	return	
  3328                           
  3329                           ;main.c: 286: PORTDbits.RD0 = 1;
  3330  000C40  8083               	bsf	3971,0,c	;volatile
  3331                           
  3332                           ;main.c: 287: tempoDespertador++;
  3333  000C42  2A36               	incf	_tempoDespertador,f,c
  3334                           
  3335                           ;main.c: 288: if(tempoDespertador > 5){
  3336  000C44  0E05               	movlw	5
  3337  000C46  6436               	cpfsgt	_tempoDespertador,c
  3338  000C48  0012               	return	
  3339                           
  3340                           ;main.c: 289: tempoDespertador = 0;
  3341  000C4A  0E00               	movlw	0
  3342  000C4C  6E36               	movwf	_tempoDespertador,c
  3343                           
  3344                           ;main.c: 290: flagDespertadorLigado =0;
  3345  000C4E  0E00               	movlw	0
  3346  000C50  6E39               	movwf	_flagDespertadorLigado,c
  3347                           
  3348                           ;main.c: 291: PORTDbits.RD0 = 0;
  3349  000C52  9083               	bcf	3971,0,c	;volatile
  3350                           
  3351                           ;main.c: 292: virouDia = 0;
  3352  000C54  0E00               	movlw	0
  3353  000C56  6E48               	movwf	_virouDia,c
  3354                           
  3355                           ;main.c: 293: }
  3356                           ;main.c: 294: }
  3357                           ;main.c: 295: break;
  3358  000C58  0012               	return	
  3359  000C5A                     l3371:
  3360                           
  3361                           ;main.c: 297: SetDDRamAddr(0x00);
  3362  000C5A  0E00               	movlw	0
  3363  000C5C  EC15  F00B         	call	_SetDDRamAddr
  3364                           
  3365                           ;main.c: 298: putrsXLCD("     ALARME     ");
  3366  000C60  0E0B               	movlw	low STR_8
  3367  000C62  6E2D               	movwf	putrsXLCD@buffer,c
  3368  000C64  0E08               	movlw	high STR_8
  3369  000C66  6E2E               	movwf	putrsXLCD@buffer+1,c
  3370  000C68  EC92  F00A         	call	_putrsXLCD	;wreg free
  3371                           
  3372                           ;main.c: 299: SetDDRamAddr(0x40);
  3373  000C6C  0E40               	movlw	64
  3374  000C6E  EC15  F00B         	call	_SetDDRamAddr
  3375                           
  3376                           ;main.c: 300: putrsXLCD("     ");
  3377  000C72  0E51               	movlw	low (STR_11+1)
  3378  000C74  6E2D               	movwf	putrsXLCD@buffer,c
  3379  000C76  0E08               	movlw	high (STR_11+1)
  3380  000C78  6E2E               	movwf	putrsXLCD@buffer+1,c
  3381  000C7A  EC92  F00A         	call	_putrsXLCD	;wreg free
  3382                           
  3383                           ;main.c: 301: sprintf(vet,"%i%i:%i%i", horarioDespertador[0], horarioDespertador[1], hor
      +                          arioDespertador[3], horarioDespertador[4]);
  3384  000C7E  0E74               	movlw	low _vet
  3385  000C80  0100               	movlb	0	; () banked
  3386  000C82  6F83               	movwf	sprintf@sp& (0+255),b
  3387  000C84  0E00               	movlw	high _vet
  3388  000C86  0100               	movlb	0	; () banked
  3389  000C88  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  3390  000C8A  0E32               	movlw	low (STR_5+5)
  3391  000C8C  0100               	movlb	0	; () banked
  3392  000C8E  6F85               	movwf	sprintf@f& (0+255),b
  3393  000C90  0E08               	movlw	high (STR_5+5)
  3394  000C92  0100               	movlb	0	; () banked
  3395  000C94  6F86               	movwf	(sprintf@f+1)& (0+255),b
  3396  000C96  C02F  F087         	movff	_horarioDespertador,?_sprintf+4
  3397  000C9A  0100               	movlb	0	; () banked
  3398  000C9C  6B88               	clrf	(?_sprintf+5)& (0+255),b
  3399  000C9E  C030  F089         	movff	_horarioDespertador+1,?_sprintf+6
  3400  000CA2  0100               	movlb	0	; () banked
  3401  000CA4  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  3402  000CA6  C032  F08B         	movff	_horarioDespertador+3,?_sprintf+8
  3403  000CAA  0100               	movlb	0	; () banked
  3404  000CAC  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  3405  000CAE  C033  F08D         	movff	_horarioDespertador+4,?_sprintf+10
  3406  000CB2  0100               	movlb	0	; () banked
  3407  000CB4  6B8E               	clrf	(?_sprintf+11)& (0+255),b
  3408  000CB6  EC75  F006         	call	_sprintf	;wreg free
  3409                           
  3410                           ;main.c: 302: putrsXLCD(vet);
  3411  000CBA  0E74               	movlw	low _vet
  3412  000CBC  6E2D               	movwf	putrsXLCD@buffer,c
  3413  000CBE  0E00               	movlw	high _vet
  3414  000CC0  6E2E               	movwf	putrsXLCD@buffer+1,c
  3415  000CC2  EC92  F00A         	call	_putrsXLCD	;wreg free
  3416                           
  3417                           ;main.c: 303: putrsXLCD("      ");
  3418  000CC6  0E50               	movlw	low STR_11
  3419  000CC8  6E2D               	movwf	putrsXLCD@buffer,c
  3420  000CCA  0E08               	movlw	high STR_11
  3421  000CCC  6E2E               	movwf	putrsXLCD@buffer+1,c
  3422  000CCE  EC92  F00A         	call	_putrsXLCD	;wreg free
  3423                           
  3424                           ;main.c: 305: }
  3425                           
  3426                           ;main.c: 304: break;
  3427  000CD2  0012               	return	
  3428  000CD4                     l3385:
  3429  000CD4  5035               	movf	_tela_atual,w,c
  3430                           
  3431                           ; Switch size 1, requested type "space"
  3432                           ; Number of cases is 3, Range of values is 0 to 2
  3433                           ; switch strategies available:
  3434                           ; Name         Instructions Cycles
  3435                           ; simple_byte           10     6 (average)
  3436                           ;	Chosen strategy is simple_byte
  3437  000CD6  0A00               	xorlw	0	; case 0
  3438  000CD8  B4D8               	btfsc	status,2,c
  3439  000CDA  D726               	goto	l3335
  3440  000CDC  0A01               	xorlw	1	; case 1
  3441  000CDE  B4D8               	btfsc	status,2,c
  3442  000CE0  D73C               	goto	l3341
  3443  000CE2  0A03               	xorlw	3	; case 2
  3444  000CE4  A4D8               	btfss	status,2,c
  3445  000CE6  0012               	return	
  3446  000CE8  D7B8               	goto	l3371
  3447  000CEA                     __end_of_atualiza_Tela:
  3448                           	opt stack 0
  3449                           tblptru	equ	0xFF8
  3450                           tblptrh	equ	0xFF7
  3451                           tblptrl	equ	0xFF6
  3452                           tablat	equ	0xFF5
  3453                           intcon	equ	0xFF2
  3454                           postinc0	equ	0xFEE
  3455                           wreg	equ	0xFE8
  3456                           indf1	equ	0xFE7
  3457                           postdec1	equ	0xFE5
  3458                           fsr1h	equ	0xFE2
  3459                           fsr1l	equ	0xFE1
  3460                           indf2	equ	0xFDF
  3461                           postinc2	equ	0xFDE
  3462                           fsr2h	equ	0xFDA
  3463                           fsr2l	equ	0xFD9
  3464                           status	equ	0xFD8
  3465                           
  3466 ;; *************** function _putrsXLCD *****************
  3467 ;; Defined at:
  3468 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  buffer          2   44[COMRAM] PTR const unsigned char 
  3471 ;;		 -> STR_11(7), STR_9(6), STR_8(17), STR_6(7), 
  3472 ;;		 -> vet(8), STR_4(7), versao(6), STR_3(9), 
  3473 ;;		 -> STR_2(17), converteAnoString@anoStr(4), 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3485 ;;      Params:         2       0       0       0       0       0       0       0       0
  3486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3488 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3489 ;;Total ram usage:        2 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    8
  3492 ;; This function calls:
  3493 ;;		_BusyXLCD
  3494 ;;		_WriteDataXLCD
  3495 ;; This function is called by:
  3496 ;;		_atualiza_Tela
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text14
  3501  001524                     __ptext14:
  3502                           	opt stack 0
  3503  001524                     _putrsXLCD:
  3504                           	opt stack 20
  3505                           
  3506                           ;incstack = 0
  3507  001524  D019               	goto	l3239
  3508  001526                     l3233:
  3509  001526  EC26  F00C         	call	_BusyXLCD	;wreg free
  3510  00152A  0900               	iorlw	0
  3511  00152C  A4D8               	btfss	status,2,c
  3512  00152E  D7FB               	goto	l3233
  3513  001530  C02D  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3514  001534  C02E  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3515  001538  6AF8               	clrf	tblptru,c
  3516  00153A  0E07               	movlw	(high __ramtop+-1)
  3517  00153C  64F7               	cpfsgt	tblptrh,c
  3518  00153E  D003               	bra	u2407
  3519  001540  0008               	tblrd		*
  3520  001542  50F5               	movf	tablat,w,c
  3521  001544  D005               	bra	u2400
  3522  001546                     u2407:
  3523  001546  CFF6 FFE1          	movff	tblptrl,fsr1l
  3524  00154A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3525  00154E  50E7               	movf	indf1,w,c
  3526  001550                     u2400:
  3527  001550  ECCB  F00B         	call	_WriteDataXLCD
  3528  001554  4A2D               	infsnz	putrsXLCD@buffer,f,c
  3529  001556  2A2E               	incf	putrsXLCD@buffer+1,f,c
  3530  001558                     l3239:
  3531  001558  C02D  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3532  00155C  C02E  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3533  001560  6AF8               	clrf	tblptru,c
  3534  001562  0E07               	movlw	(high __ramtop+-1)
  3535  001564  64F7               	cpfsgt	tblptrh,c
  3536  001566  D003               	bra	u2417
  3537  001568  0008               	tblrd		*
  3538  00156A  50F5               	movf	tablat,w,c
  3539  00156C  D005               	bra	u2410
  3540  00156E                     u2417:
  3541  00156E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3542  001572  CFF7 FFE2          	movff	tblptrh,fsr1h
  3543  001576  50E7               	movf	indf1,w,c
  3544  001578                     u2410:
  3545  001578  0900               	iorlw	0
  3546  00157A  B4D8               	btfsc	status,2,c
  3547  00157C  0012               	return	
  3548  00157E  D7D3               	goto	l3233
  3549  001580                     __end_of_putrsXLCD:
  3550                           	opt stack 0
  3551                           tblptru	equ	0xFF8
  3552                           tblptrh	equ	0xFF7
  3553                           tblptrl	equ	0xFF6
  3554                           tablat	equ	0xFF5
  3555                           intcon	equ	0xFF2
  3556                           postinc0	equ	0xFEE
  3557                           wreg	equ	0xFE8
  3558                           indf1	equ	0xFE7
  3559                           postdec1	equ	0xFE5
  3560                           fsr1h	equ	0xFE2
  3561                           fsr1l	equ	0xFE1
  3562                           indf2	equ	0xFDF
  3563                           postinc2	equ	0xFDE
  3564                           fsr2h	equ	0xFDA
  3565                           fsr2l	equ	0xFD9
  3566                           status	equ	0xFD8
  3567                           
  3568 ;; *************** function _WriteDataXLCD *****************
  3569 ;; Defined at:
  3570 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  data            1    wreg     unsigned char 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  data            1   23[COMRAM] unsigned char 
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2, status,0, cstack
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3584 ;;      Params:         0       0       0       0       0       0       0       0       0
  3585 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3587 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3588 ;;Total ram usage:        1 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; Hardware stack levels required when called:    7
  3591 ;; This function calls:
  3592 ;;		_DelayFor18TCY
  3593 ;; This function is called by:
  3594 ;;		_putrsXLCD
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text15
  3599  001796                     __ptext15:
  3600                           	opt stack 0
  3601  001796                     _WriteDataXLCD:
  3602                           	opt stack 20
  3603                           
  3604                           ;incstack = 0
  3605                           ;WriteDataXLCD@data stored from wreg
  3606  001796  6E18               	movwf	WriteDataXLCD@data,c
  3607  001798  0EF0               	movlw	240
  3608  00179A  1693               	andwf	3987,f,c	;volatile
  3609  00179C  0EF0               	movlw	240
  3610  00179E  1681               	andwf	3969,f,c	;volatile
  3611  0017A0  3818               	swapf	WriteDataXLCD@data,w,c
  3612  0017A2  0B0F               	andlw	15
  3613  0017A4  0B0F               	andlw	15
  3614  0017A6  1281               	iorwf	3969,f,c	;volatile
  3615  0017A8  8A8A               	bsf	3978,5,c	;volatile
  3616  0017AA  9C8A               	bcf	3978,6,c	;volatile
  3617  0017AC  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  3618  0017B0  888A               	bsf	3978,4,c	;volatile
  3619  0017B2  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  3620  0017B6  988A               	bcf	3978,4,c	;volatile
  3621  0017B8  0EF0               	movlw	240
  3622  0017BA  1681               	andwf	3969,f,c	;volatile
  3623  0017BC  5018               	movf	WriteDataXLCD@data,w,c
  3624  0017BE  0B0F               	andlw	15
  3625  0017C0  1281               	iorwf	3969,f,c	;volatile
  3626  0017C2  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  3627  0017C6  888A               	bsf	3978,4,c	;volatile
  3628  0017C8  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  3629  0017CC  988A               	bcf	3978,4,c	;volatile
  3630  0017CE  0E0F               	movlw	15
  3631  0017D0  1293               	iorwf	3987,f,c	;volatile
  3632  0017D2  0012               	return	
  3633  0017D4                     __end_of_WriteDataXLCD:
  3634                           	opt stack 0
  3635                           tblptru	equ	0xFF8
  3636                           tblptrh	equ	0xFF7
  3637                           tblptrl	equ	0xFF6
  3638                           tablat	equ	0xFF5
  3639                           intcon	equ	0xFF2
  3640                           postinc0	equ	0xFEE
  3641                           wreg	equ	0xFE8
  3642                           indf1	equ	0xFE7
  3643                           postdec1	equ	0xFE5
  3644                           fsr1h	equ	0xFE2
  3645                           fsr1l	equ	0xFE1
  3646                           indf2	equ	0xFDF
  3647                           postinc2	equ	0xFDE
  3648                           fsr2h	equ	0xFDA
  3649                           fsr2l	equ	0xFD9
  3650                           status	equ	0xFD8
  3651                           
  3652 ;; *************** function _converteAnoString *****************
  3653 ;; Defined at:
  3654 ;;		line 171 in file "main.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  ano             2   42[COMRAM] int 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  anoStr          4   16[BANK0 ] unsigned char [4]
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  2   42[COMRAM] PTR unsigned char 
  3661 ;; Registers used:
  3662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3668 ;;      Params:         2       0       0       0       0       0       0       0       0
  3669 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3671 ;;      Totals:         2       4       0       0       0       0       0       0       0
  3672 ;;Total ram usage:        6 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    7
  3675 ;; This function calls:
  3676 ;;		_sprintf
  3677 ;; This function is called by:
  3678 ;;		_atualiza_Tela
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text16
  3683  0018F2                     __ptext16:
  3684                           	opt stack 0
  3685  0018F2                     _converteAnoString:
  3686                           	opt stack 21
  3687                           
  3688                           ;main.c: 172: char anoStr[4];
  3689                           ;main.c: 173: sprintf(anoStr,"%i",ano);
  3690                           
  3691                           ;incstack = 0
  3692  0018F2  0E93               	movlw	low converteAnoString@anoStr
  3693  0018F4  0100               	movlb	0	; () banked
  3694  0018F6  6F83               	movwf	sprintf@sp& (0+255),b
  3695  0018F8  0E00               	movlw	high converteAnoString@anoStr
  3696  0018FA  0100               	movlb	0	; () banked
  3697  0018FC  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  3698  0018FE  0E39               	movlw	low (STR_5+12)
  3699  001900  0100               	movlb	0	; () banked
  3700  001902  6F85               	movwf	sprintf@f& (0+255),b
  3701  001904  0E08               	movlw	high (STR_5+12)
  3702  001906  0100               	movlb	0	; () banked
  3703  001908  6F86               	movwf	(sprintf@f+1)& (0+255),b
  3704  00190A  C02B  F087         	movff	converteAnoString@ano,?_sprintf+4
  3705  00190E  C02C  F088         	movff	converteAnoString@ano+1,?_sprintf+5
  3706  001912  EC75  F006         	call	_sprintf	;wreg free
  3707                           
  3708                           ;main.c: 174: return anoStr;
  3709  001916  0E93               	movlw	low converteAnoString@anoStr
  3710  001918  6E2B               	movwf	?_converteAnoString,c
  3711  00191A  0E00               	movlw	high converteAnoString@anoStr
  3712  00191C  6E2C               	movwf	?_converteAnoString+1,c
  3713  00191E  0012               	return	
  3714  001920                     __end_of_converteAnoString:
  3715                           	opt stack 0
  3716                           tblptru	equ	0xFF8
  3717                           tblptrh	equ	0xFF7
  3718                           tblptrl	equ	0xFF6
  3719                           tablat	equ	0xFF5
  3720                           intcon	equ	0xFF2
  3721                           postinc0	equ	0xFEE
  3722                           wreg	equ	0xFE8
  3723                           indf1	equ	0xFE7
  3724                           postdec1	equ	0xFE5
  3725                           fsr1h	equ	0xFE2
  3726                           fsr1l	equ	0xFE1
  3727                           indf2	equ	0xFDF
  3728                           postinc2	equ	0xFDE
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function _sprintf *****************
  3734 ;; Defined at:
  3735 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  3738 ;;		 -> vet(8), converteAnoString@anoStr(4), 
  3739 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  3740 ;;		 -> STR_10(10), STR_7(11), STR_5(15), STR_1(3), 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  tmpval          4    0        struct .
  3743 ;;  cp              3    0        PTR const unsigned char 
  3744 ;;  val             2   39[COMRAM] unsigned int 
  3745 ;;  ap              2   35[COMRAM] PTR void [1]
  3746 ;;		 -> ?_sprintf(2), 
  3747 ;;  len             2    0        unsigned int 
  3748 ;;  c               1   41[COMRAM] char 
  3749 ;;  prec            1   38[COMRAM] char 
  3750 ;;  flag            1   37[COMRAM] unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  2    0[BANK0 ] int 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3760 ;;      Params:         0      16       0       0       0       0       0       0       0
  3761 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3762 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3763 ;;      Totals:         8      16       0       0       0       0       0       0       0
  3764 ;;Total ram usage:       24 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    6
  3767 ;; This function calls:
  3768 ;;		___lwdiv
  3769 ;;		___lwmod
  3770 ;; This function is called by:
  3771 ;;		_converteAnoString
  3772 ;;		_atualiza_Tela
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text17
  3777  000CEA                     __ptext17:
  3778                           	opt stack 0
  3779  000CEA                     _sprintf:
  3780                           	opt stack 22
  3781                           
  3782                           ;doprnt.c: 494: va_list ap;
  3783                           ;doprnt.c: 499: signed char c;
  3784                           ;doprnt.c: 506: signed char prec;
  3785                           ;doprnt.c: 508: unsigned char flag;
  3786                           ;doprnt.c: 523: union {
  3787                           ;doprnt.c: 524: unsigned long vd;
  3788                           ;doprnt.c: 525: double integ;
  3789                           ;doprnt.c: 526: } tmpval;
  3790                           ;doprnt.c: 528: unsigned int val;
  3791                           ;doprnt.c: 529: unsigned len;
  3792                           ;doprnt.c: 530: const char * cp;
  3793                           ;doprnt.c: 533: *ap = __va_start();
  3794                           
  3795                           ;incstack = 0
  3796  000CEA  0E87               	movlw	low (?_sprintf+4)
  3797  000CEC  6E24               	movwf	sprintf@ap,c
  3798  000CEE  0E00               	movlw	high (?_sprintf+4)
  3799  000CF0  6E25               	movwf	sprintf@ap+1,c
  3800                           
  3801                           ;doprnt.c: 536: while(c = *f++) {
  3802  000CF2  D090               	goto	l3119
  3803  000CF4                     l3067:
  3804                           
  3805                           ;doprnt.c: 538: if(c != '%')
  3806  000CF4  0E25               	movlw	37
  3807  000CF6  182A               	xorwf	sprintf@c,w,c
  3808  000CF8  B4D8               	btfsc	status,2,c
  3809  000CFA  D00A               	goto	l3073
  3810                           
  3811                           ;doprnt.c: 540: {
  3812                           ;doprnt.c: 541: ((*sp++ = (c)));
  3813  000CFC  C083  FFD9         	movff	sprintf@sp,fsr2l
  3814  000D00  C084  FFDA         	movff	sprintf@sp+1,fsr2h
  3815  000D04  C02A  FFDF         	movff	sprintf@c,indf2
  3816  000D08  0100               	movlb	0	; () banked
  3817  000D0A  4B83               	infsnz	sprintf@sp& (0+255),f,b
  3818  000D0C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
  3819                           
  3820                           ;doprnt.c: 542: continue;
  3821  000D0E  D082               	goto	l3119
  3822  000D10                     l3073:
  3823                           
  3824                           ;doprnt.c: 543: }
  3825                           ;doprnt.c: 548: flag = 0;
  3826  000D10  0E00               	movlw	0
  3827  000D12  6E26               	movwf	sprintf@flag,c
  3828                           
  3829                           ;doprnt.c: 822: }
  3830                           
  3831                           ;doprnt.c: 813: continue;
  3832                           
  3833                           ;doprnt.c: 802: default:
  3834                           
  3835                           ;doprnt.c: 698: case 'i':
  3836                           ;doprnt.c: 699: break;
  3837                           
  3838                           ;doprnt.c: 697: case 'd':
  3839                           
  3840                           ;doprnt.c: 638: goto alldone;
  3841                           
  3842                           ;doprnt.c: 637: case 0:
  3843                           
  3844                           ;doprnt.c: 635: switch(c = *f++) {
  3845  000D14  C085  FFF6         	movff	sprintf@f,tblptrl
  3846  000D18  C086  FFF7         	movff	sprintf@f+1,tblptrh
  3847  000D1C  0100               	movlb	0	; () banked
  3848  000D1E  4B85               	infsnz	sprintf@f& (0+255),f,b
  3849  000D20  2B86               	incf	(sprintf@f+1)& (0+255),f,b
  3850  000D22                     	if	0	;tblptru may be non-zero
  3851  000D22                     	endif
  3852  000D22                     	if	0	;tblptru may be non-zero
  3853  000D22                     	endif
  3854  000D22  0008               	tblrd		*
  3855  000D24  CFF5 F02A          	movff	tablat,sprintf@c
  3856  000D28  502A               	movf	sprintf@c,w,c
  3857                           
  3858                           ; Switch size 1, requested type "space"
  3859                           ; Number of cases is 3, Range of values is 0 to 105
  3860                           ; switch strategies available:
  3861                           ; Name         Instructions Cycles
  3862                           ; simple_byte           10     6 (average)
  3863                           ;	Chosen strategy is simple_byte
  3864  000D2A  0A00               	xorlw	0	; case 0
  3865  000D2C  B4D8               	btfsc	status,2,c
  3866  000D2E  D07F               	goto	l3121
  3867  000D30  0A64               	xorlw	100	; case 100
  3868  000D32  B4D8               	btfsc	status,2,c
  3869  000D34  D003               	goto	l3079
  3870  000D36  0A0D               	xorlw	13	; case 105
  3871  000D38  A4D8               	btfss	status,2,c
  3872  000D3A  D06C               	goto	l3119
  3873  000D3C                     l3079:
  3874                           
  3875                           ;doprnt.c: 1253: {
  3876                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3877  000D3C  C024  FFD9         	movff	sprintf@ap,fsr2l
  3878  000D40  C025  FFDA         	movff	sprintf@ap+1,fsr2h
  3879  000D44  CFDE F028          	movff	postinc2,sprintf@val
  3880  000D48  CFDD F029          	movff	postdec2,sprintf@val+1
  3881  000D4C  0E02               	movlw	2
  3882  000D4E  2624               	addwf	sprintf@ap,f,c
  3883  000D50  0E00               	movlw	0
  3884  000D52  2225               	addwfc	sprintf@ap+1,f,c
  3885                           
  3886                           ;doprnt.c: 1261: if((int)val < 0) {
  3887  000D54  AE29               	btfss	sprintf@val+1,7,c
  3888  000D56  D006               	goto	l3089
  3889                           
  3890                           ;doprnt.c: 1262: flag |= 0x03;
  3891  000D58  0E03               	movlw	3
  3892  000D5A  1226               	iorwf	sprintf@flag,f,c
  3893                           
  3894                           ;doprnt.c: 1263: val = -val;
  3895  000D5C  6C28               	negf	sprintf@val,c
  3896  000D5E  1E29               	comf	sprintf@val+1,f,c
  3897  000D60  B0D8               	btfsc	status,0,c
  3898  000D62  2A29               	incf	sprintf@val+1,f,c
  3899  000D64                     l3089:
  3900                           
  3901                           ;doprnt.c: 1264: }
  3902                           ;doprnt.c: 1266: }
  3903                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3904  000D64  0E01               	movlw	1
  3905  000D66  6E2A               	movwf	sprintf@c,c
  3906  000D68                     l3091:
  3907  000D68  0E05               	movlw	5
  3908  000D6A  182A               	xorwf	sprintf@c,w,c
  3909  000D6C  B4D8               	btfsc	status,2,c
  3910  000D6E  D012               	goto	l3103
  3911                           
  3912                           ;doprnt.c: 1306: if(val < dpowers[c])
  3913  000D70  502A               	movf	sprintf@c,w,c
  3914  000D72  0D02               	mullw	2
  3915  000D74  0E01               	movlw	low _dpowers
  3916  000D76  24F3               	addwf	prodl,w,c
  3917  000D78  6EF6               	movwf	tblptrl,c
  3918  000D7A  0E08               	movlw	high _dpowers
  3919  000D7C  20F4               	addwfc	prodh,w,c
  3920  000D7E  6EF7               	movwf	tblptrh,c
  3921  000D80                     	if	0	;There are less than 3 active tblptr bytes
  3922  000D80                     	endif
  3923  000D80  0009               	tblrd		*+
  3924  000D82  50F5               	movf	tablat,w,c
  3925  000D84  5C28               	subwf	sprintf@val,w,c
  3926  000D86  0009               	tblrd		*+
  3927  000D88  50F5               	movf	tablat,w,c
  3928  000D8A  5829               	subwfb	sprintf@val+1,w,c
  3929  000D8C  A0D8               	btfss	status,0,c
  3930  000D8E  D002               	goto	l3103
  3931                           
  3932                           ;doprnt.c: 1307: break;
  3933  000D90  2A2A               	incf	sprintf@c,f,c
  3934  000D92  D7EA               	goto	l3091
  3935  000D94                     l3103:
  3936                           
  3937                           ;doprnt.c: 1422: {
  3938                           ;doprnt.c: 1438: if(flag & 0x03)
  3939  000D94  C026  F023         	movff	sprintf@flag,??_sprintf
  3940  000D98  0E03               	movlw	3
  3941  000D9A  1623               	andwf	??_sprintf,f,c
  3942  000D9C  B4D8               	btfsc	status,2,c
  3943  000D9E  D009               	goto	l3109
  3944                           
  3945                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3946  000DA0  C083  FFD9         	movff	sprintf@sp,fsr2l
  3947  000DA4  C084  FFDA         	movff	sprintf@sp+1,fsr2h
  3948  000DA8  0E2D               	movlw	45
  3949  000DAA  6EDF               	movwf	indf2,c
  3950  000DAC  0100               	movlb	0	; () banked
  3951  000DAE  4B83               	infsnz	sprintf@sp& (0+255),f,b
  3952  000DB0  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
  3953  000DB2                     l3109:
  3954                           
  3955                           ;doprnt.c: 1469: }
  3956                           ;doprnt.c: 1472: prec = c;
  3957  000DB2  C02A  F027         	movff	sprintf@c,sprintf@prec
  3958                           
  3959                           ;doprnt.c: 1474: while(prec--) {
  3960  000DB6  D02A               	goto	l3117
  3961  000DB8                     l3111:
  3962                           
  3963                           ;doprnt.c: 1478: {
  3964                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3965  000DB8  5027               	movf	sprintf@prec,w,c
  3966  000DBA  0D02               	mullw	2
  3967  000DBC  0E01               	movlw	low _dpowers
  3968  000DBE  24F3               	addwf	prodl,w,c
  3969  000DC0  6EF6               	movwf	tblptrl,c
  3970  000DC2  0E08               	movlw	high _dpowers
  3971  000DC4  20F4               	addwfc	prodh,w,c
  3972  000DC6  6EF7               	movwf	tblptrh,c
  3973  000DC8                     	if	0	;There are less than 3 active tblptr bytes
  3974  000DC8                     	endif
  3975  000DC8  0009               	tblrd		*+
  3976  000DCA  CFF5 F019          	movff	tablat,___lwdiv@divisor
  3977  000DCE  000A               	tblrd		*-
  3978  000DD0  CFF5 F01A          	movff	tablat,___lwdiv@divisor+1
  3979  000DD4  C028  F017         	movff	sprintf@val,___lwdiv@dividend
  3980  000DD8  C029  F018         	movff	sprintf@val+1,___lwdiv@dividend+1
  3981  000DDC  ECEC  F00A         	call	___lwdiv	;wreg free
  3982  000DE0  C017  F01E         	movff	?___lwdiv,___lwmod@dividend
  3983  000DE4  C018  F01F         	movff	?___lwdiv+1,___lwmod@dividend+1
  3984  000DE8  0E00               	movlw	0
  3985  000DEA  6E21               	movwf	___lwmod@divisor+1,c
  3986  000DEC  0E0A               	movlw	10
  3987  000DEE  6E20               	movwf	___lwmod@divisor,c
  3988  000DF0  EC8A  F00B         	call	___lwmod	;wreg free
  3989  000DF4  501E               	movf	?___lwmod,w,c
  3990  000DF6  0F30               	addlw	48
  3991  000DF8  6E2A               	movwf	sprintf@c,c
  3992                           
  3993                           ;doprnt.c: 1523: }
  3994                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3995  000DFA  C083  FFD9         	movff	sprintf@sp,fsr2l
  3996  000DFE  C084  FFDA         	movff	sprintf@sp+1,fsr2h
  3997  000E02  C02A  FFDF         	movff	sprintf@c,indf2
  3998  000E06  0100               	movlb	0	; () banked
  3999  000E08  4B83               	infsnz	sprintf@sp& (0+255),f,b
  4000  000E0A  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
  4001  000E0C                     l3117:
  4002  000E0C  0627               	decf	sprintf@prec,f,c
  4003  000E0E  2827               	incf	sprintf@prec,w,c
  4004  000E10  A4D8               	btfss	status,2,c
  4005  000E12  D7D2               	goto	l3111
  4006  000E14                     l3119:
  4007  000E14  C085  FFF6         	movff	sprintf@f,tblptrl
  4008  000E18  C086  FFF7         	movff	sprintf@f+1,tblptrh
  4009  000E1C  0100               	movlb	0	; () banked
  4010  000E1E  4B85               	infsnz	sprintf@f& (0+255),f,b
  4011  000E20  2B86               	incf	(sprintf@f+1)& (0+255),f,b
  4012  000E22                     	if	0	;tblptru may be non-zero
  4013  000E22                     	endif
  4014  000E22                     	if	0	;tblptru may be non-zero
  4015  000E22                     	endif
  4016  000E22  0008               	tblrd		*
  4017  000E24  CFF5 F02A          	movff	tablat,sprintf@c
  4018  000E28  502A               	movf	sprintf@c,w,c
  4019  000E2A  A4D8               	btfss	status,2,c
  4020  000E2C  D763               	goto	l3067
  4021  000E2E                     l3121:
  4022                           
  4023                           ;doprnt.c: 1538: *sp = 0;
  4024  000E2E  C083  FFD9         	movff	sprintf@sp,fsr2l
  4025  000E32  C084  FFDA         	movff	sprintf@sp+1,fsr2h
  4026  000E36  0E00               	movlw	0
  4027  000E38  6EDF               	movwf	indf2,c
  4028  000E3A  0012               	return	
  4029  000E3C                     __end_of_sprintf:
  4030                           	opt stack 0
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           intcon	equ	0xFF2
  4038                           postinc0	equ	0xFEE
  4039                           wreg	equ	0xFE8
  4040                           indf1	equ	0xFE7
  4041                           postdec1	equ	0xFE5
  4042                           fsr1h	equ	0xFE2
  4043                           fsr1l	equ	0xFE1
  4044                           indf2	equ	0xFDF
  4045                           postinc2	equ	0xFDE
  4046                           postdec2	equ	0xFDD
  4047                           fsr2h	equ	0xFDA
  4048                           fsr2l	equ	0xFD9
  4049                           status	equ	0xFD8
  4050                           
  4051 ;; *************** function ___lwmod *****************
  4052 ;; Defined at:
  4053 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  dividend        2   29[COMRAM] unsigned int 
  4056 ;;  divisor         2   31[COMRAM] unsigned int 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  counter         1   33[COMRAM] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  2   29[COMRAM] unsigned int 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4068 ;;      Params:         4       0       0       0       0       0       0       0       0
  4069 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4071 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4072 ;;Total ram usage:        5 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    5
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_sprintf
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text18
  4083  001714                     __ptext18:
  4084                           	opt stack 0
  4085  001714                     ___lwmod:
  4086                           	opt stack 22
  4087                           
  4088                           ;incstack = 0
  4089  001714  5020               	movf	___lwmod@divisor,w,c
  4090  001716  1021               	iorwf	___lwmod@divisor+1,w,c
  4091  001718  B4D8               	btfsc	status,2,c
  4092  00171A  D018               	goto	l856
  4093  00171C  0E01               	movlw	1
  4094  00171E  6E22               	movwf	___lwmod@counter,c
  4095  001720  D004               	goto	l3055
  4096  001722                     l3053:
  4097  001722  90D8               	bcf	status,0,c
  4098  001724  3620               	rlcf	___lwmod@divisor,f,c
  4099  001726  3621               	rlcf	___lwmod@divisor+1,f,c
  4100  001728  2A22               	incf	___lwmod@counter,f,c
  4101  00172A                     l3055:
  4102  00172A  AE21               	btfss	___lwmod@divisor+1,7,c
  4103  00172C  D7FA               	goto	l3053
  4104  00172E                     l3057:
  4105  00172E  5020               	movf	___lwmod@divisor,w,c
  4106  001730  5C1E               	subwf	___lwmod@dividend,w,c
  4107  001732  5021               	movf	___lwmod@divisor+1,w,c
  4108  001734  581F               	subwfb	___lwmod@dividend+1,w,c
  4109  001736  A0D8               	btfss	status,0,c
  4110  001738  D004               	goto	l3061
  4111  00173A  5020               	movf	___lwmod@divisor,w,c
  4112  00173C  5E1E               	subwf	___lwmod@dividend,f,c
  4113  00173E  5021               	movf	___lwmod@divisor+1,w,c
  4114  001740  5A1F               	subwfb	___lwmod@dividend+1,f,c
  4115  001742                     l3061:
  4116  001742  90D8               	bcf	status,0,c
  4117  001744  3221               	rrcf	___lwmod@divisor+1,f,c
  4118  001746  3220               	rrcf	___lwmod@divisor,f,c
  4119  001748  2E22               	decfsz	___lwmod@counter,f,c
  4120  00174A  D7F1               	goto	l3057
  4121  00174C                     l856:
  4122  00174C  C01E  F01E         	movff	___lwmod@dividend,?___lwmod
  4123  001750  C01F  F01F         	movff	___lwmod@dividend+1,?___lwmod+1
  4124  001754  0012               	return		;funcret
  4125  001756                     __end_of___lwmod:
  4126                           	opt stack 0
  4127                           tblptru	equ	0xFF8
  4128                           tblptrh	equ	0xFF7
  4129                           tblptrl	equ	0xFF6
  4130                           tablat	equ	0xFF5
  4131                           prodh	equ	0xFF4
  4132                           prodl	equ	0xFF3
  4133                           intcon	equ	0xFF2
  4134                           postinc0	equ	0xFEE
  4135                           wreg	equ	0xFE8
  4136                           indf1	equ	0xFE7
  4137                           postdec1	equ	0xFE5
  4138                           fsr1h	equ	0xFE2
  4139                           fsr1l	equ	0xFE1
  4140                           indf2	equ	0xFDF
  4141                           postinc2	equ	0xFDE
  4142                           postdec2	equ	0xFDD
  4143                           fsr2h	equ	0xFDA
  4144                           fsr2l	equ	0xFD9
  4145                           status	equ	0xFD8
  4146                           
  4147 ;; *************** function ___lwdiv *****************
  4148 ;; Defined at:
  4149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  dividend        2   22[COMRAM] unsigned int 
  4152 ;;  divisor         2   24[COMRAM] unsigned int 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  quotient        2   27[COMRAM] unsigned int 
  4155 ;;  counter         1   26[COMRAM] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  2   22[COMRAM] unsigned int 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4165 ;;      Params:         4       0       0       0       0       0       0       0       0
  4166 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4168 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4169 ;;Total ram usage:        7 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    5
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_sprintf
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text19
  4180  0015D8                     __ptext19:
  4181                           	opt stack 0
  4182  0015D8                     ___lwdiv:
  4183                           	opt stack 22
  4184                           
  4185                           ;incstack = 0
  4186  0015D8  0E00               	movlw	0
  4187  0015DA  6E1D               	movwf	___lwdiv@quotient+1,c
  4188  0015DC  0E00               	movlw	0
  4189  0015DE  6E1C               	movwf	___lwdiv@quotient,c
  4190  0015E0  5019               	movf	___lwdiv@divisor,w,c
  4191  0015E2  101A               	iorwf	___lwdiv@divisor+1,w,c
  4192  0015E4  B4D8               	btfsc	status,2,c
  4193  0015E6  D01C               	goto	l846
  4194  0015E8  0E01               	movlw	1
  4195  0015EA  6E1B               	movwf	___lwdiv@counter,c
  4196  0015EC  D004               	goto	l3035
  4197  0015EE                     l3033:
  4198  0015EE  90D8               	bcf	status,0,c
  4199  0015F0  3619               	rlcf	___lwdiv@divisor,f,c
  4200  0015F2  361A               	rlcf	___lwdiv@divisor+1,f,c
  4201  0015F4  2A1B               	incf	___lwdiv@counter,f,c
  4202  0015F6                     l3035:
  4203  0015F6  AE1A               	btfss	___lwdiv@divisor+1,7,c
  4204  0015F8  D7FA               	goto	l3033
  4205  0015FA                     l3037:
  4206  0015FA  90D8               	bcf	status,0,c
  4207  0015FC  361C               	rlcf	___lwdiv@quotient,f,c
  4208  0015FE  361D               	rlcf	___lwdiv@quotient+1,f,c
  4209  001600  5019               	movf	___lwdiv@divisor,w,c
  4210  001602  5C17               	subwf	___lwdiv@dividend,w,c
  4211  001604  501A               	movf	___lwdiv@divisor+1,w,c
  4212  001606  5818               	subwfb	___lwdiv@dividend+1,w,c
  4213  001608  A0D8               	btfss	status,0,c
  4214  00160A  D005               	goto	l3045
  4215  00160C  5019               	movf	___lwdiv@divisor,w,c
  4216  00160E  5E17               	subwf	___lwdiv@dividend,f,c
  4217  001610  501A               	movf	___lwdiv@divisor+1,w,c
  4218  001612  5A18               	subwfb	___lwdiv@dividend+1,f,c
  4219  001614  801C               	bsf	___lwdiv@quotient,0,c
  4220  001616                     l3045:
  4221  001616  90D8               	bcf	status,0,c
  4222  001618  321A               	rrcf	___lwdiv@divisor+1,f,c
  4223  00161A  3219               	rrcf	___lwdiv@divisor,f,c
  4224  00161C  2E1B               	decfsz	___lwdiv@counter,f,c
  4225  00161E  D7ED               	goto	l3037
  4226  001620                     l846:
  4227  001620  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
  4228  001624  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4229  001628  0012               	return		;funcret
  4230  00162A                     __end_of___lwdiv:
  4231                           	opt stack 0
  4232                           tblptru	equ	0xFF8
  4233                           tblptrh	equ	0xFF7
  4234                           tblptrl	equ	0xFF6
  4235                           tablat	equ	0xFF5
  4236                           prodh	equ	0xFF4
  4237                           prodl	equ	0xFF3
  4238                           intcon	equ	0xFF2
  4239                           postinc0	equ	0xFEE
  4240                           wreg	equ	0xFE8
  4241                           indf1	equ	0xFE7
  4242                           postdec1	equ	0xFE5
  4243                           fsr1h	equ	0xFE2
  4244                           fsr1l	equ	0xFE1
  4245                           indf2	equ	0xFDF
  4246                           postinc2	equ	0xFDE
  4247                           postdec2	equ	0xFDD
  4248                           fsr2h	equ	0xFDA
  4249                           fsr2l	equ	0xFD9
  4250                           status	equ	0xFD8
  4251                           
  4252 ;; *************** function _acionaDespertador *****************
  4253 ;; Defined at:
  4254 ;;		line 248 in file "main.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4271 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4272 ;;Total ram usage:        0 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    5
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_atualiza_Tela
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text20
  4283  0018BE                     __ptext20:
  4284                           	opt stack 0
  4285  0018BE                     _acionaDespertador:
  4286                           	opt stack 23
  4287                           
  4288                           ;main.c: 249: if(virouDia){
  4289                           
  4290                           ;incstack = 0
  4291  0018BE  5048               	movf	_virouDia,w,c
  4292  0018C0  B4D8               	btfsc	status,2,c
  4293  0018C2  0012               	return	
  4294                           
  4295                           ;main.c: 250: if((data_horario.horario[0] == horarioDespertador[0]) && (data_horario.hor
      +                          ario[1] == horarioDespertador[1]) && (data_horario.horario[3] == horarioDespertador[3]) 
      +                          && (data_horario.horario[4] == horarioDespertador[4])){
  4296  0018C4  502F               	movf	_horarioDespertador,w,c
  4297  0018C6  0100               	movlb	0	; () banked
  4298  0018C8  1960               	xorwf	_data_horario& (0+255),w,b
  4299  0018CA  A4D8               	btfss	status,2,c
  4300  0018CC  0012               	return	
  4301                           
  4302                           ; BSR set to: 0
  4303  0018CE  5030               	movf	_horarioDespertador+1,w,c
  4304  0018D0  0100               	movlb	0	; () banked
  4305  0018D2  1961               	xorwf	(_data_horario+1)& (0+255),w,b
  4306  0018D4  A4D8               	btfss	status,2,c
  4307  0018D6  0012               	return	
  4308                           
  4309                           ; BSR set to: 0
  4310  0018D8  5032               	movf	_horarioDespertador+3,w,c
  4311  0018DA  0100               	movlb	0	; () banked
  4312  0018DC  1963               	xorwf	(_data_horario+3)& (0+255),w,b
  4313  0018DE  A4D8               	btfss	status,2,c
  4314  0018E0  0012               	return	
  4315                           
  4316                           ; BSR set to: 0
  4317  0018E2  5033               	movf	_horarioDespertador+4,w,c
  4318  0018E4  0100               	movlb	0	; () banked
  4319  0018E6  1964               	xorwf	(_data_horario+4)& (0+255),w,b
  4320  0018E8  A4D8               	btfss	status,2,c
  4321  0018EA  0012               	return	
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;main.c: 251: flagDespertadorLigado = 1;
  4325  0018EC  0E01               	movlw	1
  4326  0018EE  6E39               	movwf	_flagDespertadorLigado,c
  4327                           
  4328                           ; BSR set to: 0
  4329  0018F0  0012               	return	
  4330  0018F2                     __end_of_acionaDespertador:
  4331                           	opt stack 0
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           prodh	equ	0xFF4
  4337                           prodl	equ	0xFF3
  4338                           intcon	equ	0xFF2
  4339                           postinc0	equ	0xFEE
  4340                           wreg	equ	0xFE8
  4341                           indf1	equ	0xFE7
  4342                           postdec1	equ	0xFE5
  4343                           fsr1h	equ	0xFE2
  4344                           fsr1l	equ	0xFE1
  4345                           indf2	equ	0xFDF
  4346                           postinc2	equ	0xFDE
  4347                           postdec2	equ	0xFDD
  4348                           fsr2h	equ	0xFDA
  4349                           fsr2l	equ	0xFD9
  4350                           status	equ	0xFD8
  4351                           
  4352 ;; *************** function _atoi *****************
  4353 ;; Defined at:
  4354 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atoi.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  s               2   28[COMRAM] PTR const unsigned char 
  4357 ;;		 -> pegaHoraData(3), 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  a               2   33[COMRAM] int 
  4360 ;;  sign            1   32[COMRAM] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  2   28[COMRAM] int 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4370 ;;      Params:         2       0       0       0       0       0       0       0       0
  4371 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4372 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4373 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4374 ;;Total ram usage:        7 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    6
  4377 ;; This function calls:
  4378 ;;		___wmul
  4379 ;;		_isdigit
  4380 ;; This function is called by:
  4381 ;;		_trataComando
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text21
  4386  00115A                     __ptext21:
  4387                           	opt stack 0
  4388  00115A                     _atoi:
  4389                           	opt stack 22
  4390                           
  4391                           ;incstack = 0
  4392  00115A  D002               	goto	l3403
  4393  00115C                     l3401:
  4394  00115C  4A1D               	infsnz	atoi@s,f,c
  4395  00115E  2A1E               	incf	atoi@s+1,f,c
  4396  001160                     l3403:
  4397  001160  C01D  FFD9         	movff	atoi@s,fsr2l
  4398  001164  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4399  001168  0E20               	movlw	32
  4400  00116A  18DE               	xorwf	postinc2,w,c
  4401  00116C  B4D8               	btfsc	status,2,c
  4402  00116E  D7F6               	goto	l3401
  4403  001170  C01D  FFD9         	movff	atoi@s,fsr2l
  4404  001174  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4405  001178  0E09               	movlw	9
  4406  00117A  18DE               	xorwf	postinc2,w,c
  4407  00117C  B4D8               	btfsc	status,2,c
  4408  00117E  D7EE               	goto	l3401
  4409  001180  0E00               	movlw	0
  4410  001182  6E23               	movwf	atoi@a+1,c
  4411  001184  0E00               	movlw	0
  4412  001186  6E22               	movwf	atoi@a,c
  4413  001188  0E00               	movlw	0
  4414  00118A  6E21               	movwf	atoi@sign,c
  4415  00118C  C01D  FFD9         	movff	atoi@s,fsr2l
  4416  001190  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4417  001194  0E2D               	movlw	45
  4418  001196  18DE               	xorwf	postinc2,w,c
  4419  001198  A4D8               	btfss	status,2,c
  4420  00119A  D002               	goto	l3413
  4421  00119C  2A21               	incf	atoi@sign,f,c
  4422  00119E  D024               	goto	l3419
  4423  0011A0                     l3413:
  4424  0011A0  C01D  FFD9         	movff	atoi@s,fsr2l
  4425  0011A4  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4426  0011A8  0E2B               	movlw	43
  4427  0011AA  18DE               	xorwf	postinc2,w,c
  4428  0011AC  A4D8               	btfss	status,2,c
  4429  0011AE  D01E               	goto	l3421
  4430  0011B0  D01B               	goto	l3419
  4431  0011B2                     l3417:
  4432  0011B2  C022  F017         	movff	atoi@a,___wmul@multiplier
  4433  0011B6  C023  F018         	movff	atoi@a+1,___wmul@multiplier+1
  4434  0011BA  0E00               	movlw	0
  4435  0011BC  6E1A               	movwf	___wmul@multiplicand+1,c
  4436  0011BE  0E0A               	movlw	10
  4437  0011C0  6E19               	movwf	___wmul@multiplicand,c
  4438  0011C2  ECA6  F00C         	call	___wmul	;wreg free
  4439  0011C6  C01D  FFD9         	movff	atoi@s,fsr2l
  4440  0011CA  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4441  0011CE  50DF               	movf	indf2,w,c
  4442  0011D0  6E1F               	movwf	??_atoi& (0+255),c
  4443  0011D2  6A20               	clrf	(??_atoi+1)& (0+255),c
  4444  0011D4  5017               	movf	?___wmul,w,c
  4445  0011D6  261F               	addwf	??_atoi,f,c
  4446  0011D8  5018               	movf	?___wmul+1,w,c
  4447  0011DA  2220               	addwfc	??_atoi+1,f,c
  4448  0011DC  0ED0               	movlw	208
  4449  0011DE  241F               	addwf	??_atoi,w,c
  4450  0011E0  6E22               	movwf	atoi@a,c
  4451  0011E2  0EFF               	movlw	255
  4452  0011E4  2020               	addwfc	??_atoi+1,w,c
  4453  0011E6  6E23               	movwf	atoi@a+1,c
  4454  0011E8                     l3419:
  4455  0011E8  4A1D               	infsnz	atoi@s,f,c
  4456  0011EA  2A1E               	incf	atoi@s+1,f,c
  4457  0011EC                     l3421:
  4458  0011EC  C01D  FFD9         	movff	atoi@s,fsr2l
  4459  0011F0  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4460  0011F4  50DF               	movf	indf2,w,c
  4461  0011F6  ECB9  F00C         	call	_isdigit
  4462  0011FA  B0D8               	btfsc	status,0,c
  4463  0011FC  D7DA               	goto	l3417
  4464  0011FE  5021               	movf	atoi@sign,w,c
  4465  001200  B4D8               	btfsc	status,2,c
  4466  001202  D00D               	goto	l575
  4467  001204  C022  F01F         	movff	atoi@a,??_atoi
  4468  001208  C023  F020         	movff	atoi@a+1,??_atoi+1
  4469  00120C  1E1F               	comf	??_atoi,f,c
  4470  00120E  1E20               	comf	??_atoi+1,f,c
  4471  001210  4A1F               	infsnz	??_atoi,f,c
  4472  001212  2A20               	incf	??_atoi+1,f,c
  4473  001214  C01F  F01D         	movff	??_atoi,?_atoi
  4474  001218  C020  F01E         	movff	??_atoi+1,?_atoi+1
  4475  00121C  0012               	return	
  4476  00121E                     l575:
  4477  00121E  C022  F01D         	movff	atoi@a,?_atoi
  4478  001222  C023  F01E         	movff	atoi@a+1,?_atoi+1
  4479  001226  0012               	return		;funcret
  4480  001228                     __end_of_atoi:
  4481                           	opt stack 0
  4482                           tblptru	equ	0xFF8
  4483                           tblptrh	equ	0xFF7
  4484                           tblptrl	equ	0xFF6
  4485                           tablat	equ	0xFF5
  4486                           prodh	equ	0xFF4
  4487                           prodl	equ	0xFF3
  4488                           intcon	equ	0xFF2
  4489                           postinc0	equ	0xFEE
  4490                           wreg	equ	0xFE8
  4491                           indf1	equ	0xFE7
  4492                           postdec1	equ	0xFE5
  4493                           fsr1h	equ	0xFE2
  4494                           fsr1l	equ	0xFE1
  4495                           indf2	equ	0xFDF
  4496                           postinc2	equ	0xFDE
  4497                           postdec2	equ	0xFDD
  4498                           fsr2h	equ	0xFDA
  4499                           fsr2l	equ	0xFD9
  4500                           status	equ	0xFD8
  4501                           
  4502 ;; *************** function _isdigit *****************
  4503 ;; Defined at:
  4504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  c               1    wreg     unsigned char 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  c               1   24[COMRAM] unsigned char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;		None               void
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4518 ;;      Params:         0       0       0       0       0       0       0       0       0
  4519 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4520 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4521 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4522 ;;Total ram usage:        3 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    5
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_atoi
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text22
  4533  001972                     __ptext22:
  4534                           	opt stack 0
  4535  001972                     _isdigit:
  4536                           	opt stack 22
  4537                           
  4538                           ;incstack = 0
  4539                           ;isdigit@c stored from wreg
  4540  001972  6E19               	movwf	isdigit@c,c
  4541  001974  0E00               	movlw	0
  4542  001976  6E18               	movwf	_isdigit$1102,c
  4543  001978  0E3A               	movlw	58
  4544  00197A  6019               	cpfslt	isdigit@c,c
  4545  00197C  D005               	goto	l3293
  4546  00197E  0E2F               	movlw	47
  4547  001980  6419               	cpfsgt	isdigit@c,c
  4548  001982  D002               	goto	l3293
  4549  001984  0E01               	movlw	1
  4550  001986  6E18               	movwf	_isdigit$1102,c
  4551  001988                     l3293:
  4552  001988  C018  F017         	movff	_isdigit$1102,??_isdigit
  4553  00198C  3017               	rrcf	??_isdigit,w,c
  4554  00198E  0012               	return	
  4555  001990                     __end_of_isdigit:
  4556                           	opt stack 0
  4557                           tblptru	equ	0xFF8
  4558                           tblptrh	equ	0xFF7
  4559                           tblptrl	equ	0xFF6
  4560                           tablat	equ	0xFF5
  4561                           prodh	equ	0xFF4
  4562                           prodl	equ	0xFF3
  4563                           intcon	equ	0xFF2
  4564                           postinc0	equ	0xFEE
  4565                           wreg	equ	0xFE8
  4566                           indf1	equ	0xFE7
  4567                           postdec1	equ	0xFE5
  4568                           fsr1h	equ	0xFE2
  4569                           fsr1l	equ	0xFE1
  4570                           indf2	equ	0xFDF
  4571                           postinc2	equ	0xFDE
  4572                           postdec2	equ	0xFDD
  4573                           fsr2h	equ	0xFDA
  4574                           fsr2l	equ	0xFD9
  4575                           status	equ	0xFD8
  4576                           
  4577 ;; *************** function ___wmul *****************
  4578 ;; Defined at:
  4579 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  multiplier      2   22[COMRAM] unsigned int 
  4582 ;;  multiplicand    2   24[COMRAM] unsigned int 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  product         2   26[COMRAM] unsigned int 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  2   22[COMRAM] unsigned int 
  4587 ;; Registers used:
  4588 ;;		wreg, status,2, status,0, prodl, prodh
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4594 ;;      Params:         4       0       0       0       0       0       0       0       0
  4595 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4597 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4598 ;;Total ram usage:        6 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    5
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_atoi
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text23
  4609  00194C                     __ptext23:
  4610                           	opt stack 0
  4611  00194C                     ___wmul:
  4612                           	opt stack 22
  4613                           
  4614                           ;incstack = 0
  4615  00194C  5017               	movf	___wmul@multiplier,w,c
  4616  00194E  0219               	mulwf	___wmul@multiplicand,c
  4617  001950  CFF3 F01B          	movff	prodl,___wmul@product
  4618  001954  CFF4 F01C          	movff	prodh,___wmul@product+1
  4619  001958  5017               	movf	___wmul@multiplier,w,c
  4620  00195A  021A               	mulwf	___wmul@multiplicand+1,c
  4621  00195C  50F3               	movf	prodl,w,c
  4622  00195E  261C               	addwf	___wmul@product+1,f,c
  4623  001960  5018               	movf	___wmul@multiplier+1,w,c
  4624  001962  0219               	mulwf	___wmul@multiplicand,c
  4625  001964  50F3               	movf	prodl,w,c
  4626  001966  261C               	addwf	___wmul@product+1,f,c
  4627  001968  C01B  F017         	movff	___wmul@product,?___wmul
  4628  00196C  C01C  F018         	movff	___wmul@product+1,?___wmul+1
  4629  001970  0012               	return	
  4630  001972                     __end_of___wmul:
  4631                           	opt stack 0
  4632                           tblptru	equ	0xFF8
  4633                           tblptrh	equ	0xFF7
  4634                           tblptrl	equ	0xFF6
  4635                           tablat	equ	0xFF5
  4636                           prodh	equ	0xFF4
  4637                           prodl	equ	0xFF3
  4638                           intcon	equ	0xFF2
  4639                           postinc0	equ	0xFEE
  4640                           wreg	equ	0xFE8
  4641                           indf1	equ	0xFE7
  4642                           postdec1	equ	0xFE5
  4643                           fsr1h	equ	0xFE2
  4644                           fsr1l	equ	0xFE1
  4645                           indf2	equ	0xFDF
  4646                           postinc2	equ	0xFDE
  4647                           postdec2	equ	0xFDD
  4648                           fsr2h	equ	0xFDA
  4649                           fsr2l	equ	0xFD9
  4650                           status	equ	0xFD8
  4651                           
  4652 ;; *************** function ___awmod *****************
  4653 ;; Defined at:
  4654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  dividend        2   22[COMRAM] int 
  4657 ;;  divisor         2   24[COMRAM] int 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  sign            1   27[COMRAM] unsigned char 
  4660 ;;  counter         1   26[COMRAM] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  2   22[COMRAM] int 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4670 ;;      Params:         4       0       0       0       0       0       0       0       0
  4671 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4673 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4674 ;;Total ram usage:        6 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    5
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_verificaAnoBissexto
  4681 ;;		_trataComando
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text24
  4686  0013EE                     __ptext24:
  4687                           	opt stack 0
  4688  0013EE                     ___awmod:
  4689                           	opt stack 23
  4690                           
  4691                           ;incstack = 0
  4692  0013EE  0E00               	movlw	0
  4693  0013F0  6E1C               	movwf	___awmod@sign,c
  4694  0013F2  AE18               	btfss	___awmod@dividend+1,7,c
  4695  0013F4  D006               	goto	l3499
  4696  0013F6  6C17               	negf	___awmod@dividend,c
  4697  0013F8  1E18               	comf	___awmod@dividend+1,f,c
  4698  0013FA  B0D8               	btfsc	status,0,c
  4699  0013FC  2A18               	incf	___awmod@dividend+1,f,c
  4700  0013FE  0E01               	movlw	1
  4701  001400  6E1C               	movwf	___awmod@sign,c
  4702  001402                     l3499:
  4703  001402  AE1A               	btfss	___awmod@divisor+1,7,c
  4704  001404  D004               	goto	l3503
  4705  001406  6C19               	negf	___awmod@divisor,c
  4706  001408  1E1A               	comf	___awmod@divisor+1,f,c
  4707  00140A  B0D8               	btfsc	status,0,c
  4708  00140C  2A1A               	incf	___awmod@divisor+1,f,c
  4709  00140E                     l3503:
  4710  00140E  5019               	movf	___awmod@divisor,w,c
  4711  001410  101A               	iorwf	___awmod@divisor+1,w,c
  4712  001412  B4D8               	btfsc	status,2,c
  4713  001414  D018               	goto	l3519
  4714  001416  0E01               	movlw	1
  4715  001418  6E1B               	movwf	___awmod@counter,c
  4716  00141A  D004               	goto	l3509
  4717  00141C                     l3507:
  4718  00141C  90D8               	bcf	status,0,c
  4719  00141E  3619               	rlcf	___awmod@divisor,f,c
  4720  001420  361A               	rlcf	___awmod@divisor+1,f,c
  4721  001422  2A1B               	incf	___awmod@counter,f,c
  4722  001424                     l3509:
  4723  001424  AE1A               	btfss	___awmod@divisor+1,7,c
  4724  001426  D7FA               	goto	l3507
  4725  001428                     l3511:
  4726  001428  5019               	movf	___awmod@divisor,w,c
  4727  00142A  5C17               	subwf	___awmod@dividend,w,c
  4728  00142C  501A               	movf	___awmod@divisor+1,w,c
  4729  00142E  5818               	subwfb	___awmod@dividend+1,w,c
  4730  001430  A0D8               	btfss	status,0,c
  4731  001432  D004               	goto	l3515
  4732  001434  5019               	movf	___awmod@divisor,w,c
  4733  001436  5E17               	subwf	___awmod@dividend,f,c
  4734  001438  501A               	movf	___awmod@divisor+1,w,c
  4735  00143A  5A18               	subwfb	___awmod@dividend+1,f,c
  4736  00143C                     l3515:
  4737  00143C  90D8               	bcf	status,0,c
  4738  00143E  321A               	rrcf	___awmod@divisor+1,f,c
  4739  001440  3219               	rrcf	___awmod@divisor,f,c
  4740  001442  2E1B               	decfsz	___awmod@counter,f,c
  4741  001444  D7F1               	goto	l3511
  4742  001446                     l3519:
  4743  001446  501C               	movf	___awmod@sign,w,c
  4744  001448  B4D8               	btfsc	status,2,c
  4745  00144A  D004               	goto	l3523
  4746  00144C  6C17               	negf	___awmod@dividend,c
  4747  00144E  1E18               	comf	___awmod@dividend+1,f,c
  4748  001450  B0D8               	btfsc	status,0,c
  4749  001452  2A18               	incf	___awmod@dividend+1,f,c
  4750  001454                     l3523:
  4751  001454  C017  F017         	movff	___awmod@dividend,?___awmod
  4752  001458  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
  4753  00145C  0012               	return	
  4754  00145E                     __end_of___awmod:
  4755                           	opt stack 0
  4756                           tblptru	equ	0xFF8
  4757                           tblptrh	equ	0xFF7
  4758                           tblptrl	equ	0xFF6
  4759                           tablat	equ	0xFF5
  4760                           prodh	equ	0xFF4
  4761                           prodl	equ	0xFF3
  4762                           intcon	equ	0xFF2
  4763                           postinc0	equ	0xFEE
  4764                           wreg	equ	0xFE8
  4765                           indf1	equ	0xFE7
  4766                           postdec1	equ	0xFE5
  4767                           fsr1h	equ	0xFE2
  4768                           fsr1l	equ	0xFE1
  4769                           indf2	equ	0xFDF
  4770                           postinc2	equ	0xFDE
  4771                           postdec2	equ	0xFDD
  4772                           fsr2h	equ	0xFDA
  4773                           fsr2l	equ	0xFD9
  4774                           status	equ	0xFD8
  4775                           
  4776 ;; *************** function ___awdiv *****************
  4777 ;; Defined at:
  4778 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  dividend        2   22[COMRAM] int 
  4781 ;;  divisor         2   24[COMRAM] int 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  quotient        2   28[COMRAM] int 
  4784 ;;  sign            1   27[COMRAM] unsigned char 
  4785 ;;  counter         1   26[COMRAM] unsigned char 
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  2   22[COMRAM] int 
  4788 ;; Registers used:
  4789 ;;		wreg, status,2, status,0
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4795 ;;      Params:         4       0       0       0       0       0       0       0       0
  4796 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4798 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4799 ;;Total ram usage:        8 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    5
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_trataComando
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text25
  4810  00136A                     __ptext25:
  4811                           	opt stack 0
  4812  00136A                     ___awdiv:
  4813                           	opt stack 23
  4814                           
  4815                           ;incstack = 0
  4816  00136A  0E00               	movlw	0
  4817  00136C  6E1C               	movwf	___awdiv@sign,c
  4818  00136E  AE1A               	btfss	___awdiv@divisor+1,7,c
  4819  001370  D006               	goto	l3455
  4820  001372  6C19               	negf	___awdiv@divisor,c
  4821  001374  1E1A               	comf	___awdiv@divisor+1,f,c
  4822  001376  B0D8               	btfsc	status,0,c
  4823  001378  2A1A               	incf	___awdiv@divisor+1,f,c
  4824  00137A  0E01               	movlw	1
  4825  00137C  6E1C               	movwf	___awdiv@sign,c
  4826  00137E                     l3455:
  4827  00137E  AE18               	btfss	___awdiv@dividend+1,7,c
  4828  001380  D006               	goto	l3461
  4829  001382  6C17               	negf	___awdiv@dividend,c
  4830  001384  1E18               	comf	___awdiv@dividend+1,f,c
  4831  001386  B0D8               	btfsc	status,0,c
  4832  001388  2A18               	incf	___awdiv@dividend+1,f,c
  4833  00138A  0E01               	movlw	1
  4834  00138C  1A1C               	xorwf	___awdiv@sign,f,c
  4835  00138E                     l3461:
  4836  00138E  0E00               	movlw	0
  4837  001390  6E1E               	movwf	___awdiv@quotient+1,c
  4838  001392  0E00               	movlw	0
  4839  001394  6E1D               	movwf	___awdiv@quotient,c
  4840  001396  5019               	movf	___awdiv@divisor,w,c
  4841  001398  101A               	iorwf	___awdiv@divisor+1,w,c
  4842  00139A  B4D8               	btfsc	status,2,c
  4843  00139C  D01C               	goto	l3483
  4844  00139E  0E01               	movlw	1
  4845  0013A0  6E1B               	movwf	___awdiv@counter,c
  4846  0013A2  D004               	goto	l3469
  4847  0013A4                     l3467:
  4848  0013A4  90D8               	bcf	status,0,c
  4849  0013A6  3619               	rlcf	___awdiv@divisor,f,c
  4850  0013A8  361A               	rlcf	___awdiv@divisor+1,f,c
  4851  0013AA  2A1B               	incf	___awdiv@counter,f,c
  4852  0013AC                     l3469:
  4853  0013AC  AE1A               	btfss	___awdiv@divisor+1,7,c
  4854  0013AE  D7FA               	goto	l3467
  4855  0013B0                     l3471:
  4856  0013B0  90D8               	bcf	status,0,c
  4857  0013B2  361D               	rlcf	___awdiv@quotient,f,c
  4858  0013B4  361E               	rlcf	___awdiv@quotient+1,f,c
  4859  0013B6  5019               	movf	___awdiv@divisor,w,c
  4860  0013B8  5C17               	subwf	___awdiv@dividend,w,c
  4861  0013BA  501A               	movf	___awdiv@divisor+1,w,c
  4862  0013BC  5818               	subwfb	___awdiv@dividend+1,w,c
  4863  0013BE  A0D8               	btfss	status,0,c
  4864  0013C0  D005               	goto	l3479
  4865  0013C2  5019               	movf	___awdiv@divisor,w,c
  4866  0013C4  5E17               	subwf	___awdiv@dividend,f,c
  4867  0013C6  501A               	movf	___awdiv@divisor+1,w,c
  4868  0013C8  5A18               	subwfb	___awdiv@dividend+1,f,c
  4869  0013CA  801D               	bsf	___awdiv@quotient,0,c
  4870  0013CC                     l3479:
  4871  0013CC  90D8               	bcf	status,0,c
  4872  0013CE  321A               	rrcf	___awdiv@divisor+1,f,c
  4873  0013D0  3219               	rrcf	___awdiv@divisor,f,c
  4874  0013D2  2E1B               	decfsz	___awdiv@counter,f,c
  4875  0013D4  D7ED               	goto	l3471
  4876  0013D6                     l3483:
  4877  0013D6  501C               	movf	___awdiv@sign,w,c
  4878  0013D8  B4D8               	btfsc	status,2,c
  4879  0013DA  D004               	goto	l3487
  4880  0013DC  6C1D               	negf	___awdiv@quotient,c
  4881  0013DE  1E1E               	comf	___awdiv@quotient+1,f,c
  4882  0013E0  B0D8               	btfsc	status,0,c
  4883  0013E2  2A1E               	incf	___awdiv@quotient+1,f,c
  4884  0013E4                     l3487:
  4885  0013E4  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  4886  0013E8  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  4887  0013EC  0012               	return	
  4888  0013EE                     __end_of___awdiv:
  4889                           	opt stack 0
  4890                           tblptru	equ	0xFF8
  4891                           tblptrh	equ	0xFF7
  4892                           tblptrl	equ	0xFF6
  4893                           tablat	equ	0xFF5
  4894                           prodh	equ	0xFF4
  4895                           prodl	equ	0xFF3
  4896                           intcon	equ	0xFF2
  4897                           postinc0	equ	0xFEE
  4898                           wreg	equ	0xFE8
  4899                           indf1	equ	0xFE7
  4900                           postdec1	equ	0xFE5
  4901                           fsr1h	equ	0xFE2
  4902                           fsr1l	equ	0xFE1
  4903                           indf2	equ	0xFDF
  4904                           postinc2	equ	0xFDE
  4905                           postdec2	equ	0xFDD
  4906                           fsr2h	equ	0xFDA
  4907                           fsr2l	equ	0xFD9
  4908                           status	equ	0xFD8
  4909                           
  4910 ;; *************** function _enviaByte *****************
  4911 ;; Defined at:
  4912 ;;		line 395 in file "main.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  BYTE            1    wreg     unsigned char 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  BYTE            1   22[COMRAM] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4926 ;;      Params:         0       0       0       0       0       0       0       0       0
  4927 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4929 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4930 ;;Total ram usage:        1 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    5
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_maquinaEstado
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text26
  4941  001990                     __ptext26:
  4942                           	opt stack 0
  4943  001990                     _enviaByte:
  4944                           	opt stack 24
  4945                           
  4946                           ;incstack = 0
  4947                           ;enviaByte@BYTE stored from wreg
  4948  001990  6E17               	movwf	enviaByte@BYTE,c
  4949  001992                     l216:
  4950  001992  A89E               	btfss	3998,4,c	;volatile
  4951  001994  D7FE               	goto	l216
  4952                           
  4953                           ;main.c: 399: TXREG = BYTE;
  4954  001996  C017  FFAD         	movff	enviaByte@BYTE,4013	;volatile
  4955                           
  4956                           ;main.c: 401: if(BYTE==0x05){
  4957  00199A  0E05               	movlw	5
  4958  00199C  1817               	xorwf	enviaByte@BYTE,w,c
  4959  00199E  A4D8               	btfss	status,2,c
  4960  0019A0  D003               	goto	l3629
  4961                           
  4962                           ;main.c: 402: estado = 2;
  4963  0019A2  0E02               	movlw	2
  4964  0019A4  6E3D               	movwf	_estado,c
  4965                           
  4966                           ;main.c: 403: }
  4967  0019A6  0012               	return	
  4968  0019A8                     l3629:
  4969                           
  4970                           ;main.c: 404: else{
  4971                           ;main.c: 405: estado = 0;
  4972  0019A8  0E00               	movlw	0
  4973  0019AA  6E3D               	movwf	_estado,c
  4974  0019AC  0012               	return	
  4975  0019AE                     __end_of_enviaByte:
  4976                           	opt stack 0
  4977                           tblptru	equ	0xFF8
  4978                           tblptrh	equ	0xFF7
  4979                           tblptrl	equ	0xFF6
  4980                           tablat	equ	0xFF5
  4981                           prodh	equ	0xFF4
  4982                           prodl	equ	0xFF3
  4983                           intcon	equ	0xFF2
  4984                           postinc0	equ	0xFEE
  4985                           wreg	equ	0xFE8
  4986                           indf1	equ	0xFE7
  4987                           postdec1	equ	0xFE5
  4988                           fsr1h	equ	0xFE2
  4989                           fsr1l	equ	0xFE1
  4990                           indf2	equ	0xFDF
  4991                           postinc2	equ	0xFDE
  4992                           postdec2	equ	0xFDD
  4993                           fsr2h	equ	0xFDA
  4994                           fsr2l	equ	0xFD9
  4995                           status	equ	0xFD8
  4996                           
  4997 ;; *************** function _init_XLCD *****************
  4998 ;; Defined at:
  4999 ;;		line 241 in file "main.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5016 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5017 ;;Total ram usage:        0 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    9
  5020 ;; This function calls:
  5021 ;;		_BusyXLCD
  5022 ;;		_OpenXLCD
  5023 ;;		_WriteCmdXLCD
  5024 ;; This function is called by:
  5025 ;;		_main
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text27
  5030  0019AE                     __ptext27:
  5031                           	opt stack 0
  5032  0019AE                     _init_XLCD:
  5033                           	opt stack 21
  5034                           
  5035                           ;main.c: 242: OpenXLCD(0b00101100&0b00111000);
  5036                           
  5037                           ;incstack = 0
  5038  0019AE  0E28               	movlw	40
  5039  0019B0  EC14  F009         	call	_OpenXLCD
  5040  0019B4                     l3789:
  5041  0019B4  EC26  F00C         	call	_BusyXLCD	;wreg free
  5042  0019B8  0900               	iorlw	0
  5043  0019BA  A4D8               	btfss	status,2,c
  5044  0019BC  D7FB               	goto	l3789
  5045                           
  5046                           ;main.c: 244: WriteCmdXLCD(0x06);
  5047  0019BE  0E06               	movlw	6
  5048  0019C0  ECEA  F00B         	call	_WriteCmdXLCD
  5049                           
  5050                           ;main.c: 245: WriteCmdXLCD(0x0C);
  5051  0019C4  0E0C               	movlw	12
  5052  0019C6  ECEA  F00B         	call	_WriteCmdXLCD
  5053  0019CA  0012               	return		;funcret
  5054  0019CC                     __end_of_init_XLCD:
  5055                           	opt stack 0
  5056                           tblptru	equ	0xFF8
  5057                           tblptrh	equ	0xFF7
  5058                           tblptrl	equ	0xFF6
  5059                           tablat	equ	0xFF5
  5060                           prodh	equ	0xFF4
  5061                           prodl	equ	0xFF3
  5062                           intcon	equ	0xFF2
  5063                           postinc0	equ	0xFEE
  5064                           wreg	equ	0xFE8
  5065                           indf1	equ	0xFE7
  5066                           postdec1	equ	0xFE5
  5067                           fsr1h	equ	0xFE2
  5068                           fsr1l	equ	0xFE1
  5069                           indf2	equ	0xFDF
  5070                           postinc2	equ	0xFDE
  5071                           postdec2	equ	0xFDD
  5072                           fsr2h	equ	0xFDA
  5073                           fsr2l	equ	0xFD9
  5074                           status	equ	0xFD8
  5075                           
  5076 ;; *************** function _OpenXLCD *****************
  5077 ;; Defined at:
  5078 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  lcdtype         1    wreg     unsigned char 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  lcdtype         1   27[COMRAM] unsigned char 
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  1    wreg      void 
  5085 ;; Registers used:
  5086 ;;		wreg, status,2, status,0, cstack
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5092 ;;      Params:         0       0       0       0       0       0       0       0       0
  5093 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5095 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5096 ;;Total ram usage:        1 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    8
  5099 ;; This function calls:
  5100 ;;		_BusyXLCD
  5101 ;;		_Delay10KTCYx
  5102 ;;		_DelayPORXLCD
  5103 ;;		_SetDDRamAddr
  5104 ;;		_WriteCmdXLCD
  5105 ;; This function is called by:
  5106 ;;		_init_XLCD
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text28
  5111  001228                     __ptext28:
  5112                           	opt stack 0
  5113  001228                     _OpenXLCD:
  5114                           	opt stack 21
  5115                           
  5116                           ;incstack = 0
  5117                           ;OpenXLCD@lcdtype stored from wreg
  5118  001228  6E1C               	movwf	OpenXLCD@lcdtype,c
  5119  00122A  0EF0               	movlw	240
  5120  00122C  1681               	andwf	3969,f,c	;volatile
  5121  00122E  0EF0               	movlw	240
  5122  001230  1693               	andwf	3987,f,c	;volatile
  5123  001232  9C93               	bcf	3987,6,c	;volatile
  5124  001234  9A93               	bcf	3987,5,c	;volatile
  5125  001236  9893               	bcf	3987,4,c	;volatile
  5126  001238  9C8A               	bcf	3978,6,c	;volatile
  5127  00123A  9A8A               	bcf	3978,5,c	;volatile
  5128  00123C  988A               	bcf	3978,4,c	;volatile
  5129  00123E  EC16  F00D         	call	_DelayPORXLCD	;wreg free
  5130  001242  0E30               	movlw	48
  5131  001244  ECEA  F00B         	call	_WriteCmdXLCD
  5132  001248  0E05               	movlw	5
  5133  00124A  ECE6  F00C         	call	_Delay10KTCYx
  5134  00124E  0E30               	movlw	48
  5135  001250  ECEA  F00B         	call	_WriteCmdXLCD
  5136  001254  0E01               	movlw	1
  5137  001256  ECE6  F00C         	call	_Delay10KTCYx
  5138  00125A  0E32               	movlw	50
  5139  00125C  ECEA  F00B         	call	_WriteCmdXLCD
  5140  001260                     l3579:
  5141  001260  EC26  F00C         	call	_BusyXLCD	;wreg free
  5142  001264  0900               	iorlw	0
  5143  001266  A4D8               	btfss	status,2,c
  5144  001268  D7FB               	goto	l3579
  5145  00126A                     l3581:
  5146  00126A  EC26  F00C         	call	_BusyXLCD	;wreg free
  5147  00126E  0900               	iorlw	0
  5148  001270  A4D8               	btfss	status,2,c
  5149  001272  D7FB               	goto	l3581
  5150  001274  501C               	movf	OpenXLCD@lcdtype,w,c
  5151  001276  ECEA  F00B         	call	_WriteCmdXLCD
  5152  00127A                     l3585:
  5153  00127A  EC26  F00C         	call	_BusyXLCD	;wreg free
  5154  00127E  0900               	iorlw	0
  5155  001280  A4D8               	btfss	status,2,c
  5156  001282  D7FB               	goto	l3585
  5157  001284  0E08               	movlw	8
  5158  001286  ECEA  F00B         	call	_WriteCmdXLCD
  5159  00128A                     l3589:
  5160  00128A  EC26  F00C         	call	_BusyXLCD	;wreg free
  5161  00128E  0900               	iorlw	0
  5162  001290  A4D8               	btfss	status,2,c
  5163  001292  D7FB               	goto	l3589
  5164  001294  0E0F               	movlw	15
  5165  001296  ECEA  F00B         	call	_WriteCmdXLCD
  5166  00129A                     l3593:
  5167  00129A  EC26  F00C         	call	_BusyXLCD	;wreg free
  5168  00129E  0900               	iorlw	0
  5169  0012A0  A4D8               	btfss	status,2,c
  5170  0012A2  D7FB               	goto	l3593
  5171  0012A4  0E01               	movlw	1
  5172  0012A6  ECEA  F00B         	call	_WriteCmdXLCD
  5173  0012AA                     l3597:
  5174  0012AA  EC26  F00C         	call	_BusyXLCD	;wreg free
  5175  0012AE  0900               	iorlw	0
  5176  0012B0  A4D8               	btfss	status,2,c
  5177  0012B2  D7FB               	goto	l3597
  5178  0012B4  0E04               	movlw	4
  5179  0012B6  ECEA  F00B         	call	_WriteCmdXLCD
  5180  0012BA                     l3601:
  5181  0012BA  EC26  F00C         	call	_BusyXLCD	;wreg free
  5182  0012BE  0900               	iorlw	0
  5183  0012C0  A4D8               	btfss	status,2,c
  5184  0012C2  D7FB               	goto	l3601
  5185  0012C4  0E80               	movlw	128
  5186  0012C6  EC15  F00B         	call	_SetDDRamAddr
  5187  0012CA  0012               	return	
  5188  0012CC                     __end_of_OpenXLCD:
  5189                           	opt stack 0
  5190                           tblptru	equ	0xFF8
  5191                           tblptrh	equ	0xFF7
  5192                           tblptrl	equ	0xFF6
  5193                           tablat	equ	0xFF5
  5194                           prodh	equ	0xFF4
  5195                           prodl	equ	0xFF3
  5196                           intcon	equ	0xFF2
  5197                           postinc0	equ	0xFEE
  5198                           wreg	equ	0xFE8
  5199                           indf1	equ	0xFE7
  5200                           postdec1	equ	0xFE5
  5201                           fsr1h	equ	0xFE2
  5202                           fsr1l	equ	0xFE1
  5203                           indf2	equ	0xFDF
  5204                           postinc2	equ	0xFDE
  5205                           postdec2	equ	0xFDD
  5206                           fsr2h	equ	0xFDA
  5207                           fsr2l	equ	0xFD9
  5208                           status	equ	0xFD8
  5209                           
  5210 ;; *************** function _WriteCmdXLCD *****************
  5211 ;; Defined at:
  5212 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  cmd             1    wreg     unsigned char 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  cmd             1   23[COMRAM] unsigned char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      void 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0, cstack
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5226 ;;      Params:         0       0       0       0       0       0       0       0       0
  5227 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5229 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5230 ;;Total ram usage:        1 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    7
  5233 ;; This function calls:
  5234 ;;		_DelayFor18TCY
  5235 ;; This function is called by:
  5236 ;;		_init_XLCD
  5237 ;;		_OpenXLCD
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text29
  5242  0017D4                     __ptext29:
  5243                           	opt stack 0
  5244  0017D4                     _WriteCmdXLCD:
  5245                           	opt stack 22
  5246                           
  5247                           ;incstack = 0
  5248                           ;WriteCmdXLCD@cmd stored from wreg
  5249  0017D4  6E18               	movwf	WriteCmdXLCD@cmd,c
  5250  0017D6  0EF0               	movlw	240
  5251  0017D8  1693               	andwf	3987,f,c	;volatile
  5252  0017DA  0EF0               	movlw	240
  5253  0017DC  1681               	andwf	3969,f,c	;volatile
  5254  0017DE  3818               	swapf	WriteCmdXLCD@cmd,w,c
  5255  0017E0  0B0F               	andlw	15
  5256  0017E2  0B0F               	andlw	15
  5257  0017E4  1281               	iorwf	3969,f,c	;volatile
  5258  0017E6  9C8A               	bcf	3978,6,c	;volatile
  5259  0017E8  9A8A               	bcf	3978,5,c	;volatile
  5260  0017EA  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5261  0017EE  888A               	bsf	3978,4,c	;volatile
  5262  0017F0  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5263  0017F4  988A               	bcf	3978,4,c	;volatile
  5264  0017F6  0EF0               	movlw	240
  5265  0017F8  1681               	andwf	3969,f,c	;volatile
  5266  0017FA  5018               	movf	WriteCmdXLCD@cmd,w,c
  5267  0017FC  0B0F               	andlw	15
  5268  0017FE  1281               	iorwf	3969,f,c	;volatile
  5269  001800  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5270  001804  888A               	bsf	3978,4,c	;volatile
  5271  001806  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5272  00180A  988A               	bcf	3978,4,c	;volatile
  5273  00180C  0E0F               	movlw	15
  5274  00180E  1293               	iorwf	3987,f,c	;volatile
  5275  001810  0012               	return	
  5276  001812                     __end_of_WriteCmdXLCD:
  5277                           	opt stack 0
  5278                           tblptru	equ	0xFF8
  5279                           tblptrh	equ	0xFF7
  5280                           tblptrl	equ	0xFF6
  5281                           tablat	equ	0xFF5
  5282                           prodh	equ	0xFF4
  5283                           prodl	equ	0xFF3
  5284                           intcon	equ	0xFF2
  5285                           postinc0	equ	0xFEE
  5286                           wreg	equ	0xFE8
  5287                           indf1	equ	0xFE7
  5288                           postdec1	equ	0xFE5
  5289                           fsr1h	equ	0xFE2
  5290                           fsr1l	equ	0xFE1
  5291                           indf2	equ	0xFDF
  5292                           postinc2	equ	0xFDE
  5293                           postdec2	equ	0xFDD
  5294                           fsr2h	equ	0xFDA
  5295                           fsr2l	equ	0xFD9
  5296                           status	equ	0xFD8
  5297                           
  5298 ;; *************** function _SetDDRamAddr *****************
  5299 ;; Defined at:
  5300 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  DDaddr          1    wreg     unsigned char 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  DDaddr          1   26[COMRAM] unsigned char 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0, cstack
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5314 ;;      Params:         0       0       0       0       0       0       0       0       0
  5315 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5316 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5317 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5318 ;;Total ram usage:        4 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    7
  5321 ;; This function calls:
  5322 ;;		_DelayFor18TCY
  5323 ;; This function is called by:
  5324 ;;		_printaDisplay
  5325 ;;		_atualiza_Tela
  5326 ;;		_OpenXLCD
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text30
  5331  00162A                     __ptext30:
  5332                           	opt stack 0
  5333  00162A                     _SetDDRamAddr:
  5334                           	opt stack 21
  5335                           
  5336                           ;incstack = 0
  5337                           ;SetDDRamAddr@DDaddr stored from wreg
  5338  00162A  6E1B               	movwf	SetDDRamAddr@DDaddr,c
  5339  00162C  0EF0               	movlw	240
  5340  00162E  1693               	andwf	3987,f,c	;volatile
  5341  001630  0EF0               	movlw	240
  5342  001632  1681               	andwf	3969,f,c	;volatile
  5343  001634  501B               	movf	SetDDRamAddr@DDaddr,w,c
  5344  001636  6E18               	movwf	??_SetDDRamAddr& (0+255),c
  5345  001638  6A19               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  5346  00163A  8E18               	bsf	??_SetDDRamAddr,7,c
  5347  00163C  0E04               	movlw	4
  5348  00163E  6E1A               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  5349  001640                     u2335:
  5350  001640  3419               	rlcf	??_SetDDRamAddr+1,w,c
  5351  001642  3219               	rrcf	??_SetDDRamAddr+1,f,c
  5352  001644  3218               	rrcf	??_SetDDRamAddr,f,c
  5353  001646  2E1A               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  5354  001648  D7FB               	goto	u2335
  5355  00164A  5018               	movf	??_SetDDRamAddr,w,c
  5356  00164C  0B0F               	andlw	15
  5357  00164E  1281               	iorwf	3969,f,c	;volatile
  5358  001650  9C8A               	bcf	3978,6,c	;volatile
  5359  001652  9A8A               	bcf	3978,5,c	;volatile
  5360  001654  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5361  001658  888A               	bsf	3978,4,c	;volatile
  5362  00165A  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5363  00165E  988A               	bcf	3978,4,c	;volatile
  5364  001660  0EF0               	movlw	240
  5365  001662  1681               	andwf	3969,f,c	;volatile
  5366  001664  501B               	movf	SetDDRamAddr@DDaddr,w,c
  5367  001666  0B0F               	andlw	15
  5368  001668  1281               	iorwf	3969,f,c	;volatile
  5369  00166A  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5370  00166E  888A               	bsf	3978,4,c	;volatile
  5371  001670  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5372  001674  988A               	bcf	3978,4,c	;volatile
  5373  001676  0E0F               	movlw	15
  5374  001678  1293               	iorwf	3987,f,c	;volatile
  5375  00167A  0012               	return	
  5376  00167C                     __end_of_SetDDRamAddr:
  5377                           	opt stack 0
  5378                           tblptru	equ	0xFF8
  5379                           tblptrh	equ	0xFF7
  5380                           tblptrl	equ	0xFF6
  5381                           tablat	equ	0xFF5
  5382                           prodh	equ	0xFF4
  5383                           prodl	equ	0xFF3
  5384                           intcon	equ	0xFF2
  5385                           postinc0	equ	0xFEE
  5386                           wreg	equ	0xFE8
  5387                           indf1	equ	0xFE7
  5388                           postdec1	equ	0xFE5
  5389                           fsr1h	equ	0xFE2
  5390                           fsr1l	equ	0xFE1
  5391                           indf2	equ	0xFDF
  5392                           postinc2	equ	0xFDE
  5393                           postdec2	equ	0xFDD
  5394                           fsr2h	equ	0xFDA
  5395                           fsr2l	equ	0xFD9
  5396                           status	equ	0xFD8
  5397                           
  5398 ;; *************** function _DelayPORXLCD *****************
  5399 ;; Defined at:
  5400 ;;		line 78 in file "main.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;		None
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;		None
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		wreg, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5414 ;;      Params:         0       0       0       0       0       0       0       0       0
  5415 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5417 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5418 ;;Total ram usage:        0 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    6
  5421 ;; This function calls:
  5422 ;;		_Delay1KTCYx
  5423 ;; This function is called by:
  5424 ;;		_OpenXLCD
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text31
  5429  001A2C                     __ptext31:
  5430                           	opt stack 0
  5431  001A2C                     _DelayPORXLCD:
  5432                           	opt stack 22
  5433                           
  5434                           ;main.c: 79: Delay1KTCYx(180);
  5435                           
  5436                           ;incstack = 0
  5437  001A2C  0EB4               	movlw	180
  5438  001A2E  ECFA  F00C         	call	_Delay1KTCYx
  5439  001A32  0012               	return	
  5440  001A34                     __end_of_DelayPORXLCD:
  5441                           	opt stack 0
  5442                           tblptru	equ	0xFF8
  5443                           tblptrh	equ	0xFF7
  5444                           tblptrl	equ	0xFF6
  5445                           tablat	equ	0xFF5
  5446                           prodh	equ	0xFF4
  5447                           prodl	equ	0xFF3
  5448                           intcon	equ	0xFF2
  5449                           postinc0	equ	0xFEE
  5450                           wreg	equ	0xFE8
  5451                           indf1	equ	0xFE7
  5452                           postdec1	equ	0xFE5
  5453                           fsr1h	equ	0xFE2
  5454                           fsr1l	equ	0xFE1
  5455                           indf2	equ	0xFDF
  5456                           postinc2	equ	0xFDE
  5457                           postdec2	equ	0xFDD
  5458                           fsr2h	equ	0xFDA
  5459                           fsr2l	equ	0xFD9
  5460                           status	equ	0xFD8
  5461                           
  5462 ;; *************** function _Delay1KTCYx *****************
  5463 ;; Defined at:
  5464 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  unit            1    wreg     unsigned char 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  unit            1   22[COMRAM] unsigned char 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  1    wreg      void 
  5471 ;; Registers used:
  5472 ;;		wreg
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5478 ;;      Params:         0       0       0       0       0       0       0       0       0
  5479 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5480 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5481 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5482 ;;Total ram usage:        1 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    5
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_DelayPORXLCD
  5489 ;;		_DelayXLCD
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text32
  5494  0019F4                     __ptext32:
  5495                           	opt stack 0
  5496  0019F4                     _Delay1KTCYx:
  5497                           	opt stack 22
  5498                           
  5499                           ;incstack = 0
  5500                           ;Delay1KTCYx@unit stored from wreg
  5501  0019F4  6E17               	movwf	Delay1KTCYx@unit,c
  5502  0019F6  0EC8               	movlw	200
  5503  0019F8                     u3207:
  5504  0019F8  D000               	nop2	
  5505  0019FA  2EE8               	decfsz	wreg,f,c
  5506  0019FC  D7FD               	bra	u3207
  5507  0019FE  2E17               	decfsz	Delay1KTCYx@unit,f,c
  5508  001A00  D7FA               	goto	l3185
  5509  001A02  0012               	return	
  5510  001A04                     __end_of_Delay1KTCYx:
  5511                           	opt stack 0
  5512                           tblptru	equ	0xFF8
  5513                           tblptrh	equ	0xFF7
  5514                           tblptrl	equ	0xFF6
  5515                           tablat	equ	0xFF5
  5516                           prodh	equ	0xFF4
  5517                           prodl	equ	0xFF3
  5518                           intcon	equ	0xFF2
  5519                           postinc0	equ	0xFEE
  5520                           wreg	equ	0xFE8
  5521                           indf1	equ	0xFE7
  5522                           postdec1	equ	0xFE5
  5523                           fsr1h	equ	0xFE2
  5524                           fsr1l	equ	0xFE1
  5525                           indf2	equ	0xFDF
  5526                           postinc2	equ	0xFDE
  5527                           postdec2	equ	0xFDD
  5528                           fsr2h	equ	0xFDA
  5529                           fsr2l	equ	0xFD9
  5530                           status	equ	0xFD8
  5531                           
  5532 ;; *************** function _Delay10KTCYx *****************
  5533 ;; Defined at:
  5534 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  unit            1    wreg     unsigned char 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  unit            1   23[COMRAM] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5548 ;;      Params:         0       0       0       0       0       0       0       0       0
  5549 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5550 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5551 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5552 ;;Total ram usage:        2 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    5
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_setaDespertador
  5559 ;;		_main
  5560 ;;		_OpenXLCD
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text33
  5565  0019CC                     __ptext33:
  5566                           	opt stack 0
  5567  0019CC                     _Delay10KTCYx:
  5568                           	opt stack 24
  5569                           
  5570                           ;incstack = 0
  5571                           ;Delay10KTCYx@unit stored from wreg
  5572  0019CC  6E18               	movwf	Delay10KTCYx@unit,c
  5573  0019CE  0E0D               	movlw	13
  5574  0019D0  6E17               	movwf	??_Delay10KTCYx& (0+255),c
  5575  0019D2  0EFC               	movlw	252
  5576  0019D4                     u3217:
  5577  0019D4  2EE8               	decfsz	wreg,f,c
  5578  0019D6  D7FE               	bra	u3217
  5579  0019D8  2E17               	decfsz	??_Delay10KTCYx& (0+255),f,c
  5580  0019DA  D7FC               	bra	u3217
  5581  0019DC  2E18               	decfsz	Delay10KTCYx@unit,f,c
  5582  0019DE  D7F7               	goto	l3387
  5583  0019E0  0012               	return	
  5584  0019E2                     __end_of_Delay10KTCYx:
  5585                           	opt stack 0
  5586                           tblptru	equ	0xFF8
  5587                           tblptrh	equ	0xFF7
  5588                           tblptrl	equ	0xFF6
  5589                           tablat	equ	0xFF5
  5590                           prodh	equ	0xFF4
  5591                           prodl	equ	0xFF3
  5592                           intcon	equ	0xFF2
  5593                           postinc0	equ	0xFEE
  5594                           wreg	equ	0xFE8
  5595                           indf1	equ	0xFE7
  5596                           postdec1	equ	0xFE5
  5597                           fsr1h	equ	0xFE2
  5598                           fsr1l	equ	0xFE1
  5599                           indf2	equ	0xFDF
  5600                           postinc2	equ	0xFDE
  5601                           postdec2	equ	0xFDD
  5602                           fsr2h	equ	0xFDA
  5603                           fsr2l	equ	0xFD9
  5604                           status	equ	0xFD8
  5605                           
  5606 ;; *************** function _BusyXLCD *****************
  5607 ;; Defined at:
  5608 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;		None
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      unsigned char 
  5615 ;; Registers used:
  5616 ;;		wreg, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5622 ;;      Params:         0       0       0       0       0       0       0       0       0
  5623 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5625 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5626 ;;Total ram usage:        0 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    7
  5629 ;; This function calls:
  5630 ;;		_DelayFor18TCY
  5631 ;; This function is called by:
  5632 ;;		_init_XLCD
  5633 ;;		_OpenXLCD
  5634 ;;		_putrsXLCD
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text34
  5639  00184C                     __ptext34:
  5640                           	opt stack 0
  5641  00184C                     _BusyXLCD:
  5642                           	opt stack 20
  5643                           
  5644                           ;incstack = 0
  5645  00184C  8C8A               	bsf	3978,6,c	;volatile
  5646  00184E  9A8A               	bcf	3978,5,c	;volatile
  5647  001850  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5648  001854  888A               	bsf	3978,4,c	;volatile
  5649  001856  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5650  00185A  A681               	btfss	3969,3,c	;volatile
  5651  00185C  D00A               	goto	l312
  5652  00185E  988A               	bcf	3978,4,c	;volatile
  5653  001860  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5654  001864  888A               	bsf	3978,4,c	;volatile
  5655  001866  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5656  00186A  988A               	bcf	3978,4,c	;volatile
  5657  00186C  9C8A               	bcf	3978,6,c	;volatile
  5658  00186E  0E01               	movlw	1
  5659  001870  0012               	return	
  5660  001872                     l312:
  5661  001872  988A               	bcf	3978,4,c	;volatile
  5662  001874  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5663  001878  888A               	bsf	3978,4,c	;volatile
  5664  00187A  EC1A  F00D         	call	_DelayFor18TCY	;wreg free
  5665  00187E  988A               	bcf	3978,4,c	;volatile
  5666  001880  9C8A               	bcf	3978,6,c	;volatile
  5667  001882  0E00               	movlw	0
  5668  001884  0012               	return	
  5669  001886                     __end_of_BusyXLCD:
  5670                           	opt stack 0
  5671                           tblptru	equ	0xFF8
  5672                           tblptrh	equ	0xFF7
  5673                           tblptrl	equ	0xFF6
  5674                           tablat	equ	0xFF5
  5675                           prodh	equ	0xFF4
  5676                           prodl	equ	0xFF3
  5677                           intcon	equ	0xFF2
  5678                           postinc0	equ	0xFEE
  5679                           wreg	equ	0xFE8
  5680                           indf1	equ	0xFE7
  5681                           postdec1	equ	0xFE5
  5682                           fsr1h	equ	0xFE2
  5683                           fsr1l	equ	0xFE1
  5684                           indf2	equ	0xFDF
  5685                           postinc2	equ	0xFDE
  5686                           postdec2	equ	0xFDD
  5687                           fsr2h	equ	0xFDA
  5688                           fsr2l	equ	0xFD9
  5689                           status	equ	0xFD8
  5690                           
  5691 ;; *************** function _DelayFor18TCY *****************
  5692 ;; Defined at:
  5693 ;;		line 74 in file "main.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;		None
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;		None
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      void 
  5700 ;; Registers used:
  5701 ;;		wreg, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5707 ;;      Params:         0       0       0       0       0       0       0       0       0
  5708 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5710 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5711 ;;Total ram usage:        0 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    6
  5714 ;; This function calls:
  5715 ;;		_Delay10TCYx
  5716 ;; This function is called by:
  5717 ;;		_BusyXLCD
  5718 ;;		_SetDDRamAddr
  5719 ;;		_WriteCmdXLCD
  5720 ;;		_WriteDataXLCD
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text35
  5725  001A34                     __ptext35:
  5726                           	opt stack 0
  5727  001A34                     _DelayFor18TCY:
  5728                           	opt stack 20
  5729                           
  5730                           ;main.c: 75: Delay10TCYx(120);
  5731                           
  5732                           ;incstack = 0
  5733  001A34  0E78               	movlw	120
  5734  001A36  EC02  F00D         	call	_Delay10TCYx
  5735  001A3A  0012               	return		;funcret
  5736  001A3C                     __end_of_DelayFor18TCY:
  5737                           	opt stack 0
  5738                           tblptru	equ	0xFF8
  5739                           tblptrh	equ	0xFF7
  5740                           tblptrl	equ	0xFF6
  5741                           tablat	equ	0xFF5
  5742                           prodh	equ	0xFF4
  5743                           prodl	equ	0xFF3
  5744                           intcon	equ	0xFF2
  5745                           postinc0	equ	0xFEE
  5746                           wreg	equ	0xFE8
  5747                           indf1	equ	0xFE7
  5748                           postdec1	equ	0xFE5
  5749                           fsr1h	equ	0xFE2
  5750                           fsr1l	equ	0xFE1
  5751                           indf2	equ	0xFDF
  5752                           postinc2	equ	0xFDE
  5753                           postdec2	equ	0xFDD
  5754                           fsr2h	equ	0xFDA
  5755                           fsr2l	equ	0xFD9
  5756                           status	equ	0xFD8
  5757                           
  5758 ;; *************** function _Delay10TCYx *****************
  5759 ;; Defined at:
  5760 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  unit            1    wreg     unsigned char 
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;  unit            1   22[COMRAM] unsigned char 
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  1    wreg      void 
  5767 ;; Registers used:
  5768 ;;		wreg
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5774 ;;      Params:         0       0       0       0       0       0       0       0       0
  5775 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5777 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5778 ;;Total ram usage:        1 bytes
  5779 ;; Hardware stack levels used:    1
  5780 ;; Hardware stack levels required when called:    5
  5781 ;; This function calls:
  5782 ;;		Nothing
  5783 ;; This function is called by:
  5784 ;;		_DelayFor18TCY
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text36
  5789  001A04                     __ptext36:
  5790                           	opt stack 0
  5791  001A04                     _Delay10TCYx:
  5792                           	opt stack 20
  5793                           
  5794                           ;incstack = 0
  5795                           ;Delay10TCYx@unit stored from wreg
  5796  001A04  6E17               	movwf	Delay10TCYx@unit,c
  5797  001A06  0E03               	movlw	3
  5798  001A08                     u3227:
  5799  001A08  2EE8               	decfsz	wreg,f,c
  5800  001A0A  D7FE               	bra	u3227
  5801  001A0C  F000               	nop	
  5802  001A0E  2E17               	decfsz	Delay10TCYx@unit,f,c
  5803  001A10  D7FA               	goto	l3021
  5804  001A12  0012               	return	
  5805  001A14                     __end_of_Delay10TCYx:
  5806                           	opt stack 0
  5807                           tblptru	equ	0xFF8
  5808                           tblptrh	equ	0xFF7
  5809                           tblptrl	equ	0xFF6
  5810                           tablat	equ	0xFF5
  5811                           prodh	equ	0xFF4
  5812                           prodl	equ	0xFF3
  5813                           intcon	equ	0xFF2
  5814                           postinc0	equ	0xFEE
  5815                           wreg	equ	0xFE8
  5816                           indf1	equ	0xFE7
  5817                           postdec1	equ	0xFE5
  5818                           fsr1h	equ	0xFE2
  5819                           fsr1l	equ	0xFE1
  5820                           indf2	equ	0xFDF
  5821                           postinc2	equ	0xFDE
  5822                           postdec2	equ	0xFDD
  5823                           fsr2h	equ	0xFDA
  5824                           fsr2l	equ	0xFD9
  5825                           status	equ	0xFD8
  5826                           
  5827 ;; *************** function _pic_isr *****************
  5828 ;; Defined at:
  5829 ;;		line 104 in file "main.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;		None
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5843 ;;      Params:         0       0       0       0       0       0       0       0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5845 ;;      Temps:         17       0       0       0       0       0       0       0       0
  5846 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5847 ;;Total ram usage:       17 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    4
  5850 ;; This function calls:
  5851 ;;		i1_printaDisplay
  5852 ;; This function is called by:
  5853 ;;		Interrupt level 1
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	intcodelo
  5858  000018                     __pintcodelo:
  5859                           	opt stack 0
  5860  000018                     _pic_isr:
  5861                           	opt stack 19
  5862                           
  5863                           ;incstack = 0
  5864  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5865  00001A  CFD8 F006          	movff	status,??_pic_isr
  5866  00001E  CFE8 F007          	movff	wreg,??_pic_isr+1
  5867  000022  CFE0 F008          	movff	bsr,??_pic_isr+2
  5868  000026  CFFA F009          	movff	pclath,??_pic_isr+3
  5869  00002A  CFFB F00A          	movff	pclatu,??_pic_isr+4
  5870  00002E  CFE9 F00B          	movff	fsr0l,??_pic_isr+5
  5871  000032  CFEA F00C          	movff	fsr0h,??_pic_isr+6
  5872  000036  CFE1 F00D          	movff	fsr1l,??_pic_isr+7
  5873  00003A  CFE2 F00E          	movff	fsr1h,??_pic_isr+8
  5874  00003E  CFD9 F00F          	movff	fsr2l,??_pic_isr+9
  5875  000042  CFDA F010          	movff	fsr2h,??_pic_isr+10
  5876  000046  CFF3 F011          	movff	prodl,??_pic_isr+11
  5877  00004A  CFF4 F012          	movff	prodh,??_pic_isr+12
  5878  00004E  CFF6 F013          	movff	tblptrl,??_pic_isr+13
  5879  000052  CFF7 F014          	movff	tblptrh,??_pic_isr+14
  5880  000056  CFF8 F015          	movff	tblptru,??_pic_isr+15
  5881  00005A  CFF5 F016          	movff	tablat,??_pic_isr+16
  5882                           
  5883                           ;main.c: 108: if(TMR0IF){
  5884  00005E  A4F2               	btfss	intcon,2,c	;volatile
  5885  000060  D00D               	goto	i1l2931
  5886                           
  5887                           ;main.c: 110: cont++;
  5888  000062  2A3A               	incf	_cont,f,c
  5889                           
  5890                           ;main.c: 111: if(cont > 1){
  5891  000064  0E01               	movlw	1
  5892  000066  643A               	cpfsgt	_cont,c
  5893  000068  D004               	goto	i1l124
  5894                           
  5895                           ;main.c: 112: flagSegundo = 1;
  5896  00006A  0E01               	movlw	1
  5897  00006C  6E3B               	movwf	_flagSegundo,c
  5898                           
  5899                           ;main.c: 113: cont = 0;
  5900  00006E  0E00               	movlw	0
  5901  000070  6E3A               	movwf	_cont,c
  5902  000072                     i1l124:
  5903                           
  5904                           ;main.c: 114: }
  5905                           ;main.c: 117: TMR0 = 26474;
  5906  000072  0E67               	movlw	103
  5907  000074  6ED7               	movwf	4055,c	;volatile
  5908  000076  0E6A               	movlw	106
  5909  000078  6ED6               	movwf	4054,c	;volatile
  5910                           
  5911                           ;main.c: 118: INTCONbits.TMR0IF = 0;
  5912  00007A  94F2               	bcf	intcon,2,c	;volatile
  5913  00007C                     i1l2931:
  5914                           
  5915                           ;main.c: 119: }
  5916                           ;main.c: 122: if(PIR1bits.RCIF == 1)
  5917  00007C  AA9E               	btfss	3998,5,c	;volatile
  5918  00007E  D017               	goto	i1l130
  5919  000080                     i1l126:
  5920  000080  AA9E               	btfss	3998,5,c	;volatile
  5921  000082  D7FE               	goto	i1l126
  5922                           
  5923                           ;main.c: 127: BUFFCOM[i]= RCREG;
  5924  000084  503C               	movf	_i,w,c
  5925  000086  0D01               	mullw	1
  5926  000088  0E3E               	movlw	low _BUFFCOM
  5927  00008A  24F3               	addwf	prodl,w,c
  5928  00008C  6ED9               	movwf	fsr2l,c
  5929  00008E  0E00               	movlw	high _BUFFCOM
  5930  000090  20F4               	addwfc	prodh,w,c
  5931  000092  6EDA               	movwf	fsr2h,c
  5932  000094  CFAE FFDF          	movff	4014,indf2	;volatile
  5933                           
  5934                           ;main.c: 129: i++;
  5935  000098  2A3C               	incf	_i,f,c
  5936                           
  5937                           ;main.c: 131: if(i>6)
  5938  00009A  0E06               	movlw	6
  5939  00009C  643C               	cpfsgt	_i,c
  5940  00009E  D007               	goto	i1l130
  5941                           
  5942                           ;main.c: 132: {
  5943                           ;main.c: 133: printaDisplay();
  5944  0000A0  EC1E  F00D         	call	i1_printaDisplay	;wreg free
  5945                           
  5946                           ;main.c: 134: PIR1bits.RCIF = 0;
  5947  0000A4  9A9E               	bcf	3998,5,c	;volatile
  5948                           
  5949                           ;main.c: 135: i=0;
  5950  0000A6  0E00               	movlw	0
  5951  0000A8  6E3C               	movwf	_i,c
  5952                           
  5953                           ;main.c: 136: estado = 1;
  5954  0000AA  0E01               	movlw	1
  5955  0000AC  6E3D               	movwf	_estado,c
  5956  0000AE                     i1l130:
  5957  0000AE  C016  FFF5         	movff	??_pic_isr+16,tablat
  5958  0000B2  C015  FFF8         	movff	??_pic_isr+15,tblptru
  5959  0000B6  C014  FFF7         	movff	??_pic_isr+14,tblptrh
  5960  0000BA  C013  FFF6         	movff	??_pic_isr+13,tblptrl
  5961  0000BE  C012  FFF4         	movff	??_pic_isr+12,prodh
  5962  0000C2  C011  FFF3         	movff	??_pic_isr+11,prodl
  5963  0000C6  C010  FFDA         	movff	??_pic_isr+10,fsr2h
  5964  0000CA  C00F  FFD9         	movff	??_pic_isr+9,fsr2l
  5965  0000CE  C00E  FFE2         	movff	??_pic_isr+8,fsr1h
  5966  0000D2  C00D  FFE1         	movff	??_pic_isr+7,fsr1l
  5967  0000D6  C00C  FFEA         	movff	??_pic_isr+6,fsr0h
  5968  0000DA  C00B  FFE9         	movff	??_pic_isr+5,fsr0l
  5969  0000DE  C00A  FFFB         	movff	??_pic_isr+4,pclatu
  5970  0000E2  C009  FFFA         	movff	??_pic_isr+3,pclath
  5971  0000E6  C008  FFE0         	movff	??_pic_isr+2,bsr
  5972  0000EA  C007  FFE8         	movff	??_pic_isr+1,wreg
  5973  0000EE  C006  FFD8         	movff	??_pic_isr,status
  5974  0000F2  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5975  0000F4  0010               	retfie	
  5976  0000F6                     __end_of_pic_isr:
  5977                           	opt stack 0
  5978                           pclatu	equ	0xFFB
  5979                           pclath	equ	0xFFA
  5980                           tblptru	equ	0xFF8
  5981                           tblptrh	equ	0xFF7
  5982                           tblptrl	equ	0xFF6
  5983                           tablat	equ	0xFF5
  5984                           prodh	equ	0xFF4
  5985                           prodl	equ	0xFF3
  5986                           intcon	equ	0xFF2
  5987                           postinc0	equ	0xFEE
  5988                           fsr0h	equ	0xFEA
  5989                           fsr0l	equ	0xFE9
  5990                           wreg	equ	0xFE8
  5991                           indf1	equ	0xFE7
  5992                           postdec1	equ	0xFE5
  5993                           fsr1h	equ	0xFE2
  5994                           fsr1l	equ	0xFE1
  5995                           bsr	equ	0xFE0
  5996                           indf2	equ	0xFDF
  5997                           postinc2	equ	0xFDE
  5998                           postdec2	equ	0xFDD
  5999                           fsr2h	equ	0xFDA
  6000                           fsr2l	equ	0xFD9
  6001                           status	equ	0xFD8
  6002                           
  6003 ;; *************** function i1_printaDisplay *****************
  6004 ;; Defined at:
  6005 ;;		line 99 in file "main.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;		None
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;		None
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      void 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0, cstack
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6019 ;;      Params:         0       0       0       0       0       0       0       0       0
  6020 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6022 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6023 ;;Total ram usage:        0 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    3
  6026 ;; This function calls:
  6027 ;;		i1_SetDDRamAddr
  6028 ;; This function is called by:
  6029 ;;		_pic_isr
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text38
  6034  001A3C                     __ptext38:
  6035                           	opt stack 0
  6036  001A3C                     i1_printaDisplay:
  6037                           	opt stack 19
  6038                           
  6039                           ;main.c: 100: SetDDRamAddr(0x00);
  6040                           
  6041                           ;incstack = 0
  6042  001A3C  0E00               	movlw	0
  6043  001A3E  EC3E  F00B         	call	i1_SetDDRamAddr
  6044  001A42  0012               	return		;funcret
  6045  001A44                     __end_ofi1_printaDisplay:
  6046                           	opt stack 0
  6047                           pclatu	equ	0xFFB
  6048                           pclath	equ	0xFFA
  6049                           tblptru	equ	0xFF8
  6050                           tblptrh	equ	0xFF7
  6051                           tblptrl	equ	0xFF6
  6052                           tablat	equ	0xFF5
  6053                           prodh	equ	0xFF4
  6054                           prodl	equ	0xFF3
  6055                           intcon	equ	0xFF2
  6056                           postinc0	equ	0xFEE
  6057                           fsr0h	equ	0xFEA
  6058                           fsr0l	equ	0xFE9
  6059                           wreg	equ	0xFE8
  6060                           indf1	equ	0xFE7
  6061                           postdec1	equ	0xFE5
  6062                           fsr1h	equ	0xFE2
  6063                           fsr1l	equ	0xFE1
  6064                           bsr	equ	0xFE0
  6065                           indf2	equ	0xFDF
  6066                           postinc2	equ	0xFDE
  6067                           postdec2	equ	0xFDD
  6068                           fsr2h	equ	0xFDA
  6069                           fsr2l	equ	0xFD9
  6070                           status	equ	0xFD8
  6071                           
  6072 ;; *************** function i1_SetDDRamAddr *****************
  6073 ;; Defined at:
  6074 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  DDaddr          1    wreg     unsigned char 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  DDaddr          1    4[COMRAM] unsigned char 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  1    wreg      void 
  6081 ;; Registers used:
  6082 ;;		wreg, status,2, status,0, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6088 ;;      Params:         0       0       0       0       0       0       0       0       0
  6089 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6090 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6091 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6092 ;;Total ram usage:        4 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:    2
  6095 ;; This function calls:
  6096 ;;		i1_DelayFor18TCY
  6097 ;; This function is called by:
  6098 ;;		i1_printaDisplay
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text39
  6103  00167C                     __ptext39:
  6104                           	opt stack 0
  6105  00167C                     i1_SetDDRamAddr:
  6106                           	opt stack 19
  6107                           
  6108                           ;incstack = 0
  6109                           ;i1SetDDRamAddr@DDaddr stored from wreg
  6110  00167C  6E05               	movwf	i1SetDDRamAddr@DDaddr,c
  6111  00167E  0EF0               	movlw	240
  6112  001680  1693               	andwf	3987,f,c	;volatile
  6113  001682  0EF0               	movlw	240
  6114  001684  1681               	andwf	3969,f,c	;volatile
  6115  001686  5005               	movf	i1SetDDRamAddr@DDaddr,w,c
  6116  001688  6E02               	movwf	??i1_SetDDRamAddr& (0+255),c
  6117  00168A  6A03               	clrf	(??i1_SetDDRamAddr+1)& (0+255),c
  6118  00168C  8E02               	bsf	??i1_SetDDRamAddr,7,c
  6119  00168E  0E04               	movlw	4
  6120  001690  6E04               	movwf	(??i1_SetDDRamAddr+2)& (0+255),c
  6121  001692                     i1u185_25:
  6122  001692  3403               	rlcf	??i1_SetDDRamAddr+1,w,c
  6123  001694  3203               	rrcf	??i1_SetDDRamAddr+1,f,c
  6124  001696  3202               	rrcf	??i1_SetDDRamAddr,f,c
  6125  001698  2E04               	decfsz	(??i1_SetDDRamAddr+2)& (0+255),f,c
  6126  00169A  D7FB               	goto	i1u185_25
  6127  00169C  5002               	movf	??i1_SetDDRamAddr,w,c
  6128  00169E  0B0F               	andlw	15
  6129  0016A0  1281               	iorwf	3969,f,c	;volatile
  6130  0016A2  9C8A               	bcf	3978,6,c	;volatile
  6131  0016A4  9A8A               	bcf	3978,5,c	;volatile
  6132  0016A6  EC22  F00D         	call	i1_DelayFor18TCY	;wreg free
  6133  0016AA  888A               	bsf	3978,4,c	;volatile
  6134  0016AC  EC22  F00D         	call	i1_DelayFor18TCY	;wreg free
  6135  0016B0  988A               	bcf	3978,4,c	;volatile
  6136  0016B2  0EF0               	movlw	240
  6137  0016B4  1681               	andwf	3969,f,c	;volatile
  6138  0016B6  5005               	movf	i1SetDDRamAddr@DDaddr,w,c
  6139  0016B8  0B0F               	andlw	15
  6140  0016BA  1281               	iorwf	3969,f,c	;volatile
  6141  0016BC  EC22  F00D         	call	i1_DelayFor18TCY	;wreg free
  6142  0016C0  888A               	bsf	3978,4,c	;volatile
  6143  0016C2  EC22  F00D         	call	i1_DelayFor18TCY	;wreg free
  6144  0016C6  988A               	bcf	3978,4,c	;volatile
  6145  0016C8  0E0F               	movlw	15
  6146  0016CA  1293               	iorwf	3987,f,c	;volatile
  6147  0016CC  0012               	return	
  6148  0016CE                     __end_ofi1_SetDDRamAddr:
  6149                           	opt stack 0
  6150                           pclatu	equ	0xFFB
  6151                           pclath	equ	0xFFA
  6152                           tblptru	equ	0xFF8
  6153                           tblptrh	equ	0xFF7
  6154                           tblptrl	equ	0xFF6
  6155                           tablat	equ	0xFF5
  6156                           prodh	equ	0xFF4
  6157                           prodl	equ	0xFF3
  6158                           intcon	equ	0xFF2
  6159                           postinc0	equ	0xFEE
  6160                           fsr0h	equ	0xFEA
  6161                           fsr0l	equ	0xFE9
  6162                           wreg	equ	0xFE8
  6163                           indf1	equ	0xFE7
  6164                           postdec1	equ	0xFE5
  6165                           fsr1h	equ	0xFE2
  6166                           fsr1l	equ	0xFE1
  6167                           bsr	equ	0xFE0
  6168                           indf2	equ	0xFDF
  6169                           postinc2	equ	0xFDE
  6170                           postdec2	equ	0xFDD
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8
  6174                           
  6175 ;; *************** function i1_DelayFor18TCY *****************
  6176 ;; Defined at:
  6177 ;;		line 74 in file "main.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;		None
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1    wreg      void 
  6184 ;; Registers used:
  6185 ;;		wreg, cstack
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6191 ;;      Params:         0       0       0       0       0       0       0       0       0
  6192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6194 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6195 ;;Total ram usage:        0 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:    1
  6198 ;; This function calls:
  6199 ;;		i1_Delay10TCYx
  6200 ;; This function is called by:
  6201 ;;		i1_SetDDRamAddr
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text40
  6206  001A44                     __ptext40:
  6207                           	opt stack 0
  6208  001A44                     i1_DelayFor18TCY:
  6209                           	opt stack 19
  6210                           
  6211                           ;main.c: 75: Delay10TCYx(120);
  6212                           
  6213                           ;incstack = 0
  6214  001A44  0E78               	movlw	120
  6215  001A46  EC0A  F00D         	call	i1_Delay10TCYx
  6216  001A4A  0012               	return		;funcret
  6217  001A4C                     __end_ofi1_DelayFor18TCY:
  6218                           	opt stack 0
  6219                           pclatu	equ	0xFFB
  6220                           pclath	equ	0xFFA
  6221                           tblptru	equ	0xFF8
  6222                           tblptrh	equ	0xFF7
  6223                           tblptrl	equ	0xFF6
  6224                           tablat	equ	0xFF5
  6225                           prodh	equ	0xFF4
  6226                           prodl	equ	0xFF3
  6227                           intcon	equ	0xFF2
  6228                           postinc0	equ	0xFEE
  6229                           fsr0h	equ	0xFEA
  6230                           fsr0l	equ	0xFE9
  6231                           wreg	equ	0xFE8
  6232                           indf1	equ	0xFE7
  6233                           postdec1	equ	0xFE5
  6234                           fsr1h	equ	0xFE2
  6235                           fsr1l	equ	0xFE1
  6236                           bsr	equ	0xFE0
  6237                           indf2	equ	0xFDF
  6238                           postinc2	equ	0xFDE
  6239                           postdec2	equ	0xFDD
  6240                           fsr2h	equ	0xFDA
  6241                           fsr2l	equ	0xFD9
  6242                           status	equ	0xFD8
  6243                           
  6244 ;; *************** function i1_Delay10TCYx *****************
  6245 ;; Defined at:
  6246 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  unit            1    wreg     unsigned char 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  unit            1    0[COMRAM] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6260 ;;      Params:         0       0       0       0       0       0       0       0       0
  6261 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6263 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6264 ;;Total ram usage:        1 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; This function calls:
  6267 ;;		Nothing
  6268 ;; This function is called by:
  6269 ;;		i1_DelayFor18TCY
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           	psect	text41
  6274  001A14                     __ptext41:
  6275                           	opt stack 0
  6276  001A14                     i1_Delay10TCYx:
  6277                           	opt stack 19
  6278                           
  6279                           ;incstack = 0
  6280                           ;i1Delay10TCYx@unit stored from wreg
  6281  001A14  6E01               	movwf	i1Delay10TCYx@unit,c
  6282  001A16  0E03               	movlw	3
  6283  001A18                     i1u323_27:
  6284  001A18  2EE8               	decfsz	wreg,f,c
  6285  001A1A  D7FE               	bra	i1u323_27
  6286  001A1C  F000               	nop	
  6287  001A1E  2E01               	decfsz	i1Delay10TCYx@unit,f,c
  6288  001A20  D7FA               	goto	i1l2323
  6289  001A22  0012               	return	
  6290  001A24                     __end_ofi1_Delay10TCYx:
  6291                           	opt stack 0
  6292                           pclatu	equ	0xFFB
  6293                           pclath	equ	0xFFA
  6294                           tblptru	equ	0xFF8
  6295                           tblptrh	equ	0xFF7
  6296                           tblptrl	equ	0xFF6
  6297                           tablat	equ	0xFF5
  6298                           prodh	equ	0xFF4
  6299                           prodl	equ	0xFF3
  6300                           intcon	equ	0xFF2
  6301                           postinc0	equ	0xFEE
  6302                           fsr0h	equ	0xFEA
  6303                           fsr0l	equ	0xFE9
  6304                           wreg	equ	0xFE8
  6305                           indf1	equ	0xFE7
  6306                           postdec1	equ	0xFE5
  6307                           fsr1h	equ	0xFE2
  6308                           fsr1l	equ	0xFE1
  6309                           bsr	equ	0xFE0
  6310                           indf2	equ	0xFDF
  6311                           postinc2	equ	0xFDE
  6312                           postdec2	equ	0xFDD
  6313                           fsr2h	equ	0xFDA
  6314                           fsr2l	equ	0xFD9
  6315                           status	equ	0xFD8
  6316                           pclatu	equ	0xFFB
  6317                           pclath	equ	0xFFA
  6318                           tblptru	equ	0xFF8
  6319                           tblptrh	equ	0xFF7
  6320                           tblptrl	equ	0xFF6
  6321                           tablat	equ	0xFF5
  6322                           prodh	equ	0xFF4
  6323                           prodl	equ	0xFF3
  6324                           intcon	equ	0xFF2
  6325                           postinc0	equ	0xFEE
  6326                           fsr0h	equ	0xFEA
  6327                           fsr0l	equ	0xFE9
  6328                           wreg	equ	0xFE8
  6329                           indf1	equ	0xFE7
  6330                           postdec1	equ	0xFE5
  6331                           fsr1h	equ	0xFE2
  6332                           fsr1l	equ	0xFE1
  6333                           bsr	equ	0xFE0
  6334                           indf2	equ	0xFDF
  6335                           postinc2	equ	0xFDE
  6336                           postdec2	equ	0xFDD
  6337                           fsr2h	equ	0xFDA
  6338                           fsr2l	equ	0xFD9
  6339                           status	equ	0xFD8
  6340                           
  6341                           	psect	rparam
  6342  0000                     pclatu	equ	0xFFB
  6343                           pclath	equ	0xFFA
  6344                           tblptru	equ	0xFF8
  6345                           tblptrh	equ	0xFF7
  6346                           tblptrl	equ	0xFF6
  6347                           tablat	equ	0xFF5
  6348                           prodh	equ	0xFF4
  6349                           prodl	equ	0xFF3
  6350                           intcon	equ	0xFF2
  6351                           postinc0	equ	0xFEE
  6352                           fsr0h	equ	0xFEA
  6353                           fsr0l	equ	0xFE9
  6354                           wreg	equ	0xFE8
  6355                           indf1	equ	0xFE7
  6356                           postdec1	equ	0xFE5
  6357                           fsr1h	equ	0xFE2
  6358                           fsr1l	equ	0xFE1
  6359                           bsr	equ	0xFE0
  6360                           indf2	equ	0xFDF
  6361                           postinc2	equ	0xFDE
  6362                           postdec2	equ	0xFDD
  6363                           fsr2h	equ	0xFDA
  6364                           fsr2l	equ	0xFD9
  6365                           status	equ	0xFD8
  6366                           
  6367                           	psect	temp
  6368  000049                     btemp:
  6369                           	opt stack 0
  6370  000049                     	ds	1
  6371  0000                     int$flags	set	btemp
  6372                           pclatu	equ	0xFFB
  6373                           pclath	equ	0xFFA
  6374                           tblptru	equ	0xFF8
  6375                           tblptrh	equ	0xFF7
  6376                           tblptrl	equ	0xFF6
  6377                           tablat	equ	0xFF5
  6378                           prodh	equ	0xFF4
  6379                           prodl	equ	0xFF3
  6380                           intcon	equ	0xFF2
  6381                           postinc0	equ	0xFEE
  6382                           fsr0h	equ	0xFEA
  6383                           fsr0l	equ	0xFE9
  6384                           wreg	equ	0xFE8
  6385                           indf1	equ	0xFE7
  6386                           postdec1	equ	0xFE5
  6387                           fsr1h	equ	0xFE2
  6388                           fsr1l	equ	0xFE1
  6389                           bsr	equ	0xFE0
  6390                           indf2	equ	0xFDF
  6391                           postinc2	equ	0xFDE
  6392                           postdec2	equ	0xFDD
  6393                           fsr2h	equ	0xFDA
  6394                           fsr2l	equ	0xFD9
  6395                           status	equ	0xFD8


Data Sizes:
    Strings     90
    Constant    10
    Data        19
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      72
    BANK0           160     22      75
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    memcpy@d1	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), 

    memcpy@s1	PTR const void  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> pegaHoraData(COMRAM[3]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_11(CODE[7]), STR_9(CODE[6]), STR_8(CODE[17]), STR_6(CODE[7]), 
		 -> vet(BANK0[8]), STR_4(CODE[7]), versao(BANK0[6]), STR_3(CODE[9]), 
		 -> STR_2(CODE[17]), converteAnoString@anoStr(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[10]), STR_7(CODE[11]), STR_5(CODE[15]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> vet(BANK0[8]), converteAnoString@anoStr(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), 

    crc16@data_p	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), BUFFCOM(COMRAM[7]), 

    sp__converteAnoString	PTR unsigned char  size(2) Largest target is 4
		 -> converteAnoString@anoStr(BANK0[4]), 


Critical Paths under _main in COMRAM

    _trata_relogio_data->_verificaAnoBissexto
    _verificaAnoBissexto->___awmod
    _verificaCRCBUFFCOM->_crc16
    _printaDisplay->_SetDDRamAddr
    _memcpy->_strlen
    _calculaCRCBUFFRESP->_crc16
    _atualiza_Tela->_putrsXLCD
    _putrsXLCD->_converteAnoString
    _converteAnoString->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _DelayFor18TCY->_Delay10TCYx

Critical Paths under _pic_isr in COMRAM

    i1_printaDisplay->i1_SetDDRamAddr
    i1_DelayFor18TCY->i1_Delay10TCYx

Critical Paths under _main in BANK0

    _main->_atualiza_Tela
    _setaDespertador->_atualiza_Tela
    _trataComando->_atualiza_Tela
    _atualiza_Tela->_converteAnoString
    _putrsXLCD->_converteAnoString
    _converteAnoString->_sprintf

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   26311
                                             21 BANK0      1     1      0
                       _Delay10KTCYx
                      _atualiza_Tela
                          _init_XLCD
                      _maquinaEstado
                    _setaDespertador
                 _trata_relogio_data
 ---------------------------------------------------------------------------------
 (1) _trata_relogio_data                                   5     5      0    1835
                                             32 COMRAM     5     5      0
                _verificaAnoBissexto
 ---------------------------------------------------------------------------------
 (2) _verificaAnoBissexto                                  4     2      2    1835
                                             28 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _setaDespertador                                      0     0      0    5654
                       _Delay10KTCYx
                      _atualiza_Tela
 ---------------------------------------------------------------------------------
 (1) _maquinaEstado                                        0     0      0   12666
                          _enviaByte
                       _trataComando
                            _tx_data
                 _verificaCRCBUFFCOM
 ---------------------------------------------------------------------------------
 (2) _verificaCRCBUFFCOM                                   9     9      0     945
                                             35 COMRAM     9     9      0
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      99
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trataComando                                         0     0      0   11560
                            ___awdiv
                            ___awmod
                               _atoi
                      _atualiza_Tela
                 _calculaCRCBUFFRESP
                             _memcpy
                      _printaDisplay
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     207
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _printaDisplay                                        0     0      0      93
                       _SetDDRamAddr
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     405
                                             28 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _calculaCRCBUFFRESP                                   2     2      0     840
                                             35 COMRAM     2     2      0
                              _crc16
 ---------------------------------------------------------------------------------
 (3) _crc16                                               13     9      4     775
                                             22 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _atualiza_Tela                                        1     1      0    5623
                                             20 BANK0      1     1      0
                       _SetDDRamAddr
                  _acionaDespertador
                  _converteAnoString
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _putrsXLCD                                            2     0      2    1113
                                             44 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
                  _converteAnoString (ARG)
 ---------------------------------------------------------------------------------
 (4) _WriteDataXLCD                                        1     1      0      93
                                             23 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _converteAnoString                                    6     4      2    2293
                                             42 COMRAM     2     0      2
                                             16 BANK0      4     4      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             33    17     16    2093
                                             34 COMRAM     8     8      0
                                              0 BANK0     16     0     16
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                             29 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     395
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _acionaDespertador                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1358
                                             28 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1665
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1369
                                             22 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _enviaByte                                            1     1      0      62
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     434
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     310
                                             27 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      93
                                             23 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      93
                                             23 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      31
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      31
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _BusyXLCD                                             0     0      0      31
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0      31
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (6) _Delay10TCYx                                          1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _pic_isr                                             17    17      0      66
                                              5 COMRAM    17    17      0
                    i1_printaDisplay
 ---------------------------------------------------------------------------------
 (9) i1_printaDisplay                                      0     0      0      66
                     i1_SetDDRamAddr
 ---------------------------------------------------------------------------------
 (10) i1_SetDDRamAddr                                      4     4      0      66
                                              1 COMRAM     4     4      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (11) i1_DelayFor18TCY                                     0     0      0      22
                      i1_Delay10TCYx
 ---------------------------------------------------------------------------------
 (12) i1_Delay10TCYx                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay10KTCYx
   _atualiza_Tela
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     _acionaDespertador
     _converteAnoString
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _converteAnoString (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquinaEstado
     _enviaByte
     _trataComando
       ___awdiv
       ___awmod
       _atoi
         ___wmul
         _isdigit
       _atualiza_Tela
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _acionaDespertador
         _converteAnoString
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _converteAnoString (ARG)
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _calculaCRCBUFFRESP
         _crc16
       _memcpy
         _strlen (ARG)
       _printaDisplay
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
       _strlen
     _tx_data
     _verificaCRCBUFFCOM
       _crc16
   _setaDespertador
     _Delay10KTCYx
     _atualiza_Tela
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _acionaDespertador
       _converteAnoString
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _converteAnoString (ARG)
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _trata_relogio_data
     _verificaAnoBissexto
       ___awmod

 _pic_isr (ROOT)
   i1_printaDisplay
     i1_SetDDRamAddr
       i1_DelayFor18TCY
         i1_Delay10TCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      4B       5       46.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      48       1       76.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      93      20        0.0%
DATA                 0      0      93       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jun 13 15:47:42 2018

            ??i1_SetDDRamAddr 0002                             _i 003C             i1Delay10TCYx@unit 0001  
                ___awdiv@sign 001C                            bsr 000FE0           ___wmul@multiplicand 0019  
                         l210 189E                           l204 1106                           l230 0872  
                         l312 1872                           l216 1992                           l232 087C  
                         l233 08C8                           l234 0908                           l228 0868  
                         l575 121E                           l846 1620                           l856 174C  
                         _vet 0074         __size_of_WriteCmdXLCD 003E                  ___awmod@sign 001C  
                         prod 000FF3                           wreg 000FE8                  __CFG_WDT$OFF 000000  
                        l3021 1A06                          l3111 0DB8                          l3103 0D94  
                        l3033 15EE                          l3121 0E2E                          l3035 15F6  
                        l3045 1616                          l3037 15FA                          l3061 1742  
                        l3053 1722                          l3117 0E0C                          l3109 0DB2  
                        l3055 172A                          l3119 0E14                          l3401 115C  
                        l3057 172E                          l3073 0D10                          l3233 1526  
                        l3403 1160                          l3091 0D68                          l3067 0CF4  
                        l3421 11EC                          l3413 11A0                          l3341 0B5A  
                        l3511 1428                          l3503 140E                          l3079 0D3C  
                        l3239 1558                          l3335 0B28                          l3263 1100  
                        l3255 10B8                          l3431 1820                          l3185 19F6  
                        l3601 12BA                          l3417 11B2                          l3089 0D64  
                        l3249 109E                          l3523 1454                          l3515 143C  
                        l3507 141C                          l3419 11E8                          l3371 0C5A  
                        l3267 1110                          l3259 10C0                          l3461 138E  
                        l3509 1424                          l3293 1988                          l3445 1784  
                        l3429 181C                          l3471 13B0                          l3455 137E  
                        l3519 1446                          l3439 1768                          l3385 0CD4  
                        l3609 188E                          l3705 14B6                          l3545 151C  
                        l3537 14FC                          l3387 19CE                          l3467 13A4  
                        l3483 13D6                          l3619 18B8                          l3581 126A  
                        l3629 19A8                          l3469 13AC                          l3661 0942  
                        l3709 14C2                          l3813 130C                          l3549 1520  
                        l3487 13E4                          l3479 13CC                          l3671 09A6  
                        l3663 095E                          l3831 133C                          l3815 1314  
                        l3807 12F6                          l3593 129A                          l3585 127A  
                        l3657 093C                          l3841 1362                          l3817 131C  
                        l3761 0ED6                          l3745 0E9E                          l3921 105C  
                        l3579 1260                          l3499 1402                          l3675 0A1C  
                        l3683 0ADE                          l3851 16E2                          l3819 1322  
                        l3931 107A                          l3923 1066                          l3597 12AA  
                        l3589 128A                          l3677 0A7E                          l3669 0994  
                        l3853 16EA                          l3845 16D0                          l3837 1352  
                        l3909 102C                          l3687 0AFA                          l3847 16D6  
                        l3839 135A                          l3775 0F2A                          l3919 1052  
                        l3689 0B08                          l3849 16DC                          l3857 16F2  
                        l3785 0F64                          l3789 19B4   __end_of_verificaAnoBissexto 1524  
                        STR_1 0839                          STR_2 081C                          STR_3 0847  
                        STR_4 0857                          STR_5 082D                          STR_6 085E  
                        STR_7 083C                          STR_8 080B                          STR_9 0851  
                        u2400 1550                          u2410 1578                          u3207 19F8  
                        u2335 1640                          u2407 1546                          u3217 19D4  
                        u2417 156E                          u3227 1A08                          _PEIE 007F96  
                        _RCIE 007CED                          _RCIF 007CF5                          _RCIP 007CFD  
                        _TMR0 000FD6               i1_printaDisplay 1A3C                          _TXIF 007CF4  
                        _atoi 115A                          _cont 003A                          _main 0F6C  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0049  
      __size_of_WriteDataXLCD 003E                          prodh 000FF4                          prodl 000FF3  
                        start 00F6        verificaCRCBUFFCOM@crc1 0026        verificaCRCBUFFCOM@crc2 0028  
                ___param_bank 000000                 _atualiza_Tela 0B0E                   _Delay10TCYx 1A04  
       _flagDespertadorLigado 0039                  _WriteCmdXLCD 17D4                   _Delay1KTCYx 19F4  
                       ?_atoi 001D                 ?_SetDDRamAddr 0001                         ?_main 0001  
             __end_of___awdiv 13EE                         STR_10 0832                         STR_11 0850  
          _verificaCRCBUFFCOM 145E               __end_of___awmod 145E               ??_printaDisplay 001C  
             ___awdiv@divisor 0019               __end_of___lwdiv 162A                         i1l130 00AE  
                       i1l124 0072                         i1l126 0080               __end_of___lwmod 1756  
             ___awdiv@counter 001B                         _RCREG 000FAE                         _RCSTA 000FAB  
                       _SPBRG 000FAF                         _PORTB 000F81                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD         __size_of_Delay10KTCYx 0016  
                       _TXSTA 000FAC                         _crc16 1088           ?_verificaCRCBUFFCOM 0001  
             __end_of_dpowers 080B               __end_of_isdigit 1990               __end_of_pic_isr 00F6  
                       atoi@a 0022                         atoi@s 001D                         pclath 000FFA  
                       tablat 000FF5               __end_of_tx_data 18BE                         status 000FD8  
             __end_of_sprintf 0E3C             ??_setaDespertador 002F               __initialization 1580  
              ?_atualiza_Tela 0001          ??_verificaCRCBUFFCOM 0024                  __end_of_atoi 1228  
                __end_of_main 1088         __end_ofi1_Delay10TCYx 1A24              __end_of_BusyXLCD 1886  
                _Delay10KTCYx 19CC         __size_of_DelayPORXLCD 0008                ??_SetDDRamAddr 0018  
  __end_of_trata_relogio_data 0F6C              __end_of_OpenXLCD 12CC    __end_of_calculaCRCBUFFRESP 194C  
                      ??_atoi 001F                        ??_main 002F                 __activetblptr 000002  
               _WriteDataXLCD 1796      __size_ofi1_DelayFor18TCY 0008       __end_ofi1_printaDisplay 1A44  
            _tempoDespertador 0036                        ?_crc16 0017                        _ADCON1 000FC1  
            ___awdiv@dividend 0017                        i1l2323 1A16                        i1l2931 007C  
                      _TMR0IF 007F92                  _DelayPORXLCD 1A2C                        ___wmul 194C  
                   ??___awdiv 001B                        crc16@i 001F                     ??___awmod 001B  
      __size_of_maquinaEstado 0046                     ??___lwdiv 001B                     ??___lwmod 0022  
                      _estado 003D                        _memcpy 1756                        clear_0 15B8  
                      clear_1 15C4              ___awdiv@quotient 001D               ___awmod@divisor 0019  
             ___awmod@counter 001B                        _versao 00A5                ?_WriteDataXLCD 0001  
                      _strlen 1812     atualiza_Tela@troca_ou_nao 0097                  __pdataCOMRAM 0048  
                   ??_isdigit 0017                     ??_pic_isr 0006                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
           _converteAnoString 18F2                     ??_tx_data 0017                     ??_sprintf 0023  
    verificaCRCBUFFCOM@CRC_OK 002A            ?_converteAnoString 002B                    __accesstop 0060  
     __end_of__initialization 15CA               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
             ??_atualiza_Tela 002F         calculaCRCBUFFRESP@crc 0024           ??_converteAnoString 002D  
              __pcstackCOMRAM 0001                  __pidataBANK0 19E2                 __end_of_crc16 115A  
                _data_horario 0060          i1SetDDRamAddr@DDaddr 0005     __end_of_converteAnoString 1920  
            ?i1_printaDisplay 0001                       ??_crc16 001B                 _maquinaEstado 16CE  
      __size_of_DelayFor18TCY 0008             ??i1_DelayFor18TCY 0002                    __pbssBANK0 0060  
          __size_of_enviaByte 001E                     ?_BusyXLCD 0001               WriteCmdXLCD@cmd 0018  
        __end_of_SetDDRamAddr 167C            __size_of_init_XLCD 001E                     ?_OpenXLCD 0001  
           WriteDataXLCD@data 0018                  ?_Delay10TCYx 0001                       ?___wmul 0017  
             ??_WriteDataXLCD 0018                  ?_Delay1KTCYx 0001                       ?_memcpy 001D  
      verificaAnoBissexto@ano 001D                       _BUFFCOM 003E                       ?_strlen 0017  
        converteAnoString@ano 002B                ?_maquinaEstado 0001               _setaDespertador 12CC  
          __size_of_putrsXLCD 005C                    ??_BusyXLCD 0018                    ??_OpenXLCD 001C  
__size_of_verificaAnoBissexto 005C                       __Hparam 0000                       __Lparam 0000  
                     ___awdiv 136A                 _DelayFor18TCY 1A34                       ___awmod 13EE  
             __size_of___wmul 0026                       ___lwdiv 15D8                       ___lwmod 1714  
                __psmallconst 0800             __end_of_enviaByte 19AE                       __pcinit 1580  
             __size_of_memcpy 0040               putrsXLCD@buffer 002D               Delay10TCYx@unit 0017  
                     __ramtop 0800                       __ptext0 0F6C                       __ptext1 0E3C  
                     __ptext2 14C8                       __ptext3 12CC                       __ptext4 16CE  
                     __ptext5 145E                       __ptext6 1886                       __ptext7 0866  
                     __ptext8 1812                       __ptext9 1A24             __end_of_init_XLCD 19CC  
                   _T0CONbits 000FD5               __size_of_strlen 003A                       _dpowers 0801  
                     _isdigit 1972                       _pic_isr 0018         __end_of_printaDisplay 1A2C  
  __size_of_converteAnoString 002E              ___awmod@dividend 0017       __size_ofi1_SetDDRamAddr 0052  
                     _tx_data 1886                       _sprintf 0CEA          end_of_initialization 15CA  
          _trata_relogio_data 0E3C            _calculaCRCBUFFRESP 1920                       memcpy@d 0023  
                     memcpy@n 0021                       memcpy@s 0025                 __Lmediumconst 0000  
                  _tela_atual 0035           ?_trata_relogio_data 0001           ?_calculaCRCBUFFRESP 0001  
               enviaByte@BYTE 0017                ?_DelayFor18TCY 0001   __size_of_verificaCRCBUFFCOM 006A  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE                       strlen@s 0017             __end_of_putrsXLCD 1580  
                   _PORTCbits 000F82                     _PORTDbits 000F83          ??_trata_relogio_data 0021  
        ??_calculaCRCBUFFRESP 0024       __end_of_setaDespertador 136A               ??_maquinaEstado 002F  
                   _TRISBbits 000F93                     _TRISCbits 000F94         __size_of_SetDDRamAddr 0052  
      __size_ofi1_Delay10TCYx 0010                 ?_trataComando 0001         verificaCRCBUFFCOM@crc 002B  
              __end_of___wmul 1972          __size_of_Delay10TCYx 0010                 __pidataCOMRAM 1A4C  
              __end_of_memcpy 1796                  _SetDDRamAddr 162A               i1_DelayFor18TCY 1A44  
          _horarioDespertador 002F          __size_of_Delay1KTCYx 0010            SetDDRamAddr@DDaddr 001B  
              __end_of_strlen 184C           start_initialization 1580                ??_trataComando 002F  
           __size_of_BusyXLCD 003A                  _pegaHoraData 0045               ??_DelayFor18TCY 0018  
       __end_of_atualiza_Tela 0CEA             __size_of_OpenXLCD 00A4                      ??___wmul 001B  
               ?_WriteCmdXLCD 0001                   tx_data@cont 0017                 i1_Delay10TCYx 1A14  
                 __pdataBANK0 0099                      ??_memcpy 0023                   crc16@data_p 0017  
                    ??_strlen 0019                   crc16@length 0019              ?_setaDespertador 0001  
              i1_SetDDRamAddr 167C                   __pbssCOMRAM 002F           _verificaAnoBissexto 14C8  
               __pcstackBANK0 0083                  _isdigit$1102 0018               Delay1KTCYx@unit 0017  
                 sprintf@flag 0026      __size_ofi1_printaDisplay 0008                   sprintf@prec 0027  
                   crc16@data 0020          ?_verificaAnoBissexto 001D              ___lwdiv@dividend 0017  
     __end_ofi1_DelayFor18TCY 1A4C                ??_WriteCmdXLCD 0018                ?i1_Delay10TCYx 0001  
                    ?___awdiv 0017                      ?___awmod 0017                 ?_Delay10KTCYx 0001  
                    ?___lwdiv 0017                      ?___lwmod 001E                   __pintcodelo 0018  
                   _botaoHora 0038                   _flagSegundo 003B         __end_of_WriteDataXLCD 17D4  
      __end_ofi1_SetDDRamAddr 16CE                   __smallconst 0800                      ?_isdigit 0001  
                   _enviaByte 1990                      ?_pic_isr 0001                     _init_XLCD 19AE  
              __size_of_crc16 00D2              ___lwdiv@quotient 001C                      ?_tx_data 0001  
                    ?_sprintf 0083                      _BUFFRESP 007C             _acionaDespertador 18BE  
          ?_acionaDespertador 0001                ___wmul@product 001B                      _LATBbits 000F8A  
       ??_verificaAnoBissexto 001F                 ?_DelayPORXLCD 0001                      i1u323_27 1A18  
                    i1u185_25 1692                      _PIR1bits 000F9E               OpenXLCD@lcdtype 001C  
         ??_acionaDespertador 0017                ??_Delay10KTCYx 0017             ___wmul@multiplier 0017  
             ?i1_SetDDRamAddr 0001          __end_of_trataComando 0B0E                     main@botao 0098  
                  ?_enviaByte 0001                     _putrsXLCD 1524              Delay10KTCYx@unit 0018  
                  ?_init_XLCD 0001     __end_of_acionaDespertador 18F2                     copy_data0 1594  
                    _BusyXLCD 184C                ??_DelayPORXLCD 0018                      _OpenXLCD 1228  
  __end_of_verificaCRCBUFFCOM 14C8                      __Hrparam 0000               ??i1_Delay10TCYx 0001  
                    __Lrparam 0000        __size_of_printaDisplay 0008             ??i1_printaDisplay 0006  
            ?i1_DelayFor18TCY 0001              __size_of___awdiv 0084              __size_of___awmod 0070  
            __size_of___lwdiv 0052              __size_of___lwmod 0042                    sprintf@val 0028  
                  ?_putrsXLCD 002D                      crc16@crc 0022   __size_of_trata_relogio_data 0130  
 __size_of_calculaCRCBUFFRESP 002C              __size_of_isdigit 001E              __size_of_pic_isr 00DE  
                    _dias_mes 0099               ___lwdiv@divisor 0019               ___lwdiv@counter 001B  
       __end_of_maquinaEstado 1714                      __ptext10 1756                      __ptext11 1920  
                    __ptext20 18BE                      __ptext12 1088                      __ptext21 115A  
                    __ptext13 0B0E                      __ptext30 162A                      __ptext22 1972  
                    __ptext14 1524                      __ptext31 1A2C                      __ptext23 194C  
                    __ptext15 1796                      __ptext40 1A44                      __ptext32 19F4  
                    __ptext24 13EE                      __ptext16 18F2                      __ptext41 1A14  
                    __ptext33 19CC                      __ptext25 136A                      __ptext17 0CEA  
                    __ptext34 184C                      __ptext26 1990                      __ptext18 1714  
                    __ptext35 1A34                      __ptext27 19AE                      __ptext19 15D8  
                    __ptext36 1A04                      __ptext28 1228                      __ptext29 17D4  
                    __ptext38 1A3C                      __ptext39 167C                      _botaoMin 0037  
        __end_of_WriteCmdXLCD 1812              __size_of_tx_data 0038              __size_of_sprintf 0152  
               __size_of_atoi 00CE                 __size_of_main 011C       converteAnoString@anoStr 0093  
               ??_Delay10TCYx 0017                      int$flags 0049                      atoi@sign 0021  
               ??_Delay1KTCYx 0017                      _virouDia 0048                   ??_enviaByte 0017  
                  _INTCONbits 000FF2                      memcpy@d1 001D                      memcpy@s1 001F  
               _printaDisplay 1A24                   ??_init_XLCD 001D    __size_of_acionaDespertador 0034  
                    isdigit@c 0019          __end_of_Delay10KTCYx 19E2                      intlevel1 0000  
                   sprintf@ap 0024                     sprintf@sp 0083              ___lwmod@dividend 001E  
       __end_of_DelayFor18TCY 1A3C         __size_of_trataComando 02A8           __end_of_Delay10TCYx 1A14  
                    sprintf@c 002A                      sprintf@f 0085          __end_of_DelayPORXLCD 1A34  
                 ??_putrsXLCD 002F               ___lwmod@divisor 0020                      strlen@cp 001B  
              ?_printaDisplay 0001           __end_of_Delay1KTCYx 1A04               ___lwmod@counter 0022  
      __size_of_atualiza_Tela 01DC      __size_of_setaDespertador 009E                  _trataComando 0866  
