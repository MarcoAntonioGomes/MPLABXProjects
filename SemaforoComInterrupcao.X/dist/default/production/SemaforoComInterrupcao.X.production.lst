

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Mar 31 17:20:02 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  000866                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _verdeAcesso
    57  000866  01                 	db	1
    58                           
    59                           	psect	smallconst
    60  000800                     __psmallconst:
    61                           	opt stack 0
    62  000800  00                 	db	0
    63  000801                     _display:
    64                           	opt stack 0
    65  000801  3F                 	db	63
    66  000802  06                 	db	6
    67  000803  5B                 	db	91
    68  000804  4F                 	db	79
    69  000805  66                 	db	102
    70  000806  6D                 	db	109
    71  000807  7D                 	db	125
    72  000808  07                 	db	7
    73  000809  7F                 	db	127
    74  00080A  6F                 	db	111
    75  00080B                     __end_of_display:
    76                           	opt stack 0
    77  0000                     _TMR0	set	4054
    78  0000                     _T0CONbits	set	4053
    79  0000                     _TRISC	set	3988
    80  0000                     _TRISB	set	3987
    81  0000                     _ADCON1	set	4033
    82  0000                     _INTCONbits	set	4082
    83  0000                     _PORTCbits	set	3970
    84  0000                     _PORTB	set	3969
    85  0000                     _TMR0IF	set	32658
    86                           
    87                           ; #config settings
    88  00080B  00                 	db	0	; dummy byte at the end
    89  0000                     
    90                           	psect	cinit
    91  00083C                     __pcinit:
    92                           	opt stack 0
    93  00083C                     start_initialization:
    94                           	opt stack 0
    95  00083C                     __initialization:
    96                           	opt stack 0
    97                           
    98                           ; Initialize objects allocated to COMRAM (1 bytes)
    99                           ; load TBLPTR registers with __pidataCOMRAM
   100  00083C  0E66               	movlw	low __pidataCOMRAM
   101  00083E  6EF6               	movwf	tblptrl,c
   102  000840  0E08               	movlw	high __pidataCOMRAM
   103  000842  6EF7               	movwf	tblptrh,c
   104  000844  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   105  000846  6EF8               	movwf	tblptru,c
   106  000848  0009               	tblrd		*+	;fetch initializer
   107  00084A  CFF5 F015          	movff	tablat,__pdataCOMRAM
   108                           
   109                           ; Clear objects allocated to COMRAM (3 bytes)
   110  00084E  6A14               	clrf	(__pbssCOMRAM+2)& (0+255),c
   111  000850  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
   112  000852  6A12               	clrf	__pbssCOMRAM& (0+255),c
   113  000854                     end_of_initialization:
   114                           	opt stack 0
   115  000854                     __end_of__initialization:
   116                           	opt stack 0
   117  000854  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   118  000856  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   119  000858  0E00               	movlw	low (__Lsmallconst shr (0+16))
   120  00085A  6EF8               	movwf	tblptru,c
   121  00085C  0E08               	movlw	high __Lsmallconst
   122  00085E  6EF7               	movwf	tblptrh,c
   123  000860  0100               	movlb	0
   124  000862  EF06  F004         	goto	_main	;jump to C main() function
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           tblptrl	equ	0xFF6
   128                           tablat	equ	0xFF5
   129                           
   130                           	psect	bssCOMRAM
   131  000012                     __pbssCOMRAM:
   132                           	opt stack 0
   133  000012                     _vermelhoAcesso:
   134                           	opt stack 0
   135  000012                     	ds	1
   136  000013                     _amareloAcesso:
   137                           	opt stack 0
   138  000013                     	ds	1
   139  000014                     _cont:
   140                           	opt stack 0
   141  000014                     	ds	1
   142                           tblptru	equ	0xFF8
   143                           tblptrh	equ	0xFF7
   144                           tblptrl	equ	0xFF6
   145                           tablat	equ	0xFF5
   146                           
   147                           	psect	dataCOMRAM
   148  000015                     __pdataCOMRAM:
   149                           	opt stack 0
   150  000015                     _verdeAcesso:
   151                           	opt stack 0
   152  000015                     	ds	1
   153                           tblptru	equ	0xFF8
   154                           tblptrh	equ	0xFF7
   155                           tblptrl	equ	0xFF6
   156                           tablat	equ	0xFF5
   157                           
   158                           	psect	cstackCOMRAM
   159  000001                     __pcstackCOMRAM:
   160                           	opt stack 0
   161  000001                     ??_pic_isr:
   162  000001                     
   163                           ; 1 bytes @ 0x0
   164  000001                     	ds	17
   165  000012                     tblptru	equ	0xFF8
   166                           tblptrh	equ	0xFF7
   167                           tblptrl	equ	0xFF6
   168                           tablat	equ	0xFF5
   169                           
   170                           ; 1 bytes @ 0x11
   171 ;;
   172 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   173 ;;
   174 ;; *************** function _main *****************
   175 ;; Defined at:
   176 ;;		line 69 in file "main.c"
   177 ;; Parameters:    Size  Location     Type
   178 ;;		None
   179 ;; Auto vars:     Size  Location     Type
   180 ;;		None
   181 ;; Return value:  Size  Location     Type
   182 ;;                  1    wreg      void 
   183 ;; Registers used:
   184 ;;		wreg, status,2
   185 ;; Tracked objects:
   186 ;;		On entry : 0/0
   187 ;;		On exit  : 0/0
   188 ;;		Unchanged: 0/0
   189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   190 ;;      Params:         0       0       0       0       0       0       0       0       0
   191 ;;      Locals:         0       0       0       0       0       0       0       0       0
   192 ;;      Temps:          0       0       0       0       0       0       0       0       0
   193 ;;      Totals:         0       0       0       0       0       0       0       0       0
   194 ;;Total ram usage:        0 bytes
   195 ;; Hardware stack levels required when called:    1
   196 ;; This function calls:
   197 ;;		Nothing
   198 ;; This function is called by:
   199 ;;		Startup code after reset
   200 ;; This function uses a non-reentrant model
   201 ;;
   202                           
   203                           	psect	text0
   204  00080C                     __ptext0:
   205                           	opt stack 0
   206  00080C                     _main:
   207                           	opt stack 30
   208                           
   209                           ;main.c: 70: ADCON1 = 0x0F;
   210                           
   211                           ;incstack = 0
   212  00080C  0E0F               	movlw	15
   213  00080E  6EC1               	movwf	4033,c	;volatile
   214                           
   215                           ;main.c: 71: TRISB = 0x00;
   216  000810  0E00               	movlw	0
   217  000812  6E93               	movwf	3987,c	;volatile
   218                           
   219                           ;main.c: 72: TRISC = 0x00;
   220  000814  0E00               	movlw	0
   221  000816  6E94               	movwf	3988,c	;volatile
   222                           
   223                           ;main.c: 74: T0CONbits.TMR0ON = 0;
   224  000818  9ED5               	bcf	4053,7,c	;volatile
   225                           
   226                           ;main.c: 75: INTCONbits.TMR0IE = 1;
   227  00081A  8AF2               	bsf	intcon,5,c	;volatile
   228                           
   229                           ;main.c: 76: INTCONbits.TMR0IF = 0;
   230  00081C  94F2               	bcf	intcon,2,c	;volatile
   231                           
   232                           ;main.c: 77: T0CONbits.T08BIT = 0;
   233  00081E  9CD5               	bcf	4053,6,c	;volatile
   234                           
   235                           ;main.c: 78: T0CONbits.PSA = 0;
   236  000820  96D5               	bcf	4053,3,c	;volatile
   237                           
   238                           ;main.c: 79: T0CONbits.T0PS0 = 0;
   239  000822  90D5               	bcf	4053,0,c	;volatile
   240                           
   241                           ;main.c: 80: T0CONbits.T0PS1 = 1;
   242  000824  82D5               	bsf	4053,1,c	;volatile
   243                           
   244                           ;main.c: 81: T0CONbits.T0PS2 = 1;
   245  000826  84D5               	bsf	4053,2,c	;volatile
   246                           
   247                           ;main.c: 82: T0CONbits.T0CS = 0;
   248  000828  9AD5               	bcf	4053,5,c	;volatile
   249                           
   250                           ;main.c: 83: TMR0 = 26474;
   251  00082A  0E67               	movlw	103
   252  00082C  6ED7               	movwf	4055,c	;volatile
   253  00082E  0E6A               	movlw	106
   254  000830  6ED6               	movwf	4054,c	;volatile
   255                           
   256                           ;main.c: 84: T0CONbits.TMR0ON = 1;
   257  000832  8ED5               	bsf	4053,7,c	;volatile
   258                           
   259                           ;main.c: 85: INTCONbits.GIEH = 1;
   260  000834  8EF2               	bsf	intcon,7,c	;volatile
   261                           
   262                           ;main.c: 86: INTCONbits.GIEL = 1;
   263  000836  8CF2               	bsf	intcon,6,c	;volatile
   264                           
   265                           ;main.c: 87: PORTCbits.RC2 = 1;
   266  000838  8482               	bsf	3970,2,c	;volatile
   267  00083A                     l38:
   268  00083A  D7FF               	goto	l38
   269  00083C                     __end_of_main:
   270                           	opt stack 0
   271                           tblptru	equ	0xFF8
   272                           tblptrh	equ	0xFF7
   273                           tblptrl	equ	0xFF6
   274                           tablat	equ	0xFF5
   275                           intcon	equ	0xFF2
   276                           
   277 ;; *************** function _pic_isr *****************
   278 ;; Defined at:
   279 ;;		line 28 in file "main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   293 ;;      Params:         0       0       0       0       0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0       0       0
   295 ;;      Temps:         17       0       0       0       0       0       0       0       0
   296 ;;      Totals:        17       0       0       0       0       0       0       0       0
   297 ;;Total ram usage:       17 bytes
   298 ;; Hardware stack levels used:    1
   299 ;; This function calls:
   300 ;;		Nothing
   301 ;; This function is called by:
   302 ;;		Interrupt level 1
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           	psect	intcodelo
   307  000018                     __pintcodelo:
   308                           	opt stack 0
   309  000018                     _pic_isr:
   310                           	opt stack 30
   311                           
   312                           ;incstack = 0
   313  000018  8016               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   314  00001A  CFD8 F001          	movff	status,??_pic_isr
   315  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
   316  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
   317  000026  CFFA F004          	movff	pclath,??_pic_isr+3
   318  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
   319  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
   320  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
   321  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
   322  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
   323  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
   324  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
   325  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
   326  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
   327  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
   328  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
   329  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
   330  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
   331                           
   332                           ;main.c: 32: if(TMR0IF){
   333  00005E  A4F2               	btfss	intcon,2,c	;volatile
   334  000060  D03A               	goto	i1l35
   335                           
   336                           ;main.c: 35: PORTB = display[cont];
   337  000062  5014               	movf	_cont,w,c
   338  000064  0D01               	mullw	1
   339  000066  0E01               	movlw	low _display
   340  000068  24F3               	addwf	prodl,w,c
   341  00006A  6EF6               	movwf	tblptrl,c
   342  00006C  0E08               	movlw	high _display
   343  00006E  20F4               	addwfc	prodh,w,c
   344  000070  6EF7               	movwf	tblptrh,c
   345  000072                     	if	0	;There are less than 3 active tblptr bytes
   346  000072                     	endif
   347  000072  0008               	tblrd		*
   348  000074  CFF5 FF81          	movff	tablat,3969	;volatile
   349                           
   350                           ;main.c: 38: if(cont == 5){
   351  000078  0E05               	movlw	5
   352  00007A  1814               	xorwf	_cont,w,c
   353  00007C  A4D8               	btfss	status,2,c
   354  00007E  D006               	goto	i1l649
   355                           
   356                           ;main.c: 39: PORTCbits.RC2 = 0;
   357  000080  9482               	bcf	3970,2,c	;volatile
   358                           
   359                           ;main.c: 40: PORTCbits.RC1 = 1;
   360  000082  8282               	bsf	3970,1,c	;volatile
   361                           
   362                           ;main.c: 41: cont = 0;
   363  000084  0E00               	movlw	0
   364  000086  6E14               	movwf	_cont,c
   365                           
   366                           ;main.c: 42: verdeAcesso = 0;
   367  000088  0E00               	movlw	0
   368  00008A  6E15               	movwf	_verdeAcesso,c
   369  00008C                     i1l649:
   370                           
   371                           ;main.c: 43: }
   372                           ;main.c: 44: if((cont == 2 && amareloAcesso == 0)&&(verdeAcesso == 0)){
   373  00008C  0E02               	movlw	2
   374  00008E  1814               	xorwf	_cont,w,c
   375  000090  A4D8               	btfss	status,2,c
   376  000092  D00C               	goto	i1l659
   377  000094  5013               	movf	_amareloAcesso,w,c
   378  000096  A4D8               	btfss	status,2,c
   379  000098  D009               	goto	i1l659
   380  00009A  5015               	movf	_verdeAcesso,w,c
   381  00009C  A4D8               	btfss	status,2,c
   382  00009E  D006               	goto	i1l659
   383                           
   384                           ;main.c: 45: PORTCbits.RC1 = 0;
   385  0000A0  9282               	bcf	3970,1,c	;volatile
   386                           
   387                           ;main.c: 46: PORTCbits.RC0 = 1;
   388  0000A2  8082               	bsf	3970,0,c	;volatile
   389                           
   390                           ;main.c: 47: cont = 0;
   391  0000A4  0E00               	movlw	0
   392  0000A6  6E14               	movwf	_cont,c
   393                           
   394                           ;main.c: 48: amareloAcesso =1;
   395  0000A8  0E01               	movlw	1
   396  0000AA  6E13               	movwf	_amareloAcesso,c
   397  0000AC                     i1l659:
   398                           
   399                           ;main.c: 49: }
   400                           ;main.c: 50: if((cont == 4) &&(verdeAcesso == 0)){
   401  0000AC  0E04               	movlw	4
   402  0000AE  1814               	xorwf	_cont,w,c
   403  0000B0  A4D8               	btfss	status,2,c
   404  0000B2  D00B               	goto	i1l667
   405  0000B4  5015               	movf	_verdeAcesso,w,c
   406  0000B6  A4D8               	btfss	status,2,c
   407  0000B8  D008               	goto	i1l667
   408                           
   409                           ;main.c: 51: PORTCbits.RC0 = 0;
   410  0000BA  9082               	bcf	3970,0,c	;volatile
   411                           
   412                           ;main.c: 52: PORTCbits.RC2 = 1;
   413  0000BC  8482               	bsf	3970,2,c	;volatile
   414                           
   415                           ;main.c: 53: verdeAcesso = 1;
   416  0000BE  0E01               	movlw	1
   417  0000C0  6E15               	movwf	_verdeAcesso,c
   418                           
   419                           ;main.c: 54: amareloAcesso =0;
   420  0000C2  0E00               	movlw	0
   421  0000C4  6E13               	movwf	_amareloAcesso,c
   422                           
   423                           ;main.c: 55: cont = 0;
   424  0000C6  0E00               	movlw	0
   425  0000C8  6E14               	movwf	_cont,c
   426  0000CA                     i1l667:
   427                           
   428                           ;main.c: 56: }
   429                           ;main.c: 59: cont++;
   430  0000CA  2A14               	incf	_cont,f,c
   431                           
   432                           ;main.c: 60: TMR0 =26474;
   433  0000CC  0E67               	movlw	103
   434  0000CE  6ED7               	movwf	4055,c	;volatile
   435  0000D0  0E6A               	movlw	106
   436  0000D2  6ED6               	movwf	4054,c	;volatile
   437                           
   438                           ;main.c: 61: INTCONbits.TMR0IF = 0;
   439  0000D4  94F2               	bcf	intcon,2,c	;volatile
   440  0000D6                     i1l35:
   441  0000D6  C011  FFF5         	movff	??_pic_isr+16,tablat
   442  0000DA  C010  FFF8         	movff	??_pic_isr+15,tblptru
   443  0000DE  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
   444  0000E2  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
   445  0000E6  C00D  FFF4         	movff	??_pic_isr+12,prodh
   446  0000EA  C00C  FFF3         	movff	??_pic_isr+11,prodl
   447  0000EE  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
   448  0000F2  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
   449  0000F6  C009  FFE2         	movff	??_pic_isr+8,fsr1h
   450  0000FA  C008  FFE1         	movff	??_pic_isr+7,fsr1l
   451  0000FE  C007  FFEA         	movff	??_pic_isr+6,fsr0h
   452  000102  C006  FFE9         	movff	??_pic_isr+5,fsr0l
   453  000106  C005  FFFB         	movff	??_pic_isr+4,pclatu
   454  00010A  C004  FFFA         	movff	??_pic_isr+3,pclath
   455  00010E  C003  FFE0         	movff	??_pic_isr+2,bsr
   456  000112  C002  FFE8         	movff	??_pic_isr+1,wreg
   457  000116  C001  FFD8         	movff	??_pic_isr,status
   458  00011A  9016               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   459  00011C  0010               	retfie	
   460  00011E                     __end_of_pic_isr:
   461                           	opt stack 0
   462                           pclatu	equ	0xFFB
   463                           pclath	equ	0xFFA
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           prodh	equ	0xFF4
   469                           prodl	equ	0xFF3
   470                           intcon	equ	0xFF2
   471                           fsr0h	equ	0xFEA
   472                           fsr0l	equ	0xFE9
   473                           wreg	equ	0xFE8
   474                           fsr1h	equ	0xFE2
   475                           fsr1l	equ	0xFE1
   476                           bsr	equ	0xFE0
   477                           fsr2h	equ	0xFDA
   478                           fsr2l	equ	0xFD9
   479                           status	equ	0xFD8
   480                           pclatu	equ	0xFFB
   481                           pclath	equ	0xFFA
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           prodh	equ	0xFF4
   487                           prodl	equ	0xFF3
   488                           intcon	equ	0xFF2
   489                           fsr0h	equ	0xFEA
   490                           fsr0l	equ	0xFE9
   491                           wreg	equ	0xFE8
   492                           fsr1h	equ	0xFE2
   493                           fsr1l	equ	0xFE1
   494                           bsr	equ	0xFE0
   495                           fsr2h	equ	0xFDA
   496                           fsr2l	equ	0xFD9
   497                           status	equ	0xFD8
   498                           
   499                           	psect	rparam
   500  0000                     pclatu	equ	0xFFB
   501                           pclath	equ	0xFFA
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           prodh	equ	0xFF4
   507                           prodl	equ	0xFF3
   508                           intcon	equ	0xFF2
   509                           fsr0h	equ	0xFEA
   510                           fsr0l	equ	0xFE9
   511                           wreg	equ	0xFE8
   512                           fsr1h	equ	0xFE2
   513                           fsr1l	equ	0xFE1
   514                           bsr	equ	0xFE0
   515                           fsr2h	equ	0xFDA
   516                           fsr2l	equ	0xFD9
   517                           status	equ	0xFD8
   518                           
   519                           	psect	temp
   520  000016                     btemp:
   521                           	opt stack 0
   522  000016                     	ds	1
   523  0000                     int$flags	set	btemp
   524                           pclatu	equ	0xFFB
   525                           pclath	equ	0xFFA
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           prodh	equ	0xFF4
   531                           prodl	equ	0xFF3
   532                           intcon	equ	0xFF2
   533                           fsr0h	equ	0xFEA
   534                           fsr0l	equ	0xFE9
   535                           wreg	equ	0xFE8
   536                           fsr1h	equ	0xFE2
   537                           fsr1l	equ	0xFE1
   538                           bsr	equ	0xFE0
   539                           fsr2h	equ	0xFDA
   540                           fsr2l	equ	0xFD9
   541                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      15       1       22.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      20        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Mar 31 17:20:02 2018

                     l38 083A                       bsr 000FE0                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     i1l35 00D6                     _TMR0 000FD6  
                   _cont 0014                     _main 080C                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0016  
                   prodh 000FF4                     prodl 000FF3                     start 011E  
           ___param_bank 000000                    ?_main 0001                    i1l649 008C  
                  i1l667 00CA                    i1l659 00AC                    _PORTB 000F81  
                  _TRISB 000F93                    _TRISC 000F94          __end_of_display 080B  
        __end_of_pic_isr 011E                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8          __initialization 083C             __end_of_main 083C  
                 ??_main 0012            __activetblptr 000001                   _ADCON1 000FC1  
                 _TMR0IF 007F92             __pdataCOMRAM 0015                ??_pic_isr 0001  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0854  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 083C                  __ramtop 0800                  __ptext0 080C  
                _display 0801                _T0CONbits 000FD5                  _pic_isr 0018  
   end_of_initialization 0854                _PORTCbits 000F82            __pidataCOMRAM 0866  
    start_initialization 083C            _amareloAcesso 0013              __pbssCOMRAM 0012  
            __pintcodelo 0018              __smallconst 0800                 ?_pic_isr 0001  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
       __size_of_pic_isr 0106            __size_of_main 0030                 int$flags 0016  
             _INTCONbits 000FF2                 intlevel1 0000              _verdeAcesso 0015  
         _vermelhoAcesso 0012  
